// Compiled by ClojureScript 0.0-2843 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2843";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__5316__delegate = function (args){
return console.log.apply(console,(function (){var G__5315 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5315) : cljs.core.into_array.call(null,G__5315));
})());
};
var G__5316 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__5317__i = 0, G__5317__a = new Array(arguments.length -  0);
while (G__5317__i < G__5317__a.length) {G__5317__a[G__5317__i] = arguments[G__5317__i + 0]; ++G__5317__i;}
  args = new cljs.core.IndexedSeq(G__5317__a,0);
} 
return G__5316__delegate.call(this,args);};
G__5316.cljs$lang$maxFixedArity = 0;
G__5316.cljs$lang$applyTo = (function (arglist__5318){
var args = cljs.core.seq(arglist__5318);
return G__5316__delegate(args);
});
G__5316.cljs$core$IFn$_invoke$arity$variadic = G__5316__delegate;
return G__5316;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__5320 = x;
return goog.isString(G__5320);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__5322 = x__$1;
return goog.typeOf(G__5322);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3801__auto__ = ty;
if(cljs.core.truth_(and__3801__auto__)){
return ty.cljs$lang$type;
} else {
return and__3801__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__5324 = obj;
return goog.typeOf(G__5324);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__5326 = Symbol;
return goog.typeOf(G__5326);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4700__auto___5328 = len;
var i_5329 = (0);
while(true){
if((i_5329 < n__4700__auto___5328)){
(new_arr[i_5329] = (arr[i_5329]));

var G__5330 = (i_5329 + (1));
i_5329 = G__5330;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__5331 = (i + (1));
i = G__5331;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__5340__delegate = function (array,i,idxs){
var G__5337 = aget;
var G__5338 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__5339 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5337,G__5338,G__5339) : cljs.core.apply.call(null,G__5337,G__5338,G__5339));
};
var G__5340 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__5341__i = 0, G__5341__a = new Array(arguments.length -  2);
while (G__5341__i < G__5341__a.length) {G__5341__a[G__5341__i] = arguments[G__5341__i + 2]; ++G__5341__i;}
  idxs = new cljs.core.IndexedSeq(G__5341__a,0);
} 
return G__5340__delegate.call(this,array,i,idxs);};
G__5340.cljs$lang$maxFixedArity = 2;
G__5340.cljs$lang$applyTo = (function (arglist__5342){
var array = cljs.core.first(arglist__5342);
arglist__5342 = cljs.core.next(arglist__5342);
var i = cljs.core.first(arglist__5342);
var idxs = cljs.core.rest(arglist__5342);
return G__5340__delegate(array,i,idxs);
});
G__5340.cljs$core$IFn$_invoke$arity$variadic = G__5340__delegate;
return G__5340;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__5343 = null;
if (arguments.length > 2) {
var G__5344__i = 0, G__5344__a = new Array(arguments.length -  2);
while (G__5344__i < G__5344__a.length) {G__5344__a[G__5344__i] = arguments[G__5344__i + 2]; ++G__5344__i;}
G__5343 = new cljs.core.IndexedSeq(G__5344__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__5343);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__5353__delegate = function (array,idx,idx2,idxv){
var G__5349 = aset;
var G__5350 = (array[idx]);
var G__5351 = idx2;
var G__5352 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5349,G__5350,G__5351,G__5352) : cljs.core.apply.call(null,G__5349,G__5350,G__5351,G__5352));
};
var G__5353 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__5354__i = 0, G__5354__a = new Array(arguments.length -  3);
while (G__5354__i < G__5354__a.length) {G__5354__a[G__5354__i] = arguments[G__5354__i + 3]; ++G__5354__i;}
  idxv = new cljs.core.IndexedSeq(G__5354__a,0);
} 
return G__5353__delegate.call(this,array,idx,idx2,idxv);};
G__5353.cljs$lang$maxFixedArity = 3;
G__5353.cljs$lang$applyTo = (function (arglist__5355){
var array = cljs.core.first(arglist__5355);
arglist__5355 = cljs.core.next(arglist__5355);
var idx = cljs.core.first(arglist__5355);
arglist__5355 = cljs.core.next(arglist__5355);
var idx2 = cljs.core.first(arglist__5355);
var idxv = cljs.core.rest(arglist__5355);
return G__5353__delegate(array,idx,idx2,idxv);
});
G__5353.cljs$core$IFn$_invoke$arity$variadic = G__5353__delegate;
return G__5353;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__5356 = null;
if (arguments.length > 3) {
var G__5357__i = 0, G__5357__a = new Array(arguments.length -  3);
while (G__5357__i < G__5357__a.length) {G__5357__a[G__5357__i] = arguments[G__5357__i + 3]; ++G__5357__i;}
G__5356 = new cljs.core.IndexedSeq(G__5357__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__5356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__5363 = (function (a,x){
a.push(x);

return a;
});
var G__5364 = [];
var G__5365 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5363,G__5364,G__5365) : cljs.core.reduce.call(null,G__5363,G__5364,G__5365));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__5366__i = 0, G__5366__a = new Array(arguments.length -  2);
while (G__5366__i < G__5366__a.length) {G__5366__a[G__5366__i] = arguments[G__5366__i + 2]; ++G__5366__i;}
  args = new cljs.core.IndexedSeq(G__5366__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__5367){
var obj = cljs.core.first(arglist__5367);
arglist__5367 = cljs.core.next(arglist__5367);
var s = cljs.core.first(arglist__5367);
var args = cljs.core.rest(arglist__5367);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj5369 = {};
return obj5369;
})();


cljs.core.IFn = (function (){var obj5371 = {};
return obj5371;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5417 = x__4457__auto__;
return goog.typeOf(G__5417);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5419 = x__4457__auto__;
return goog.typeOf(G__5419);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5421 = x__4457__auto__;
return goog.typeOf(G__5421);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5423 = x__4457__auto__;
return goog.typeOf(G__5423);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5425 = x__4457__auto__;
return goog.typeOf(G__5425);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5427 = x__4457__auto__;
return goog.typeOf(G__5427);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5429 = x__4457__auto__;
return goog.typeOf(G__5429);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5431 = x__4457__auto__;
return goog.typeOf(G__5431);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5433 = x__4457__auto__;
return goog.typeOf(G__5433);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5435 = x__4457__auto__;
return goog.typeOf(G__5435);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5437 = x__4457__auto__;
return goog.typeOf(G__5437);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5439 = x__4457__auto__;
return goog.typeOf(G__5439);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5441 = x__4457__auto__;
return goog.typeOf(G__5441);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5443 = x__4457__auto__;
return goog.typeOf(G__5443);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5445 = x__4457__auto__;
return goog.typeOf(G__5445);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5447 = x__4457__auto__;
return goog.typeOf(G__5447);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5449 = x__4457__auto__;
return goog.typeOf(G__5449);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5451 = x__4457__auto__;
return goog.typeOf(G__5451);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5453 = x__4457__auto__;
return goog.typeOf(G__5453);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5455 = x__4457__auto__;
return goog.typeOf(G__5455);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5457 = x__4457__auto__;
return goog.typeOf(G__5457);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__5459 = x__4457__auto__;
return goog.typeOf(G__5459);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj5461 = {};
return obj5461;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3801__auto__ = value;
if(and__3801__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3801__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4457__auto__ = (((value == null))?null:value);
return (function (){var or__3813__auto__ = (cljs.core._clone[(function (){var G__5465 = x__4457__auto__;
return goog.typeOf(G__5465);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._clone["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj5467 = {};
return obj5467;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._count[(function (){var G__5471 = x__4457__auto__;
return goog.typeOf(G__5471);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._count["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj5473 = {};
return obj5473;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._empty[(function (){var G__5477 = x__4457__auto__;
return goog.typeOf(G__5477);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._empty["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj5479 = {};
return obj5479;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._conj[(function (){var G__5483 = x__4457__auto__;
return goog.typeOf(G__5483);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._conj["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj5485 = {};
return obj5485;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._nth[(function (){var G__5491 = x__4457__auto__;
return goog.typeOf(G__5491);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._nth["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._nth[(function (){var G__5493 = x__4457__auto__;
return goog.typeOf(G__5493);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._nth["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj5495 = {};
return obj5495;
})();


cljs.core.ISeq = (function (){var obj5497 = {};
return obj5497;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._first[(function (){var G__5501 = x__4457__auto__;
return goog.typeOf(G__5501);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._first["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._rest[(function (){var G__5505 = x__4457__auto__;
return goog.typeOf(G__5505);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._rest["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj5507 = {};
return obj5507;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._next[(function (){var G__5511 = x__4457__auto__;
return goog.typeOf(G__5511);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._next["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj5513 = {};
return obj5513;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._lookup[(function (){var G__5519 = x__4457__auto__;
return goog.typeOf(G__5519);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._lookup["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._lookup[(function (){var G__5521 = x__4457__auto__;
return goog.typeOf(G__5521);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._lookup["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj5523 = {};
return obj5523;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__5527 = x__4457__auto__;
return goog.typeOf(G__5527);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._assoc[(function (){var G__5531 = x__4457__auto__;
return goog.typeOf(G__5531);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._assoc["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj5533 = {};
return obj5533;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._dissoc[(function (){var G__5537 = x__4457__auto__;
return goog.typeOf(G__5537);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj5539 = {};
return obj5539;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._key[(function (){var G__5543 = x__4457__auto__;
return goog.typeOf(G__5543);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._key["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._val[(function (){var G__5547 = x__4457__auto__;
return goog.typeOf(G__5547);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._val["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj5549 = {};
return obj5549;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._disjoin[(function (){var G__5553 = x__4457__auto__;
return goog.typeOf(G__5553);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj5555 = {};
return obj5555;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._peek[(function (){var G__5559 = x__4457__auto__;
return goog.typeOf(G__5559);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._peek["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._pop[(function (){var G__5563 = x__4457__auto__;
return goog.typeOf(G__5563);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._pop["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj5565 = {};
return obj5565;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._assoc_n[(function (){var G__5569 = x__4457__auto__;
return goog.typeOf(G__5569);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj5571 = {};
return obj5571;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._deref[(function (){var G__5575 = x__4457__auto__;
return goog.typeOf(G__5575);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._deref["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj5577 = {};
return obj5577;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._deref_with_timeout[(function (){var G__5581 = x__4457__auto__;
return goog.typeOf(G__5581);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj5583 = {};
return obj5583;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._meta[(function (){var G__5587 = x__4457__auto__;
return goog.typeOf(G__5587);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._meta["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj5589 = {};
return obj5589;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._with_meta[(function (){var G__5593 = x__4457__auto__;
return goog.typeOf(G__5593);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj5595 = {};
return obj5595;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._reduce[(function (){var G__5601 = x__4457__auto__;
return goog.typeOf(G__5601);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._reduce["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._reduce[(function (){var G__5603 = x__4457__auto__;
return goog.typeOf(G__5603);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._reduce["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj5605 = {};
return obj5605;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._kv_reduce[(function (){var G__5609 = x__4457__auto__;
return goog.typeOf(G__5609);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj5611 = {};
return obj5611;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._equiv[(function (){var G__5615 = x__4457__auto__;
return goog.typeOf(G__5615);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._equiv["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj5617 = {};
return obj5617;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._hash[(function (){var G__5621 = x__4457__auto__;
return goog.typeOf(G__5621);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._hash["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj5623 = {};
return obj5623;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._seq[(function (){var G__5627 = x__4457__auto__;
return goog.typeOf(G__5627);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._seq["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj5629 = {};
return obj5629;
})();


cljs.core.IList = (function (){var obj5631 = {};
return obj5631;
})();


cljs.core.IRecord = (function (){var obj5633 = {};
return obj5633;
})();


cljs.core.IReversible = (function (){var obj5635 = {};
return obj5635;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._rseq[(function (){var G__5639 = x__4457__auto__;
return goog.typeOf(G__5639);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._rseq["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj5641 = {};
return obj5641;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._sorted_seq[(function (){var G__5645 = x__4457__auto__;
return goog.typeOf(G__5645);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._sorted_seq_from[(function (){var G__5649 = x__4457__auto__;
return goog.typeOf(G__5649);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._entry_key[(function (){var G__5653 = x__4457__auto__;
return goog.typeOf(G__5653);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._comparator[(function (){var G__5657 = x__4457__auto__;
return goog.typeOf(G__5657);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._comparator["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj5659 = {};
return obj5659;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3801__auto__ = writer;
if(and__3801__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3801__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4457__auto__ = (((writer == null))?null:writer);
return (function (){var or__3813__auto__ = (cljs.core._write[(function (){var G__5663 = x__4457__auto__;
return goog.typeOf(G__5663);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._write["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3801__auto__ = writer;
if(and__3801__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3801__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4457__auto__ = (((writer == null))?null:writer);
return (function (){var or__3813__auto__ = (cljs.core._flush[(function (){var G__5667 = x__4457__auto__;
return goog.typeOf(G__5667);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._flush["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj5669 = {};
return obj5669;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._pr_writer[(function (){var G__5673 = x__4457__auto__;
return goog.typeOf(G__5673);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj5675 = {};
return obj5675;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3801__auto__ = d;
if(and__3801__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3801__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4457__auto__ = (((d == null))?null:d);
return (function (){var or__3813__auto__ = (cljs.core._realized_QMARK_[(function (){var G__5679 = x__4457__auto__;
return goog.typeOf(G__5679);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj5681 = {};
return obj5681;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._notify_watches[(function (){var G__5685 = x__4457__auto__;
return goog.typeOf(G__5685);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._add_watch[(function (){var G__5689 = x__4457__auto__;
return goog.typeOf(G__5689);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._remove_watch[(function (){var G__5693 = x__4457__auto__;
return goog.typeOf(G__5693);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj5695 = {};
return obj5695;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._as_transient[(function (){var G__5699 = x__4457__auto__;
return goog.typeOf(G__5699);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj5701 = {};
return obj5701;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._conj_BANG_[(function (){var G__5705 = x__4457__auto__;
return goog.typeOf(G__5705);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._persistent_BANG_[(function (){var G__5709 = x__4457__auto__;
return goog.typeOf(G__5709);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj5711 = {};
return obj5711;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._assoc_BANG_[(function (){var G__5715 = x__4457__auto__;
return goog.typeOf(G__5715);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj5717 = {};
return obj5717;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__5721 = x__4457__auto__;
return goog.typeOf(G__5721);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj5723 = {};
return obj5723;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__5727 = x__4457__auto__;
return goog.typeOf(G__5727);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._pop_BANG_[(function (){var G__5731 = x__4457__auto__;
return goog.typeOf(G__5731);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj5733 = {};
return obj5733;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__5737 = x__4457__auto__;
return goog.typeOf(G__5737);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj5739 = {};
return obj5739;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._compare[(function (){var G__5743 = x__4457__auto__;
return goog.typeOf(G__5743);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._compare["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj5745 = {};
return obj5745;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._drop_first[(function (){var G__5749 = x__4457__auto__;
return goog.typeOf(G__5749);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj5751 = {};
return obj5751;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._chunked_first[(function (){var G__5755 = x__4457__auto__;
return goog.typeOf(G__5755);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._chunked_rest[(function (){var G__5759 = x__4457__auto__;
return goog.typeOf(G__5759);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj5761 = {};
return obj5761;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._chunked_next[(function (){var G__5765 = x__4457__auto__;
return goog.typeOf(G__5765);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj5767 = {};
return obj5767;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._name[(function (){var G__5771 = x__4457__auto__;
return goog.typeOf(G__5771);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._name["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._namespace[(function (){var G__5775 = x__4457__auto__;
return goog.typeOf(G__5775);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._namespace["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj5777 = {};
return obj5777;
})();


cljs.core.IReset = (function (){var obj5779 = {};
return obj5779;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._reset_BANG_[(function (){var G__5783 = x__4457__auto__;
return goog.typeOf(G__5783);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj5785 = {};
return obj5785;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._swap_BANG_[(function (){var G__5795 = x__4457__auto__;
return goog.typeOf(G__5795);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._swap_BANG_[(function (){var G__5797 = x__4457__auto__;
return goog.typeOf(G__5797);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._swap_BANG_[(function (){var G__5799 = x__4457__auto__;
return goog.typeOf(G__5799);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._swap_BANG_[(function (){var G__5801 = x__4457__auto__;
return goog.typeOf(G__5801);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj5803 = {};
return obj5803;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._vreset_BANG_[(function (){var G__5807 = x__4457__auto__;
return goog.typeOf(G__5807);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj5809 = {};
return obj5809;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._iterator[(function (){var G__5813 = x__4457__auto__;
return goog.typeOf(G__5813);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._iterator["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__5816 = (4294967295);
var G__5817 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5816,G__5817) : Math.imul.call(null,G__5816,G__5817));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__5820 = a;
var G__5821 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5820,G__5821) : Math.imul.call(null,G__5820,G__5821));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__5822 = (i + (2));
var G__5823 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__5822;
h1 = G__5823;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj5825 = {};
return obj5825;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__5826 = (i + (1));
var G__5827 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__5826;
hash = G__5827;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj5831 = {};
return obj5831;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__5834 = o;
if(G__5834){
var bit__4487__auto__ = (G__5834.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4487__auto__) || (G__5834.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__5835 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5835) : Math.floor.call(null,G__5835));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3801__auto__ = cljs.core.not(a.ns);
if(and__3801__auto__){
return b.ns;
} else {
return and__3801__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__5842 = a.ns;
var G__5843 = b.ns;
return goog.array.defaultCompare(G__5842,G__5843);
})();
if(((0) === nsc)){
var G__5844 = a.name;
var G__5845 = b.name;
return goog.array.defaultCompare(G__5844,G__5845);
} else {
return nsc;
}
}
} else {
var G__5846 = a.name;
var G__5847 = b.name;
return goog.array.defaultCompare(G__5846,G__5847);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4234__auto__ = self__._hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__5849 = null;
var G__5849__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__5849__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__5849 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__5849__2.call(this,self__,coll);
case 3:
return G__5849__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5849.cljs$core$IFn$_invoke$arity$2 = G__5849__2;
G__5849.cljs$core$IFn$_invoke$arity$3 = G__5849__3;
return G__5849;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args5848){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5848)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__5897 = null;
var G__5897__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__5897__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__5897__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__5897__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__5897__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__5897__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__5897__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__5897__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__5897__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__5897__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__5897__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__5897__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__5897__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__5897__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__5897__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__5897__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__5897__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__5897__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__5897__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__5897__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__5897__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__5897__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5853 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5854 = a;
var G__5855 = b;
var G__5856 = c;
var G__5857 = d;
var G__5858 = e;
var G__5859 = f;
var G__5860 = g;
var G__5861 = h;
var G__5862 = i;
var G__5863 = j;
var G__5864 = k;
var G__5865 = l;
var G__5866 = m;
var G__5867 = n;
var G__5868 = o;
var G__5869 = p;
var G__5870 = q;
var G__5871 = r;
var G__5872 = s;
var G__5873 = t;
var G__5874 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5853,G__5854,G__5855,G__5856,G__5857,G__5858,G__5859,G__5860,G__5861,G__5862,G__5863,G__5864,G__5865,G__5866,G__5867,G__5868,G__5869,G__5870,G__5871,G__5872,G__5873,G__5874) : cljs.core.apply.call(null,G__5853,G__5854,G__5855,G__5856,G__5857,G__5858,G__5859,G__5860,G__5861,G__5862,G__5863,G__5864,G__5865,G__5866,G__5867,G__5868,G__5869,G__5870,G__5871,G__5872,G__5873,G__5874));
});
G__5897 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__5897__1.call(this,self__);
case 2:
return G__5897__2.call(this,self__,a);
case 3:
return G__5897__3.call(this,self__,a,b);
case 4:
return G__5897__4.call(this,self__,a,b,c);
case 5:
return G__5897__5.call(this,self__,a,b,c,d);
case 6:
return G__5897__6.call(this,self__,a,b,c,d,e);
case 7:
return G__5897__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__5897__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__5897__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__5897__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__5897__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__5897__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__5897__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__5897__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__5897__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__5897__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__5897__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__5897__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__5897__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__5897__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__5897__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__5897__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5897.cljs$core$IFn$_invoke$arity$1 = G__5897__1;
G__5897.cljs$core$IFn$_invoke$arity$2 = G__5897__2;
G__5897.cljs$core$IFn$_invoke$arity$3 = G__5897__3;
G__5897.cljs$core$IFn$_invoke$arity$4 = G__5897__4;
G__5897.cljs$core$IFn$_invoke$arity$5 = G__5897__5;
G__5897.cljs$core$IFn$_invoke$arity$6 = G__5897__6;
G__5897.cljs$core$IFn$_invoke$arity$7 = G__5897__7;
G__5897.cljs$core$IFn$_invoke$arity$8 = G__5897__8;
G__5897.cljs$core$IFn$_invoke$arity$9 = G__5897__9;
G__5897.cljs$core$IFn$_invoke$arity$10 = G__5897__10;
G__5897.cljs$core$IFn$_invoke$arity$11 = G__5897__11;
G__5897.cljs$core$IFn$_invoke$arity$12 = G__5897__12;
G__5897.cljs$core$IFn$_invoke$arity$13 = G__5897__13;
G__5897.cljs$core$IFn$_invoke$arity$14 = G__5897__14;
G__5897.cljs$core$IFn$_invoke$arity$15 = G__5897__15;
G__5897.cljs$core$IFn$_invoke$arity$16 = G__5897__16;
G__5897.cljs$core$IFn$_invoke$arity$17 = G__5897__17;
G__5897.cljs$core$IFn$_invoke$arity$18 = G__5897__18;
G__5897.cljs$core$IFn$_invoke$arity$19 = G__5897__19;
G__5897.cljs$core$IFn$_invoke$arity$20 = G__5897__20;
G__5897.cljs$core$IFn$_invoke$arity$21 = G__5897__21;
G__5897.cljs$core$IFn$_invoke$arity$22 = G__5897__22;
return G__5897;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args5852){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5852)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__5875 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5876 = a;
var G__5877 = b;
var G__5878 = c;
var G__5879 = d;
var G__5880 = e;
var G__5881 = f;
var G__5882 = g;
var G__5883 = h;
var G__5884 = i;
var G__5885 = j;
var G__5886 = k;
var G__5887 = l;
var G__5888 = m;
var G__5889 = n;
var G__5890 = o;
var G__5891 = p;
var G__5892 = q;
var G__5893 = r;
var G__5894 = s;
var G__5895 = t;
var G__5896 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5875,G__5876,G__5877,G__5878,G__5879,G__5880,G__5881,G__5882,G__5883,G__5884,G__5885,G__5886,G__5887,G__5888,G__5889,G__5890,G__5891,G__5892,G__5893,G__5894,G__5895,G__5896) : cljs.core.apply.call(null,G__5875,G__5876,G__5877,G__5878,G__5879,G__5880,G__5881,G__5882,G__5883,G__5884,G__5885,G__5886,G__5887,G__5888,G__5889,G__5890,G__5891,G__5892,G__5893,G__5894,G__5895,G__5896));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__5899 = x;
if(G__5899){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto__ = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return G__5899.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__5899.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5899);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5899);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__5901 = value;
if(G__5901){
var bit__4494__auto__ = (G__5901.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4494__auto__) || (G__5901.cljs$core$ICloneable$)){
return true;
} else {
if((!G__5901.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5901);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5901);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5903 = coll;
if(G__5903){
var bit__4487__auto__ = (G__5903.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4487__auto__) || (G__5903.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5905 = coll;
if(G__5905){
var bit__4487__auto__ = (G__5905.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4487__auto__) || (G__5905.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__5907 = coll;
if(G__5907){
var bit__4487__auto__ = (G__5907.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4487__auto__) || (G__5907.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5909 = coll;
if(G__5909){
var bit__4487__auto__ = (G__5909.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4487__auto__) || (G__5909.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__5914__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__5915 = y;
var G__5916 = cljs.core.first(more);
var G__5917 = cljs.core.next(more);
x = G__5915;
y = G__5916;
more = G__5917;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__5914 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__5918__i = 0, G__5918__a = new Array(arguments.length -  2);
while (G__5918__i < G__5918__a.length) {G__5918__a[G__5918__i] = arguments[G__5918__i + 2]; ++G__5918__i;}
  more = new cljs.core.IndexedSeq(G__5918__a,0);
} 
return G__5914__delegate.call(this,x,y,more);};
G__5914.cljs$lang$maxFixedArity = 2;
G__5914.cljs$lang$applyTo = (function (arglist__5919){
var x = cljs.core.first(arglist__5919);
arglist__5919 = cljs.core.next(arglist__5919);
var y = cljs.core.first(arglist__5919);
var more = cljs.core.rest(arglist__5919);
return G__5914__delegate(x,y,more);
});
G__5914.cljs$core$IFn$_invoke$arity$variadic = G__5914__delegate;
return G__5914;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__5920 = null;
if (arguments.length > 2) {
var G__5921__i = 0, G__5921__a = new Array(arguments.length -  2);
while (G__5921__i < G__5921__a.length) {G__5921__a[G__5921__i] = arguments[G__5921__i + 2]; ++G__5921__i;}
G__5920 = new cljs.core.IndexedSeq(G__5921__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__5920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__5922 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5922) : cljs.core.es6_iterator_seq.call(null,G__5922));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5923 = (n + (1));
var G__5924 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5925 = cljs.core.next(coll__$1);
n = G__5923;
hash_code = G__5924;
coll__$1 = G__5925;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5926 = (n + (1));
var G__5927 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5928 = cljs.core.next(coll__$1);
n = G__5926;
hash_code = G__5927;
coll__$1 = G__5928;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__5929 = o;
return goog.getUid(G__5929);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__5931 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5931) : cljs.core.deref.call(null,G__5931));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5938 = val;
var G__5939 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5938,G__5939) : f.call(null,G__5938,G__5939));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5944 = nval;
var G__5945 = (n + (1));
val = G__5944;
n = G__5945;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5940 = val__$1;
var G__5941 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5940,G__5941) : f.call(null,G__5940,G__5941));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5946 = nval;
var G__5947 = (n + (1));
val__$1 = G__5946;
n = G__5947;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5942 = val__$1;
var G__5943 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5942,G__5943) : f.call(null,G__5942,G__5943));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5948 = nval;
var G__5949 = (n + (1));
val__$1 = G__5948;
n = G__5949;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5956 = val;
var G__5957 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5956,G__5957) : f.call(null,G__5956,G__5957));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5962 = nval;
var G__5963 = (n + (1));
val = G__5962;
n = G__5963;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5958 = val__$1;
var G__5959 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5958,G__5959) : f.call(null,G__5958,G__5959));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5964 = nval;
var G__5965 = (n + (1));
val__$1 = G__5964;
n = G__5965;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5960 = val__$1;
var G__5961 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5960,G__5961) : f.call(null,G__5960,G__5961));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5966 = nval;
var G__5967 = (n + (1));
val__$1 = G__5966;
n = G__5967;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__5969 = x;
if(G__5969){
var bit__4494__auto__ = (G__5969.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4494__auto__) || (G__5969.cljs$core$ICounted$)){
return true;
} else {
if((!G__5969.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5969);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5969);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__5971 = x;
if(G__5971){
var bit__4494__auto__ = (G__5971.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4494__auto__) || (G__5971.cljs$core$IIndexed$)){
return true;
} else {
if((!G__5971.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5971);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5971);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5972 = coll__$1;
var G__5973 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5972,G__5973) : cljs.core.equiv_sequential.call(null,G__5972,G__5973));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5974 = o;
var G__5975 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5974,G__5975) : cljs.core.cons.call(null,G__5974,G__5975));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5978 = coll__$1;
var G__5979 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5978,G__5979) : cljs.core.equiv_sequential.call(null,G__5978,G__5979));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__5980 = cljs.core.List.EMPTY;
var G__5981 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5980,G__5981) : cljs.core.with_meta.call(null,G__5980,G__5981));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__5982 = f;
var G__5983 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5982,G__5983) : cljs.core.seq_reduce.call(null,G__5982,G__5983));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__5984 = f;
var G__5985 = start;
var G__5986 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5984,G__5985,G__5986) : cljs.core.seq_reduce.call(null,G__5984,G__5985,G__5986));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5987 = o;
var G__5988 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5987,G__5988) : cljs.core.cons.call(null,G__5987,G__5988));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__5989 = sn;
s = G__5989;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__5994__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__5995 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__5996 = cljs.core.first(xs);
var G__5997 = cljs.core.next(xs);
coll = G__5995;
x = G__5996;
xs = G__5997;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__5994 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__5998__i = 0, G__5998__a = new Array(arguments.length -  2);
while (G__5998__i < G__5998__a.length) {G__5998__a[G__5998__i] = arguments[G__5998__i + 2]; ++G__5998__i;}
  xs = new cljs.core.IndexedSeq(G__5998__a,0);
} 
return G__5994__delegate.call(this,coll,x,xs);};
G__5994.cljs$lang$maxFixedArity = 2;
G__5994.cljs$lang$applyTo = (function (arglist__5999){
var coll = cljs.core.first(arglist__5999);
arglist__5999 = cljs.core.next(arglist__5999);
var x = cljs.core.first(arglist__5999);
var xs = cljs.core.rest(arglist__5999);
return G__5994__delegate(coll,x,xs);
});
G__5994.cljs$core$IFn$_invoke$arity$variadic = G__5994__delegate;
return G__5994;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__6000 = null;
if (arguments.length > 2) {
var G__6001__i = 0, G__6001__a = new Array(arguments.length -  2);
while (G__6001__i < G__6001__a.length) {G__6001__a[G__6001__i] = arguments[G__6001__i + 2]; ++G__6001__i;}
G__6000 = new cljs.core.IndexedSeq(G__6001__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6002 = cljs.core.next(s);
var G__6003 = (acc + (1));
s = G__6002;
acc = G__6003;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__6005 = coll;
if(G__6005){
var bit__4487__auto__ = (G__6005.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4487__auto__) || (G__6005.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6006 = cljs.core.next(coll);
var G__6007 = (n - (1));
coll = G__6006;
n = G__6007;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6008 = cljs.core.next(coll);
var G__6009 = (n - (1));
var G__6010 = not_found;
coll = G__6008;
n = G__6009;
not_found = G__6010;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6015 = coll;
if(G__6015){
var bit__4487__auto__ = (G__6015.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4487__auto__) || (G__6015.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6016 = coll;
if(G__6016){
var bit__4494__auto__ = (G__6016.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4494__auto__) || (G__6016.cljs$core$ISeq$)){
return true;
} else {
if((!G__6016.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6016);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6016);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6017 = coll;
if(G__6017){
var bit__4487__auto__ = (G__6017.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4487__auto__) || (G__6017.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6018 = coll;
if(G__6018){
var bit__4494__auto__ = (G__6018.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4494__auto__) || (G__6018.cljs$core$ISeq$)){
return true;
} else {
if((!G__6018.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6018);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6018);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6019 = (n__$1 - (1));
var G__6020 = cljs.core.rest(xs);
n__$1 = G__6019;
xs = G__6020;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6023 = o;
if(G__6023){
var bit__4487__auto__ = (G__6023.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4487__auto__) || (G__6023.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6024 = o;
if(G__6024){
var bit__4487__auto__ = (G__6024.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4487__auto__) || (G__6024.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__6028__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6029 = ret;
var G__6030 = cljs.core.first(kvs);
var G__6031 = cljs.core.second(kvs);
var G__6032 = cljs.core.nnext(kvs);
coll = G__6029;
k = G__6030;
v = G__6031;
kvs = G__6032;
continue;
} else {
return ret;
}
break;
}
};
var G__6028 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6033__i = 0, G__6033__a = new Array(arguments.length -  3);
while (G__6033__i < G__6033__a.length) {G__6033__a[G__6033__i] = arguments[G__6033__i + 3]; ++G__6033__i;}
  kvs = new cljs.core.IndexedSeq(G__6033__a,0);
} 
return G__6028__delegate.call(this,coll,k,v,kvs);};
G__6028.cljs$lang$maxFixedArity = 3;
G__6028.cljs$lang$applyTo = (function (arglist__6034){
var coll = cljs.core.first(arglist__6034);
arglist__6034 = cljs.core.next(arglist__6034);
var k = cljs.core.first(arglist__6034);
arglist__6034 = cljs.core.next(arglist__6034);
var v = cljs.core.first(arglist__6034);
var kvs = cljs.core.rest(arglist__6034);
return G__6028__delegate(coll,k,v,kvs);
});
G__6028.cljs$core$IFn$_invoke$arity$variadic = G__6028__delegate;
return G__6028;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__6035 = null;
if (arguments.length > 3) {
var G__6036__i = 0, G__6036__a = new Array(arguments.length -  3);
while (G__6036__i < G__6036__a.length) {G__6036__a[G__6036__i] = arguments[G__6036__i + 3]; ++G__6036__i;}
G__6035 = new cljs.core.IndexedSeq(G__6036__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__6039__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6040 = ret;
var G__6041 = cljs.core.first(ks);
var G__6042 = cljs.core.next(ks);
coll = G__6040;
k = G__6041;
ks = G__6042;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6039 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6043__i = 0, G__6043__a = new Array(arguments.length -  2);
while (G__6043__i < G__6043__a.length) {G__6043__a[G__6043__i] = arguments[G__6043__i + 2]; ++G__6043__i;}
  ks = new cljs.core.IndexedSeq(G__6043__a,0);
} 
return G__6039__delegate.call(this,coll,k,ks);};
G__6039.cljs$lang$maxFixedArity = 2;
G__6039.cljs$lang$applyTo = (function (arglist__6044){
var coll = cljs.core.first(arglist__6044);
arglist__6044 = cljs.core.next(arglist__6044);
var k = cljs.core.first(arglist__6044);
var ks = cljs.core.rest(arglist__6044);
return G__6039__delegate(coll,k,ks);
});
G__6039.cljs$core$IFn$_invoke$arity$variadic = G__6039__delegate;
return G__6039;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__6045 = null;
if (arguments.length > 2) {
var G__6046__i = 0, G__6046__a = new Array(arguments.length -  2);
while (G__6046__i < G__6046__a.length) {G__6046__a[G__6046__i] = arguments[G__6046__i + 2]; ++G__6046__i;}
G__6045 = new cljs.core.IndexedSeq(G__6046__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6045);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3813__auto__ = (function (){var G__6051 = f;
return goog.isFunction(G__6051);
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__6052 = f;
if(G__6052){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto____$1 = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
return G__6052.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6052.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6052);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6052);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__6518 = null;
var G__6518__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__6518__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6054 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6054) : self__.afn.call(null,G__6054));
});
var G__6518__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6055 = a;
var G__6056 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6055,G__6056) : self__.afn.call(null,G__6055,G__6056));
});
var G__6518__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6057 = a;
var G__6058 = b;
var G__6059 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6057,G__6058,G__6059) : self__.afn.call(null,G__6057,G__6058,G__6059));
});
var G__6518__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6060 = a;
var G__6061 = b;
var G__6062 = c;
var G__6063 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6060,G__6061,G__6062,G__6063) : self__.afn.call(null,G__6060,G__6061,G__6062,G__6063));
});
var G__6518__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6064 = a;
var G__6065 = b;
var G__6066 = c;
var G__6067 = d;
var G__6068 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6064,G__6065,G__6066,G__6067,G__6068) : self__.afn.call(null,G__6064,G__6065,G__6066,G__6067,G__6068));
});
var G__6518__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6069 = a;
var G__6070 = b;
var G__6071 = c;
var G__6072 = d;
var G__6073 = e;
var G__6074 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6069,G__6070,G__6071,G__6072,G__6073,G__6074) : self__.afn.call(null,G__6069,G__6070,G__6071,G__6072,G__6073,G__6074));
});
var G__6518__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6075 = a;
var G__6076 = b;
var G__6077 = c;
var G__6078 = d;
var G__6079 = e;
var G__6080 = f;
var G__6081 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6075,G__6076,G__6077,G__6078,G__6079,G__6080,G__6081) : self__.afn.call(null,G__6075,G__6076,G__6077,G__6078,G__6079,G__6080,G__6081));
});
var G__6518__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6082 = a;
var G__6083 = b;
var G__6084 = c;
var G__6085 = d;
var G__6086 = e;
var G__6087 = f;
var G__6088 = g;
var G__6089 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6082,G__6083,G__6084,G__6085,G__6086,G__6087,G__6088,G__6089) : self__.afn.call(null,G__6082,G__6083,G__6084,G__6085,G__6086,G__6087,G__6088,G__6089));
});
var G__6518__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6090 = a;
var G__6091 = b;
var G__6092 = c;
var G__6093 = d;
var G__6094 = e;
var G__6095 = f;
var G__6096 = g;
var G__6097 = h;
var G__6098 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098) : self__.afn.call(null,G__6090,G__6091,G__6092,G__6093,G__6094,G__6095,G__6096,G__6097,G__6098));
});
var G__6518__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6099 = a;
var G__6100 = b;
var G__6101 = c;
var G__6102 = d;
var G__6103 = e;
var G__6104 = f;
var G__6105 = g;
var G__6106 = h;
var G__6107 = i;
var G__6108 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6099,G__6100,G__6101,G__6102,G__6103,G__6104,G__6105,G__6106,G__6107,G__6108) : self__.afn.call(null,G__6099,G__6100,G__6101,G__6102,G__6103,G__6104,G__6105,G__6106,G__6107,G__6108));
});
var G__6518__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6109 = a;
var G__6110 = b;
var G__6111 = c;
var G__6112 = d;
var G__6113 = e;
var G__6114 = f;
var G__6115 = g;
var G__6116 = h;
var G__6117 = i;
var G__6118 = j;
var G__6119 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6109,G__6110,G__6111,G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119) : self__.afn.call(null,G__6109,G__6110,G__6111,G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119));
});
var G__6518__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6120 = a;
var G__6121 = b;
var G__6122 = c;
var G__6123 = d;
var G__6124 = e;
var G__6125 = f;
var G__6126 = g;
var G__6127 = h;
var G__6128 = i;
var G__6129 = j;
var G__6130 = k;
var G__6131 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6120,G__6121,G__6122,G__6123,G__6124,G__6125,G__6126,G__6127,G__6128,G__6129,G__6130,G__6131) : self__.afn.call(null,G__6120,G__6121,G__6122,G__6123,G__6124,G__6125,G__6126,G__6127,G__6128,G__6129,G__6130,G__6131));
});
var G__6518__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6132 = a;
var G__6133 = b;
var G__6134 = c;
var G__6135 = d;
var G__6136 = e;
var G__6137 = f;
var G__6138 = g;
var G__6139 = h;
var G__6140 = i;
var G__6141 = j;
var G__6142 = k;
var G__6143 = l;
var G__6144 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144) : self__.afn.call(null,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144));
});
var G__6518__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6145 = a;
var G__6146 = b;
var G__6147 = c;
var G__6148 = d;
var G__6149 = e;
var G__6150 = f;
var G__6151 = g;
var G__6152 = h;
var G__6153 = i;
var G__6154 = j;
var G__6155 = k;
var G__6156 = l;
var G__6157 = m;
var G__6158 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6145,G__6146,G__6147,G__6148,G__6149,G__6150,G__6151,G__6152,G__6153,G__6154,G__6155,G__6156,G__6157,G__6158) : self__.afn.call(null,G__6145,G__6146,G__6147,G__6148,G__6149,G__6150,G__6151,G__6152,G__6153,G__6154,G__6155,G__6156,G__6157,G__6158));
});
var G__6518__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6159 = a;
var G__6160 = b;
var G__6161 = c;
var G__6162 = d;
var G__6163 = e;
var G__6164 = f;
var G__6165 = g;
var G__6166 = h;
var G__6167 = i;
var G__6168 = j;
var G__6169 = k;
var G__6170 = l;
var G__6171 = m;
var G__6172 = n;
var G__6173 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6159,G__6160,G__6161,G__6162,G__6163,G__6164,G__6165,G__6166,G__6167,G__6168,G__6169,G__6170,G__6171,G__6172,G__6173) : self__.afn.call(null,G__6159,G__6160,G__6161,G__6162,G__6163,G__6164,G__6165,G__6166,G__6167,G__6168,G__6169,G__6170,G__6171,G__6172,G__6173));
});
var G__6518__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6174 = a;
var G__6175 = b;
var G__6176 = c;
var G__6177 = d;
var G__6178 = e;
var G__6179 = f;
var G__6180 = g;
var G__6181 = h;
var G__6182 = i;
var G__6183 = j;
var G__6184 = k;
var G__6185 = l;
var G__6186 = m;
var G__6187 = n;
var G__6188 = o;
var G__6189 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181,G__6182,G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189) : self__.afn.call(null,G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181,G__6182,G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189));
});
var G__6518__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6190 = a;
var G__6191 = b;
var G__6192 = c;
var G__6193 = d;
var G__6194 = e;
var G__6195 = f;
var G__6196 = g;
var G__6197 = h;
var G__6198 = i;
var G__6199 = j;
var G__6200 = k;
var G__6201 = l;
var G__6202 = m;
var G__6203 = n;
var G__6204 = o;
var G__6205 = p;
var G__6206 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6190,G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198,G__6199,G__6200,G__6201,G__6202,G__6203,G__6204,G__6205,G__6206) : self__.afn.call(null,G__6190,G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198,G__6199,G__6200,G__6201,G__6202,G__6203,G__6204,G__6205,G__6206));
});
var G__6518__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6207 = a;
var G__6208 = b;
var G__6209 = c;
var G__6210 = d;
var G__6211 = e;
var G__6212 = f;
var G__6213 = g;
var G__6214 = h;
var G__6215 = i;
var G__6216 = j;
var G__6217 = k;
var G__6218 = l;
var G__6219 = m;
var G__6220 = n;
var G__6221 = o;
var G__6222 = p;
var G__6223 = q;
var G__6224 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6207,G__6208,G__6209,G__6210,G__6211,G__6212,G__6213,G__6214,G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221,G__6222,G__6223,G__6224) : self__.afn.call(null,G__6207,G__6208,G__6209,G__6210,G__6211,G__6212,G__6213,G__6214,G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221,G__6222,G__6223,G__6224));
});
var G__6518__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6225 = a;
var G__6226 = b;
var G__6227 = c;
var G__6228 = d;
var G__6229 = e;
var G__6230 = f;
var G__6231 = g;
var G__6232 = h;
var G__6233 = i;
var G__6234 = j;
var G__6235 = k;
var G__6236 = l;
var G__6237 = m;
var G__6238 = n;
var G__6239 = o;
var G__6240 = p;
var G__6241 = q;
var G__6242 = r;
var G__6243 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231,G__6232,G__6233,G__6234,G__6235,G__6236,G__6237,G__6238,G__6239,G__6240,G__6241,G__6242,G__6243) : self__.afn.call(null,G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231,G__6232,G__6233,G__6234,G__6235,G__6236,G__6237,G__6238,G__6239,G__6240,G__6241,G__6242,G__6243));
});
var G__6518__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6244 = a;
var G__6245 = b;
var G__6246 = c;
var G__6247 = d;
var G__6248 = e;
var G__6249 = f;
var G__6250 = g;
var G__6251 = h;
var G__6252 = i;
var G__6253 = j;
var G__6254 = k;
var G__6255 = l;
var G__6256 = m;
var G__6257 = n;
var G__6258 = o;
var G__6259 = p;
var G__6260 = q;
var G__6261 = r;
var G__6262 = s;
var G__6263 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6244,G__6245,G__6246,G__6247,G__6248,G__6249,G__6250,G__6251,G__6252,G__6253,G__6254,G__6255,G__6256,G__6257,G__6258,G__6259,G__6260,G__6261,G__6262,G__6263) : self__.afn.call(null,G__6244,G__6245,G__6246,G__6247,G__6248,G__6249,G__6250,G__6251,G__6252,G__6253,G__6254,G__6255,G__6256,G__6257,G__6258,G__6259,G__6260,G__6261,G__6262,G__6263));
});
var G__6518__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6264 = self__.afn;
var G__6265 = a;
var G__6266 = b;
var G__6267 = c;
var G__6268 = d;
var G__6269 = e;
var G__6270 = f;
var G__6271 = g;
var G__6272 = h;
var G__6273 = i;
var G__6274 = j;
var G__6275 = k;
var G__6276 = l;
var G__6277 = m;
var G__6278 = n;
var G__6279 = o;
var G__6280 = p;
var G__6281 = q;
var G__6282 = r;
var G__6283 = s;
var G__6284 = t;
var G__6285 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6264,G__6265,G__6266,G__6267,G__6268,G__6269,G__6270,G__6271,G__6272,G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279,G__6280,G__6281,G__6282,G__6283,G__6284,G__6285) : cljs.core.apply.call(null,G__6264,G__6265,G__6266,G__6267,G__6268,G__6269,G__6270,G__6271,G__6272,G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279,G__6280,G__6281,G__6282,G__6283,G__6284,G__6285));
});
G__6518 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6518__1.call(this,self__);
case 2:
return G__6518__2.call(this,self__,a);
case 3:
return G__6518__3.call(this,self__,a,b);
case 4:
return G__6518__4.call(this,self__,a,b,c);
case 5:
return G__6518__5.call(this,self__,a,b,c,d);
case 6:
return G__6518__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6518__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6518__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6518__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6518__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6518__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6518__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6518__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6518__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6518__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6518__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6518__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6518__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6518__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6518__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6518__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6518__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6518.cljs$core$IFn$_invoke$arity$1 = G__6518__1;
G__6518.cljs$core$IFn$_invoke$arity$2 = G__6518__2;
G__6518.cljs$core$IFn$_invoke$arity$3 = G__6518__3;
G__6518.cljs$core$IFn$_invoke$arity$4 = G__6518__4;
G__6518.cljs$core$IFn$_invoke$arity$5 = G__6518__5;
G__6518.cljs$core$IFn$_invoke$arity$6 = G__6518__6;
G__6518.cljs$core$IFn$_invoke$arity$7 = G__6518__7;
G__6518.cljs$core$IFn$_invoke$arity$8 = G__6518__8;
G__6518.cljs$core$IFn$_invoke$arity$9 = G__6518__9;
G__6518.cljs$core$IFn$_invoke$arity$10 = G__6518__10;
G__6518.cljs$core$IFn$_invoke$arity$11 = G__6518__11;
G__6518.cljs$core$IFn$_invoke$arity$12 = G__6518__12;
G__6518.cljs$core$IFn$_invoke$arity$13 = G__6518__13;
G__6518.cljs$core$IFn$_invoke$arity$14 = G__6518__14;
G__6518.cljs$core$IFn$_invoke$arity$15 = G__6518__15;
G__6518.cljs$core$IFn$_invoke$arity$16 = G__6518__16;
G__6518.cljs$core$IFn$_invoke$arity$17 = G__6518__17;
G__6518.cljs$core$IFn$_invoke$arity$18 = G__6518__18;
G__6518.cljs$core$IFn$_invoke$arity$19 = G__6518__19;
G__6518.cljs$core$IFn$_invoke$arity$20 = G__6518__20;
G__6518.cljs$core$IFn$_invoke$arity$21 = G__6518__21;
G__6518.cljs$core$IFn$_invoke$arity$22 = G__6518__22;
return G__6518;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6053){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6053)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__6286 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6286) : self__.afn.call(null,G__6286));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__6287 = a;
var G__6288 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6287,G__6288) : self__.afn.call(null,G__6287,G__6288));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__6289 = a;
var G__6290 = b;
var G__6291 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6289,G__6290,G__6291) : self__.afn.call(null,G__6289,G__6290,G__6291));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__6292 = a;
var G__6293 = b;
var G__6294 = c;
var G__6295 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6292,G__6293,G__6294,G__6295) : self__.afn.call(null,G__6292,G__6293,G__6294,G__6295));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__6296 = a;
var G__6297 = b;
var G__6298 = c;
var G__6299 = d;
var G__6300 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6296,G__6297,G__6298,G__6299,G__6300) : self__.afn.call(null,G__6296,G__6297,G__6298,G__6299,G__6300));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__6301 = a;
var G__6302 = b;
var G__6303 = c;
var G__6304 = d;
var G__6305 = e;
var G__6306 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6301,G__6302,G__6303,G__6304,G__6305,G__6306) : self__.afn.call(null,G__6301,G__6302,G__6303,G__6304,G__6305,G__6306));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__6307 = a;
var G__6308 = b;
var G__6309 = c;
var G__6310 = d;
var G__6311 = e;
var G__6312 = f;
var G__6313 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6307,G__6308,G__6309,G__6310,G__6311,G__6312,G__6313) : self__.afn.call(null,G__6307,G__6308,G__6309,G__6310,G__6311,G__6312,G__6313));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__6314 = a;
var G__6315 = b;
var G__6316 = c;
var G__6317 = d;
var G__6318 = e;
var G__6319 = f;
var G__6320 = g;
var G__6321 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6314,G__6315,G__6316,G__6317,G__6318,G__6319,G__6320,G__6321) : self__.afn.call(null,G__6314,G__6315,G__6316,G__6317,G__6318,G__6319,G__6320,G__6321));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__6322 = a;
var G__6323 = b;
var G__6324 = c;
var G__6325 = d;
var G__6326 = e;
var G__6327 = f;
var G__6328 = g;
var G__6329 = h;
var G__6330 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330) : self__.afn.call(null,G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__6331 = a;
var G__6332 = b;
var G__6333 = c;
var G__6334 = d;
var G__6335 = e;
var G__6336 = f;
var G__6337 = g;
var G__6338 = h;
var G__6339 = i;
var G__6340 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6331,G__6332,G__6333,G__6334,G__6335,G__6336,G__6337,G__6338,G__6339,G__6340) : self__.afn.call(null,G__6331,G__6332,G__6333,G__6334,G__6335,G__6336,G__6337,G__6338,G__6339,G__6340));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__6341 = a;
var G__6342 = b;
var G__6343 = c;
var G__6344 = d;
var G__6345 = e;
var G__6346 = f;
var G__6347 = g;
var G__6348 = h;
var G__6349 = i;
var G__6350 = j;
var G__6351 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6341,G__6342,G__6343,G__6344,G__6345,G__6346,G__6347,G__6348,G__6349,G__6350,G__6351) : self__.afn.call(null,G__6341,G__6342,G__6343,G__6344,G__6345,G__6346,G__6347,G__6348,G__6349,G__6350,G__6351));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__6352 = a;
var G__6353 = b;
var G__6354 = c;
var G__6355 = d;
var G__6356 = e;
var G__6357 = f;
var G__6358 = g;
var G__6359 = h;
var G__6360 = i;
var G__6361 = j;
var G__6362 = k;
var G__6363 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363) : self__.afn.call(null,G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__6364 = a;
var G__6365 = b;
var G__6366 = c;
var G__6367 = d;
var G__6368 = e;
var G__6369 = f;
var G__6370 = g;
var G__6371 = h;
var G__6372 = i;
var G__6373 = j;
var G__6374 = k;
var G__6375 = l;
var G__6376 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6364,G__6365,G__6366,G__6367,G__6368,G__6369,G__6370,G__6371,G__6372,G__6373,G__6374,G__6375,G__6376) : self__.afn.call(null,G__6364,G__6365,G__6366,G__6367,G__6368,G__6369,G__6370,G__6371,G__6372,G__6373,G__6374,G__6375,G__6376));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__6377 = a;
var G__6378 = b;
var G__6379 = c;
var G__6380 = d;
var G__6381 = e;
var G__6382 = f;
var G__6383 = g;
var G__6384 = h;
var G__6385 = i;
var G__6386 = j;
var G__6387 = k;
var G__6388 = l;
var G__6389 = m;
var G__6390 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6377,G__6378,G__6379,G__6380,G__6381,G__6382,G__6383,G__6384,G__6385,G__6386,G__6387,G__6388,G__6389,G__6390) : self__.afn.call(null,G__6377,G__6378,G__6379,G__6380,G__6381,G__6382,G__6383,G__6384,G__6385,G__6386,G__6387,G__6388,G__6389,G__6390));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__6391 = a;
var G__6392 = b;
var G__6393 = c;
var G__6394 = d;
var G__6395 = e;
var G__6396 = f;
var G__6397 = g;
var G__6398 = h;
var G__6399 = i;
var G__6400 = j;
var G__6401 = k;
var G__6402 = l;
var G__6403 = m;
var G__6404 = n;
var G__6405 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6391,G__6392,G__6393,G__6394,G__6395,G__6396,G__6397,G__6398,G__6399,G__6400,G__6401,G__6402,G__6403,G__6404,G__6405) : self__.afn.call(null,G__6391,G__6392,G__6393,G__6394,G__6395,G__6396,G__6397,G__6398,G__6399,G__6400,G__6401,G__6402,G__6403,G__6404,G__6405));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__6406 = a;
var G__6407 = b;
var G__6408 = c;
var G__6409 = d;
var G__6410 = e;
var G__6411 = f;
var G__6412 = g;
var G__6413 = h;
var G__6414 = i;
var G__6415 = j;
var G__6416 = k;
var G__6417 = l;
var G__6418 = m;
var G__6419 = n;
var G__6420 = o;
var G__6421 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6406,G__6407,G__6408,G__6409,G__6410,G__6411,G__6412,G__6413,G__6414,G__6415,G__6416,G__6417,G__6418,G__6419,G__6420,G__6421) : self__.afn.call(null,G__6406,G__6407,G__6408,G__6409,G__6410,G__6411,G__6412,G__6413,G__6414,G__6415,G__6416,G__6417,G__6418,G__6419,G__6420,G__6421));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__6422 = a;
var G__6423 = b;
var G__6424 = c;
var G__6425 = d;
var G__6426 = e;
var G__6427 = f;
var G__6428 = g;
var G__6429 = h;
var G__6430 = i;
var G__6431 = j;
var G__6432 = k;
var G__6433 = l;
var G__6434 = m;
var G__6435 = n;
var G__6436 = o;
var G__6437 = p;
var G__6438 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6422,G__6423,G__6424,G__6425,G__6426,G__6427,G__6428,G__6429,G__6430,G__6431,G__6432,G__6433,G__6434,G__6435,G__6436,G__6437,G__6438) : self__.afn.call(null,G__6422,G__6423,G__6424,G__6425,G__6426,G__6427,G__6428,G__6429,G__6430,G__6431,G__6432,G__6433,G__6434,G__6435,G__6436,G__6437,G__6438));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__6439 = a;
var G__6440 = b;
var G__6441 = c;
var G__6442 = d;
var G__6443 = e;
var G__6444 = f;
var G__6445 = g;
var G__6446 = h;
var G__6447 = i;
var G__6448 = j;
var G__6449 = k;
var G__6450 = l;
var G__6451 = m;
var G__6452 = n;
var G__6453 = o;
var G__6454 = p;
var G__6455 = q;
var G__6456 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6439,G__6440,G__6441,G__6442,G__6443,G__6444,G__6445,G__6446,G__6447,G__6448,G__6449,G__6450,G__6451,G__6452,G__6453,G__6454,G__6455,G__6456) : self__.afn.call(null,G__6439,G__6440,G__6441,G__6442,G__6443,G__6444,G__6445,G__6446,G__6447,G__6448,G__6449,G__6450,G__6451,G__6452,G__6453,G__6454,G__6455,G__6456));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__6457 = a;
var G__6458 = b;
var G__6459 = c;
var G__6460 = d;
var G__6461 = e;
var G__6462 = f;
var G__6463 = g;
var G__6464 = h;
var G__6465 = i;
var G__6466 = j;
var G__6467 = k;
var G__6468 = l;
var G__6469 = m;
var G__6470 = n;
var G__6471 = o;
var G__6472 = p;
var G__6473 = q;
var G__6474 = r;
var G__6475 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6457,G__6458,G__6459,G__6460,G__6461,G__6462,G__6463,G__6464,G__6465,G__6466,G__6467,G__6468,G__6469,G__6470,G__6471,G__6472,G__6473,G__6474,G__6475) : self__.afn.call(null,G__6457,G__6458,G__6459,G__6460,G__6461,G__6462,G__6463,G__6464,G__6465,G__6466,G__6467,G__6468,G__6469,G__6470,G__6471,G__6472,G__6473,G__6474,G__6475));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__6476 = a;
var G__6477 = b;
var G__6478 = c;
var G__6479 = d;
var G__6480 = e;
var G__6481 = f;
var G__6482 = g;
var G__6483 = h;
var G__6484 = i;
var G__6485 = j;
var G__6486 = k;
var G__6487 = l;
var G__6488 = m;
var G__6489 = n;
var G__6490 = o;
var G__6491 = p;
var G__6492 = q;
var G__6493 = r;
var G__6494 = s;
var G__6495 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6476,G__6477,G__6478,G__6479,G__6480,G__6481,G__6482,G__6483,G__6484,G__6485,G__6486,G__6487,G__6488,G__6489,G__6490,G__6491,G__6492,G__6493,G__6494,G__6495) : self__.afn.call(null,G__6476,G__6477,G__6478,G__6479,G__6480,G__6481,G__6482,G__6483,G__6484,G__6485,G__6486,G__6487,G__6488,G__6489,G__6490,G__6491,G__6492,G__6493,G__6494,G__6495));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6496 = self__.afn;
var G__6497 = a;
var G__6498 = b;
var G__6499 = c;
var G__6500 = d;
var G__6501 = e;
var G__6502 = f;
var G__6503 = g;
var G__6504 = h;
var G__6505 = i;
var G__6506 = j;
var G__6507 = k;
var G__6508 = l;
var G__6509 = m;
var G__6510 = n;
var G__6511 = o;
var G__6512 = p;
var G__6513 = q;
var G__6514 = r;
var G__6515 = s;
var G__6516 = t;
var G__6517 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6496,G__6497,G__6498,G__6499,G__6500,G__6501,G__6502,G__6503,G__6504,G__6505,G__6506,G__6507,G__6508,G__6509,G__6510,G__6511,G__6512,G__6513,G__6514,G__6515,G__6516,G__6517) : cljs.core.apply.call(null,G__6496,G__6497,G__6498,G__6499,G__6500,G__6501,G__6502,G__6503,G__6504,G__6505,G__6506,G__6507,G__6508,G__6509,G__6510,G__6511,G__6512,G__6513,G__6514,G__6515,G__6516,G__6517));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__6522 = o;
if(G__6522){
var bit__4494__auto__ = (G__6522.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4494__auto__) || (G__6522.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__6522.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6522);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6522);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3801__auto__ = !((o == null));
if(and__3801__auto__){
var G__6526 = o;
if(G__6526){
var bit__4494__auto__ = (G__6526.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4494__auto__) || (G__6526.cljs$core$IMeta$)){
return true;
} else {
if((!G__6526.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6526);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6526);
}
} else {
return and__3801__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__6529__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6530 = ret;
var G__6531 = cljs.core.first(ks);
var G__6532 = cljs.core.next(ks);
coll = G__6530;
k = G__6531;
ks = G__6532;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6529 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6533__i = 0, G__6533__a = new Array(arguments.length -  2);
while (G__6533__i < G__6533__a.length) {G__6533__a[G__6533__i] = arguments[G__6533__i + 2]; ++G__6533__i;}
  ks = new cljs.core.IndexedSeq(G__6533__a,0);
} 
return G__6529__delegate.call(this,coll,k,ks);};
G__6529.cljs$lang$maxFixedArity = 2;
G__6529.cljs$lang$applyTo = (function (arglist__6534){
var coll = cljs.core.first(arglist__6534);
arglist__6534 = cljs.core.next(arglist__6534);
var k = cljs.core.first(arglist__6534);
var ks = cljs.core.rest(arglist__6534);
return G__6529__delegate(coll,k,ks);
});
G__6529.cljs$core$IFn$_invoke$arity$variadic = G__6529__delegate;
return G__6529;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__6535 = null;
if (arguments.length > 2) {
var G__6536__i = 0, G__6536__a = new Array(arguments.length -  2);
while (G__6536__i < G__6536__a.length) {G__6536__a[G__6536__i] = arguments[G__6536__i + 2]; ++G__6536__i;}
G__6535 = new cljs.core.IndexedSeq(G__6536__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6538 = x;
if(G__6538){
var bit__4494__auto__ = (G__6538.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4494__auto__) || (G__6538.cljs$core$ICollection$)){
return true;
} else {
if((!G__6538.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6538);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6538);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6540 = x;
if(G__6540){
var bit__4494__auto__ = (G__6540.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4494__auto__) || (G__6540.cljs$core$ISet$)){
return true;
} else {
if((!G__6540.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6540);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6540);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__6542 = x;
if(G__6542){
var bit__4494__auto__ = (G__6542.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4494__auto__) || (G__6542.cljs$core$IAssociative$)){
return true;
} else {
if((!G__6542.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6542);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6542);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__6544 = x;
if(G__6544){
var bit__4494__auto__ = (G__6544.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4494__auto__) || (G__6544.cljs$core$ISequential$)){
return true;
} else {
if((!G__6544.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6544);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6544);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__6546 = x;
if(G__6546){
var bit__4494__auto__ = (G__6546.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4494__auto__) || (G__6546.cljs$core$ISorted$)){
return true;
} else {
if((!G__6546.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6546);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6546);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__6548 = x;
if(G__6548){
var bit__4494__auto__ = (G__6548.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4494__auto__) || (G__6548.cljs$core$IReduce$)){
return true;
} else {
if((!G__6548.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6548);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6548);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6550 = x;
if(G__6550){
var bit__4494__auto__ = (G__6550.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4494__auto__) || (G__6550.cljs$core$IMap$)){
return true;
} else {
if((!G__6550.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6550);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6550);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__6552 = x;
if(G__6552){
var bit__4494__auto__ = (G__6552.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4494__auto__) || (G__6552.cljs$core$IVector$)){
return true;
} else {
if((!G__6552.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6552);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6552);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__6554 = x;
if(G__6554){
var bit__4487__auto__ = (G__6554.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4487__auto__) || (G__6554.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj6560 = {};
return obj6560;
});
var js_obj__1 = (function() { 
var G__6563__delegate = function (keyvals){
var G__6561 = goog.object.create;
var G__6562 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6561,G__6562) : cljs.core.apply.call(null,G__6561,G__6562));
};
var G__6563 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__6564__i = 0, G__6564__a = new Array(arguments.length -  0);
while (G__6564__i < G__6564__a.length) {G__6564__a[G__6564__i] = arguments[G__6564__i + 0]; ++G__6564__i;}
  keyvals = new cljs.core.IndexedSeq(G__6564__a,0);
} 
return G__6563__delegate.call(this,keyvals);};
G__6563.cljs$lang$maxFixedArity = 0;
G__6563.cljs$lang$applyTo = (function (arglist__6565){
var keyvals = cljs.core.seq(arglist__6565);
return G__6563__delegate(keyvals);
});
G__6563.cljs$core$IFn$_invoke$arity$variadic = G__6563__delegate;
return G__6563;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__6566 = null;
if (arguments.length > 0) {
var G__6567__i = 0, G__6567__a = new Array(arguments.length -  0);
while (G__6567__i < G__6567__a.length) {G__6567__a[G__6567__i] = arguments[G__6567__i + 0]; ++G__6567__i;}
G__6566 = new cljs.core.IndexedSeq(G__6567__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__6570_6572 = obj;
var G__6571_6573 = ((function (G__6570_6572,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__6570_6572,keys))
;
goog.object.forEach(G__6570_6572,G__6571_6573);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6574 = (i__$1 + (1));
var G__6575 = (j__$1 + (1));
var G__6576 = (len__$1 - (1));
i__$1 = G__6574;
j__$1 = G__6575;
len__$1 = G__6576;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6577 = (i__$1 - (1));
var G__6578 = (j__$1 - (1));
var G__6579 = (len__$1 - (1));
i__$1 = G__6577;
j__$1 = G__6578;
len__$1 = G__6579;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj6581 = {};
return obj6581;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__6583 = s;
if(G__6583){
var bit__4494__auto__ = (G__6583.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4494__auto__) || (G__6583.cljs$core$ISeq$)){
return true;
} else {
if((!G__6583.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6583);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6583);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__6585 = s;
if(G__6585){
var bit__4494__auto__ = (G__6585.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4494__auto__) || (G__6585.cljs$core$ISeqable$)){
return true;
} else {
if((!G__6585.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6585);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6585);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3813__auto__ = cljs.core.fn_QMARK_(f);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var G__6589 = f;
if(G__6589){
var bit__4494__auto__ = (G__6589.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4494__auto__) || (G__6589.cljs$core$IFn$)){
return true;
} else {
if((!G__6589.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6589);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6589);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__6602 = n;
return isNaN(G__6602);
})())) && (!((n === Infinity))) && (((function (){var G__6603 = n;
return parseFloat(G__6603);
})() === (function (){var G__6604 = n;
var G__6605 = (10);
return parseInt(G__6604,G__6605);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__6606__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__6607 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__6608 = etc;
s = G__6607;
xs = G__6608;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__6606 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6609__i = 0, G__6609__a = new Array(arguments.length -  2);
while (G__6609__i < G__6609__a.length) {G__6609__a[G__6609__i] = arguments[G__6609__i + 2]; ++G__6609__i;}
  more = new cljs.core.IndexedSeq(G__6609__a,0);
} 
return G__6606__delegate.call(this,x,y,more);};
G__6606.cljs$lang$maxFixedArity = 2;
G__6606.cljs$lang$applyTo = (function (arglist__6610){
var x = cljs.core.first(arglist__6610);
arglist__6610 = cljs.core.next(arglist__6610);
var y = cljs.core.first(arglist__6610);
var more = cljs.core.rest(arglist__6610);
return G__6606__delegate(x,y,more);
});
G__6606.cljs$core$IFn$_invoke$arity$variadic = G__6606__delegate;
return G__6606;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__6611 = null;
if (arguments.length > 2) {
var G__6612__i = 0, G__6612__a = new Array(arguments.length -  2);
while (G__6612__i < G__6612__a.length) {G__6612__a[G__6612__i] = arguments[G__6612__i + 2]; ++G__6612__i;}
G__6611 = new cljs.core.IndexedSeq(G__6612__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6611);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__6616 = x;
if(G__6616){
var bit__4487__auto__ = (G__6616.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4487__auto__) || (G__6616.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__6617 = x;
var G__6618 = y;
return goog.array.defaultCompare(G__6617,G__6618);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__6623 = xs;
var G__6624 = ys;
var G__6625 = len;
var G__6626 = (n + (1));
xs = G__6623;
ys = G__6624;
len = G__6625;
n = G__6626;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__6631 = x;
var G__6632 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6631,G__6632) : f.call(null,G__6631,G__6632));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__6633 = y;
var G__6634 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6633,G__6634) : f.call(null,G__6633,G__6634));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__6640 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6640) : cljs.core.to_array.call(null,G__6640));
})();
var G__6641_6643 = a;
var G__6642_6644 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__6641_6643,G__6642_6644);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__6650 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6650) : keyfn.call(null,G__6650));
})(),(function (){var G__6651 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6651) : keyfn.call(null,G__6651));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__6657 = f;
var G__6658 = cljs.core.first(s);
var G__6659 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6657,G__6658,G__6659) : cljs.core.reduce.call(null,G__6657,G__6658,G__6659));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__6660 = val__$1;
var G__6661 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6660,G__6661) : f.call(null,G__6660,G__6661));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6662 = nval;
var G__6663 = cljs.core.next(coll__$1);
val__$1 = G__6662;
coll__$1 = G__6663;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__6667 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6667) : cljs.core.to_array.call(null,G__6667));
})();
var G__6668_6670 = a;
goog.array.shuffle(G__6668_6670);

var G__6669 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6669) : cljs.core.vec.call(null,G__6669));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__6673 = coll;
if(G__6673){
var bit__4487__auto__ = (G__6673.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4487__auto__) || (G__6673.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__6674 = coll;
if(G__6674){
var bit__4487__auto__ = (G__6674.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4487__auto__) || (G__6674.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__6683 = null;
var G__6683__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__6683__1 = (function (x){
var G__6680 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6680) : cf.call(null,G__6680));
});
var G__6683__2 = (function (x,y){
var G__6681 = x;
var G__6682 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6681,G__6682) : f.call(null,G__6681,G__6682));
});
G__6683 = function(x,y){
switch(arguments.length){
case 0:
return G__6683__0.call(this);
case 1:
return G__6683__1.call(this,x);
case 2:
return G__6683__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6683.cljs$core$IFn$_invoke$arity$0 = G__6683__0;
G__6683.cljs$core$IFn$_invoke$arity$1 = G__6683__1;
G__6683.cljs$core$IFn$_invoke$arity$2 = G__6683__2;
return G__6683;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__6690 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6690) : xform.call(null,G__6690));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__6691 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6691) : f__$1.call(null,G__6691));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__6692__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__6692 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6693__i = 0, G__6693__a = new Array(arguments.length -  2);
while (G__6693__i < G__6693__a.length) {G__6693__a[G__6693__i] = arguments[G__6693__i + 2]; ++G__6693__i;}
  more = new cljs.core.IndexedSeq(G__6693__a,0);
} 
return G__6692__delegate.call(this,x,y,more);};
G__6692.cljs$lang$maxFixedArity = 2;
G__6692.cljs$lang$applyTo = (function (arglist__6694){
var x = cljs.core.first(arglist__6694);
arglist__6694 = cljs.core.next(arglist__6694);
var y = cljs.core.first(arglist__6694);
var more = cljs.core.rest(arglist__6694);
return G__6692__delegate(x,y,more);
});
G__6692.cljs$core$IFn$_invoke$arity$variadic = G__6692__delegate;
return G__6692;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__6695 = null;
if (arguments.length > 2) {
var G__6696__i = 0, G__6696__a = new Array(arguments.length -  2);
while (G__6696__i < G__6696__a.length) {G__6696__a[G__6696__i] = arguments[G__6696__i + 2]; ++G__6696__i;}
G__6695 = new cljs.core.IndexedSeq(G__6696__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__6697__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__6697 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6698__i = 0, G__6698__a = new Array(arguments.length -  2);
while (G__6698__i < G__6698__a.length) {G__6698__a[G__6698__i] = arguments[G__6698__i + 2]; ++G__6698__i;}
  more = new cljs.core.IndexedSeq(G__6698__a,0);
} 
return G__6697__delegate.call(this,x,y,more);};
G__6697.cljs$lang$maxFixedArity = 2;
G__6697.cljs$lang$applyTo = (function (arglist__6699){
var x = cljs.core.first(arglist__6699);
arglist__6699 = cljs.core.next(arglist__6699);
var y = cljs.core.first(arglist__6699);
var more = cljs.core.rest(arglist__6699);
return G__6697__delegate(x,y,more);
});
G__6697.cljs$core$IFn$_invoke$arity$variadic = G__6697__delegate;
return G__6697;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__6700 = null;
if (arguments.length > 2) {
var G__6701__i = 0, G__6701__a = new Array(arguments.length -  2);
while (G__6701__i < G__6701__a.length) {G__6701__a[G__6701__i] = arguments[G__6701__i + 2]; ++G__6701__i;}
G__6700 = new cljs.core.IndexedSeq(G__6701__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6700);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__6702__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__6702 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6703__i = 0, G__6703__a = new Array(arguments.length -  2);
while (G__6703__i < G__6703__a.length) {G__6703__a[G__6703__i] = arguments[G__6703__i + 2]; ++G__6703__i;}
  more = new cljs.core.IndexedSeq(G__6703__a,0);
} 
return G__6702__delegate.call(this,x,y,more);};
G__6702.cljs$lang$maxFixedArity = 2;
G__6702.cljs$lang$applyTo = (function (arglist__6704){
var x = cljs.core.first(arglist__6704);
arglist__6704 = cljs.core.next(arglist__6704);
var y = cljs.core.first(arglist__6704);
var more = cljs.core.rest(arglist__6704);
return G__6702__delegate(x,y,more);
});
G__6702.cljs$core$IFn$_invoke$arity$variadic = G__6702__delegate;
return G__6702;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__6705 = null;
if (arguments.length > 2) {
var G__6706__i = 0, G__6706__a = new Array(arguments.length -  2);
while (G__6706__i < G__6706__a.length) {G__6706__a[G__6706__i] = arguments[G__6706__i + 2]; ++G__6706__i;}
G__6705 = new cljs.core.IndexedSeq(G__6706__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__6711__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6711 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6712__i = 0, G__6712__a = new Array(arguments.length -  2);
while (G__6712__i < G__6712__a.length) {G__6712__a[G__6712__i] = arguments[G__6712__i + 2]; ++G__6712__i;}
  more = new cljs.core.IndexedSeq(G__6712__a,0);
} 
return G__6711__delegate.call(this,x,y,more);};
G__6711.cljs$lang$maxFixedArity = 2;
G__6711.cljs$lang$applyTo = (function (arglist__6713){
var x = cljs.core.first(arglist__6713);
arglist__6713 = cljs.core.next(arglist__6713);
var y = cljs.core.first(arglist__6713);
var more = cljs.core.rest(arglist__6713);
return G__6711__delegate(x,y,more);
});
G__6711.cljs$core$IFn$_invoke$arity$variadic = G__6711__delegate;
return G__6711;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__6714 = null;
if (arguments.length > 2) {
var G__6715__i = 0, G__6715__a = new Array(arguments.length -  2);
while (G__6715__i < G__6715__a.length) {G__6715__a[G__6715__i] = arguments[G__6715__i + 2]; ++G__6715__i;}
G__6714 = new cljs.core.IndexedSeq(G__6715__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__6716__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__6717 = y;
var G__6718 = cljs.core.first(more);
var G__6719 = cljs.core.next(more);
x = G__6717;
y = G__6718;
more = G__6719;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6716 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6720__i = 0, G__6720__a = new Array(arguments.length -  2);
while (G__6720__i < G__6720__a.length) {G__6720__a[G__6720__i] = arguments[G__6720__i + 2]; ++G__6720__i;}
  more = new cljs.core.IndexedSeq(G__6720__a,0);
} 
return G__6716__delegate.call(this,x,y,more);};
G__6716.cljs$lang$maxFixedArity = 2;
G__6716.cljs$lang$applyTo = (function (arglist__6721){
var x = cljs.core.first(arglist__6721);
arglist__6721 = cljs.core.next(arglist__6721);
var y = cljs.core.first(arglist__6721);
var more = cljs.core.rest(arglist__6721);
return G__6716__delegate(x,y,more);
});
G__6716.cljs$core$IFn$_invoke$arity$variadic = G__6716__delegate;
return G__6716;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__6722 = null;
if (arguments.length > 2) {
var G__6723__i = 0, G__6723__a = new Array(arguments.length -  2);
while (G__6723__i < G__6723__a.length) {G__6723__a[G__6723__i] = arguments[G__6723__i + 2]; ++G__6723__i;}
G__6722 = new cljs.core.IndexedSeq(G__6723__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__6724__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__6725 = y;
var G__6726 = cljs.core.first(more);
var G__6727 = cljs.core.next(more);
x = G__6725;
y = G__6726;
more = G__6727;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6724 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6728__i = 0, G__6728__a = new Array(arguments.length -  2);
while (G__6728__i < G__6728__a.length) {G__6728__a[G__6728__i] = arguments[G__6728__i + 2]; ++G__6728__i;}
  more = new cljs.core.IndexedSeq(G__6728__a,0);
} 
return G__6724__delegate.call(this,x,y,more);};
G__6724.cljs$lang$maxFixedArity = 2;
G__6724.cljs$lang$applyTo = (function (arglist__6729){
var x = cljs.core.first(arglist__6729);
arglist__6729 = cljs.core.next(arglist__6729);
var y = cljs.core.first(arglist__6729);
var more = cljs.core.rest(arglist__6729);
return G__6724__delegate(x,y,more);
});
G__6724.cljs$core$IFn$_invoke$arity$variadic = G__6724__delegate;
return G__6724;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__6730 = null;
if (arguments.length > 2) {
var G__6731__i = 0, G__6731__a = new Array(arguments.length -  2);
while (G__6731__i < G__6731__a.length) {G__6731__a[G__6731__i] = arguments[G__6731__i + 2]; ++G__6731__i;}
G__6730 = new cljs.core.IndexedSeq(G__6731__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__6732__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__6733 = y;
var G__6734 = cljs.core.first(more);
var G__6735 = cljs.core.next(more);
x = G__6733;
y = G__6734;
more = G__6735;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6732 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6736__i = 0, G__6736__a = new Array(arguments.length -  2);
while (G__6736__i < G__6736__a.length) {G__6736__a[G__6736__i] = arguments[G__6736__i + 2]; ++G__6736__i;}
  more = new cljs.core.IndexedSeq(G__6736__a,0);
} 
return G__6732__delegate.call(this,x,y,more);};
G__6732.cljs$lang$maxFixedArity = 2;
G__6732.cljs$lang$applyTo = (function (arglist__6737){
var x = cljs.core.first(arglist__6737);
arglist__6737 = cljs.core.next(arglist__6737);
var y = cljs.core.first(arglist__6737);
var more = cljs.core.rest(arglist__6737);
return G__6732__delegate(x,y,more);
});
G__6732.cljs$core$IFn$_invoke$arity$variadic = G__6732__delegate;
return G__6732;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__6738 = null;
if (arguments.length > 2) {
var G__6739__i = 0, G__6739__a = new Array(arguments.length -  2);
while (G__6739__i < G__6739__a.length) {G__6739__a[G__6739__i] = arguments[G__6739__i + 2]; ++G__6739__i;}
G__6738 = new cljs.core.IndexedSeq(G__6739__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__6740__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__6741 = y;
var G__6742 = cljs.core.first(more);
var G__6743 = cljs.core.next(more);
x = G__6741;
y = G__6742;
more = G__6743;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6740 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6744__i = 0, G__6744__a = new Array(arguments.length -  2);
while (G__6744__i < G__6744__a.length) {G__6744__a[G__6744__i] = arguments[G__6744__i + 2]; ++G__6744__i;}
  more = new cljs.core.IndexedSeq(G__6744__a,0);
} 
return G__6740__delegate.call(this,x,y,more);};
G__6740.cljs$lang$maxFixedArity = 2;
G__6740.cljs$lang$applyTo = (function (arglist__6745){
var x = cljs.core.first(arglist__6745);
arglist__6745 = cljs.core.next(arglist__6745);
var y = cljs.core.first(arglist__6745);
var more = cljs.core.rest(arglist__6745);
return G__6740__delegate(x,y,more);
});
G__6740.cljs$core$IFn$_invoke$arity$variadic = G__6740__delegate;
return G__6740;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__6746 = null;
if (arguments.length > 2) {
var G__6747__i = 0, G__6747__a = new Array(arguments.length -  2);
while (G__6747__i < G__6747__a.length) {G__6747__a[G__6747__i] = arguments[G__6747__i + 2]; ++G__6747__i;}
G__6746 = new cljs.core.IndexedSeq(G__6747__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4130__auto__ = x;
var y__4131__auto__ = y;
return ((x__4130__auto__ > y__4131__auto__) ? x__4130__auto__ : y__4131__auto__);
});
var max__3 = (function() { 
var G__6748__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4130__auto__ = x;
var y__4131__auto__ = y;
return ((x__4130__auto__ > y__4131__auto__) ? x__4130__auto__ : y__4131__auto__);
})(),more);
};
var G__6748 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6749__i = 0, G__6749__a = new Array(arguments.length -  2);
while (G__6749__i < G__6749__a.length) {G__6749__a[G__6749__i] = arguments[G__6749__i + 2]; ++G__6749__i;}
  more = new cljs.core.IndexedSeq(G__6749__a,0);
} 
return G__6748__delegate.call(this,x,y,more);};
G__6748.cljs$lang$maxFixedArity = 2;
G__6748.cljs$lang$applyTo = (function (arglist__6750){
var x = cljs.core.first(arglist__6750);
arglist__6750 = cljs.core.next(arglist__6750);
var y = cljs.core.first(arglist__6750);
var more = cljs.core.rest(arglist__6750);
return G__6748__delegate(x,y,more);
});
G__6748.cljs$core$IFn$_invoke$arity$variadic = G__6748__delegate;
return G__6748;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__6751 = null;
if (arguments.length > 2) {
var G__6752__i = 0, G__6752__a = new Array(arguments.length -  2);
while (G__6752__i < G__6752__a.length) {G__6752__a[G__6752__i] = arguments[G__6752__i + 2]; ++G__6752__i;}
G__6751 = new cljs.core.IndexedSeq(G__6752__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6751);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4137__auto__ = x;
var y__4138__auto__ = y;
return ((x__4137__auto__ < y__4138__auto__) ? x__4137__auto__ : y__4138__auto__);
});
var min__3 = (function() { 
var G__6753__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4137__auto__ = x;
var y__4138__auto__ = y;
return ((x__4137__auto__ < y__4138__auto__) ? x__4137__auto__ : y__4138__auto__);
})(),more);
};
var G__6753 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6754__i = 0, G__6754__a = new Array(arguments.length -  2);
while (G__6754__i < G__6754__a.length) {G__6754__a[G__6754__i] = arguments[G__6754__i + 2]; ++G__6754__i;}
  more = new cljs.core.IndexedSeq(G__6754__a,0);
} 
return G__6753__delegate.call(this,x,y,more);};
G__6753.cljs$lang$maxFixedArity = 2;
G__6753.cljs$lang$applyTo = (function (arglist__6755){
var x = cljs.core.first(arglist__6755);
arglist__6755 = cljs.core.next(arglist__6755);
var y = cljs.core.first(arglist__6755);
var more = cljs.core.rest(arglist__6755);
return G__6753__delegate(x,y,more);
});
G__6753.cljs$core$IFn$_invoke$arity$variadic = G__6753__delegate;
return G__6753;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__6756 = null;
if (arguments.length > 2) {
var G__6757__i = 0, G__6757__a = new Array(arguments.length -  2);
while (G__6757__i < G__6757__a.length) {G__6757__a[G__6757__i] = arguments[G__6757__i + 2]; ++G__6757__i;}
G__6756 = new cljs.core.IndexedSeq(G__6757__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__6758__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__6758 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6759__i = 0, G__6759__a = new Array(arguments.length -  2);
while (G__6759__i < G__6759__a.length) {G__6759__a[G__6759__i] = arguments[G__6759__i + 2]; ++G__6759__i;}
  more = new cljs.core.IndexedSeq(G__6759__a,0);
} 
return G__6758__delegate.call(this,x,y,more);};
G__6758.cljs$lang$maxFixedArity = 2;
G__6758.cljs$lang$applyTo = (function (arglist__6760){
var x = cljs.core.first(arglist__6760);
arglist__6760 = cljs.core.next(arglist__6760);
var y = cljs.core.first(arglist__6760);
var more = cljs.core.rest(arglist__6760);
return G__6758__delegate(x,y,more);
});
G__6758.cljs$core$IFn$_invoke$arity$variadic = G__6758__delegate;
return G__6758;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__6761 = null;
if (arguments.length > 2) {
var G__6762__i = 0, G__6762__a = new Array(arguments.length -  2);
while (G__6762__i < G__6762__a.length) {G__6762__a[G__6762__i] = arguments[G__6762__i + 2]; ++G__6762__i;}
G__6761 = new cljs.core.IndexedSeq(G__6762__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__6763__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__6763 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6764__i = 0, G__6764__a = new Array(arguments.length -  2);
while (G__6764__i < G__6764__a.length) {G__6764__a[G__6764__i] = arguments[G__6764__i + 2]; ++G__6764__i;}
  more = new cljs.core.IndexedSeq(G__6764__a,0);
} 
return G__6763__delegate.call(this,x,y,more);};
G__6763.cljs$lang$maxFixedArity = 2;
G__6763.cljs$lang$applyTo = (function (arglist__6765){
var x = cljs.core.first(arglist__6765);
arglist__6765 = cljs.core.next(arglist__6765);
var y = cljs.core.first(arglist__6765);
var more = cljs.core.rest(arglist__6765);
return G__6763__delegate(x,y,more);
});
G__6763.cljs$core$IFn$_invoke$arity$variadic = G__6763__delegate;
return G__6763;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__6766 = null;
if (arguments.length > 2) {
var G__6767__i = 0, G__6767__a = new Array(arguments.length -  2);
while (G__6767__i < G__6767__a.length) {G__6767__a[G__6767__i] = arguments[G__6767__i + 2]; ++G__6767__i;}
G__6766 = new cljs.core.IndexedSeq(G__6767__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__6772__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6772 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6773__i = 0, G__6773__a = new Array(arguments.length -  2);
while (G__6773__i < G__6773__a.length) {G__6773__a[G__6773__i] = arguments[G__6773__i + 2]; ++G__6773__i;}
  more = new cljs.core.IndexedSeq(G__6773__a,0);
} 
return G__6772__delegate.call(this,x,y,more);};
G__6772.cljs$lang$maxFixedArity = 2;
G__6772.cljs$lang$applyTo = (function (arglist__6774){
var x = cljs.core.first(arglist__6774);
arglist__6774 = cljs.core.next(arglist__6774);
var y = cljs.core.first(arglist__6774);
var more = cljs.core.rest(arglist__6774);
return G__6772__delegate(x,y,more);
});
G__6772.cljs$core$IFn$_invoke$arity$variadic = G__6772__delegate;
return G__6772;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__6775 = null;
if (arguments.length > 2) {
var G__6776__i = 0, G__6776__a = new Array(arguments.length -  2);
while (G__6776__i < G__6776__a.length) {G__6776__a[G__6776__i] = arguments[G__6776__i + 2]; ++G__6776__i;}
G__6775 = new cljs.core.IndexedSeq(G__6776__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__6777__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__6777 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6778__i = 0, G__6778__a = new Array(arguments.length -  2);
while (G__6778__i < G__6778__a.length) {G__6778__a[G__6778__i] = arguments[G__6778__i + 2]; ++G__6778__i;}
  more = new cljs.core.IndexedSeq(G__6778__a,0);
} 
return G__6777__delegate.call(this,x,y,more);};
G__6777.cljs$lang$maxFixedArity = 2;
G__6777.cljs$lang$applyTo = (function (arglist__6779){
var x = cljs.core.first(arglist__6779);
arglist__6779 = cljs.core.next(arglist__6779);
var y = cljs.core.first(arglist__6779);
var more = cljs.core.rest(arglist__6779);
return G__6777__delegate(x,y,more);
});
G__6777.cljs$core$IFn$_invoke$arity$variadic = G__6777__delegate;
return G__6777;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__6780 = null;
if (arguments.length > 2) {
var G__6781__i = 0, G__6781__a = new Array(arguments.length -  2);
while (G__6781__i < G__6781__a.length) {G__6781__a[G__6781__i] = arguments[G__6781__i + 2]; ++G__6781__i;}
G__6780 = new cljs.core.IndexedSeq(G__6781__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6780);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__6782__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__6782 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6783__i = 0, G__6783__a = new Array(arguments.length -  2);
while (G__6783__i < G__6783__a.length) {G__6783__a[G__6783__i] = arguments[G__6783__i + 2]; ++G__6783__i;}
  more = new cljs.core.IndexedSeq(G__6783__a,0);
} 
return G__6782__delegate.call(this,x,y,more);};
G__6782.cljs$lang$maxFixedArity = 2;
G__6782.cljs$lang$applyTo = (function (arglist__6784){
var x = cljs.core.first(arglist__6784);
arglist__6784 = cljs.core.next(arglist__6784);
var y = cljs.core.first(arglist__6784);
var more = cljs.core.rest(arglist__6784);
return G__6782__delegate(x,y,more);
});
G__6782.cljs$core$IFn$_invoke$arity$variadic = G__6782__delegate;
return G__6782;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__6785 = null;
if (arguments.length > 2) {
var G__6786__i = 0, G__6786__a = new Array(arguments.length -  2);
while (G__6786__i < G__6786__a.length) {G__6786__a[G__6786__i] = arguments[G__6786__i + 2]; ++G__6786__i;}
G__6785 = new cljs.core.IndexedSeq(G__6786__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6785);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__6789 = x;
var G__6790 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6789,G__6790) : cljs.core.mod.call(null,G__6789,G__6790));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__6791__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__6791 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6792__i = 0, G__6792__a = new Array(arguments.length -  2);
while (G__6792__i < G__6792__a.length) {G__6792__a[G__6792__i] = arguments[G__6792__i + 2]; ++G__6792__i;}
  more = new cljs.core.IndexedSeq(G__6792__a,0);
} 
return G__6791__delegate.call(this,x,y,more);};
G__6791.cljs$lang$maxFixedArity = 2;
G__6791.cljs$lang$applyTo = (function (arglist__6793){
var x = cljs.core.first(arglist__6793);
arglist__6793 = cljs.core.next(arglist__6793);
var y = cljs.core.first(arglist__6793);
var more = cljs.core.rest(arglist__6793);
return G__6791__delegate(x,y,more);
});
G__6791.cljs$core$IFn$_invoke$arity$variadic = G__6791__delegate;
return G__6791;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__6794 = null;
if (arguments.length > 2) {
var G__6795__i = 0, G__6795__a = new Array(arguments.length -  2);
while (G__6795__i < G__6795__a.length) {G__6795__a[G__6795__i] = arguments[G__6795__i + 2]; ++G__6795__i;}
G__6794 = new cljs.core.IndexedSeq(G__6795__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__6796__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__6796 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6797__i = 0, G__6797__a = new Array(arguments.length -  2);
while (G__6797__i < G__6797__a.length) {G__6797__a[G__6797__i] = arguments[G__6797__i + 2]; ++G__6797__i;}
  more = new cljs.core.IndexedSeq(G__6797__a,0);
} 
return G__6796__delegate.call(this,x,y,more);};
G__6796.cljs$lang$maxFixedArity = 2;
G__6796.cljs$lang$applyTo = (function (arglist__6798){
var x = cljs.core.first(arglist__6798);
arglist__6798 = cljs.core.next(arglist__6798);
var y = cljs.core.first(arglist__6798);
var more = cljs.core.rest(arglist__6798);
return G__6796__delegate(x,y,more);
});
G__6796.cljs$core$IFn$_invoke$arity$variadic = G__6796__delegate;
return G__6796;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__6799 = null;
if (arguments.length > 2) {
var G__6800__i = 0, G__6800__a = new Array(arguments.length -  2);
while (G__6800__i < G__6800__a.length) {G__6800__a[G__6800__i] = arguments[G__6800__i + 2]; ++G__6800__i;}
G__6799 = new cljs.core.IndexedSeq(G__6800__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__6803 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6803) : Math.floor.call(null,G__6803));
} else {
var G__6804 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6804) : Math.ceil.call(null,G__6804));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__6805__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__6805 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6806__i = 0, G__6806__a = new Array(arguments.length -  2);
while (G__6806__i < G__6806__a.length) {G__6806__a[G__6806__i] = arguments[G__6806__i + 2]; ++G__6806__i;}
  more = new cljs.core.IndexedSeq(G__6806__a,0);
} 
return G__6805__delegate.call(this,x,y,more);};
G__6805.cljs$lang$maxFixedArity = 2;
G__6805.cljs$lang$applyTo = (function (arglist__6807){
var x = cljs.core.first(arglist__6807);
arglist__6807 = cljs.core.next(arglist__6807);
var y = cljs.core.first(arglist__6807);
var more = cljs.core.rest(arglist__6807);
return G__6805__delegate(x,y,more);
});
G__6805.cljs$core$IFn$_invoke$arity$variadic = G__6805__delegate;
return G__6805;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__6808 = null;
if (arguments.length > 2) {
var G__6809__i = 0, G__6809__a = new Array(arguments.length -  2);
while (G__6809__i < G__6809__a.length) {G__6809__a[G__6809__i] = arguments[G__6809__i + 2]; ++G__6809__i;}
G__6808 = new cljs.core.IndexedSeq(G__6809__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__6810__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__6810 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6811__i = 0, G__6811__a = new Array(arguments.length -  2);
while (G__6811__i < G__6811__a.length) {G__6811__a[G__6811__i] = arguments[G__6811__i + 2]; ++G__6811__i;}
  more = new cljs.core.IndexedSeq(G__6811__a,0);
} 
return G__6810__delegate.call(this,x,y,more);};
G__6810.cljs$lang$maxFixedArity = 2;
G__6810.cljs$lang$applyTo = (function (arglist__6812){
var x = cljs.core.first(arglist__6812);
arglist__6812 = cljs.core.next(arglist__6812);
var y = cljs.core.first(arglist__6812);
var more = cljs.core.rest(arglist__6812);
return G__6810__delegate(x,y,more);
});
G__6810.cljs$core$IFn$_invoke$arity$variadic = G__6810__delegate;
return G__6810;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__6813 = null;
if (arguments.length > 2) {
var G__6814__i = 0, G__6814__a = new Array(arguments.length -  2);
while (G__6814__i < G__6814__a.length) {G__6814__a[G__6814__i] = arguments[G__6814__i + 2]; ++G__6814__i;}
G__6813 = new cljs.core.IndexedSeq(G__6814__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6813);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__6815__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__6815 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6816__i = 0, G__6816__a = new Array(arguments.length -  2);
while (G__6816__i < G__6816__a.length) {G__6816__a[G__6816__i] = arguments[G__6816__i + 2]; ++G__6816__i;}
  more = new cljs.core.IndexedSeq(G__6816__a,0);
} 
return G__6815__delegate.call(this,x,y,more);};
G__6815.cljs$lang$maxFixedArity = 2;
G__6815.cljs$lang$applyTo = (function (arglist__6817){
var x = cljs.core.first(arglist__6817);
arglist__6817 = cljs.core.next(arglist__6817);
var y = cljs.core.first(arglist__6817);
var more = cljs.core.rest(arglist__6817);
return G__6815__delegate(x,y,more);
});
G__6815.cljs$core$IFn$_invoke$arity$variadic = G__6815__delegate;
return G__6815;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__6818 = null;
if (arguments.length > 2) {
var G__6819__i = 0, G__6819__a = new Array(arguments.length -  2);
while (G__6819__i < G__6819__a.length) {G__6819__a[G__6819__i] = arguments[G__6819__i + 2]; ++G__6819__i;}
G__6818 = new cljs.core.IndexedSeq(G__6819__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6818);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__6820__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__6820 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6821__i = 0, G__6821__a = new Array(arguments.length -  2);
while (G__6821__i < G__6821__a.length) {G__6821__a[G__6821__i] = arguments[G__6821__i + 2]; ++G__6821__i;}
  more = new cljs.core.IndexedSeq(G__6821__a,0);
} 
return G__6820__delegate.call(this,x,y,more);};
G__6820.cljs$lang$maxFixedArity = 2;
G__6820.cljs$lang$applyTo = (function (arglist__6822){
var x = cljs.core.first(arglist__6822);
arglist__6822 = cljs.core.next(arglist__6822);
var y = cljs.core.first(arglist__6822);
var more = cljs.core.rest(arglist__6822);
return G__6820__delegate(x,y,more);
});
G__6820.cljs$core$IFn$_invoke$arity$variadic = G__6820__delegate;
return G__6820;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__6823 = null;
if (arguments.length > 2) {
var G__6824__i = 0, G__6824__a = new Array(arguments.length -  2);
while (G__6824__i < G__6824__a.length) {G__6824__a[G__6824__i] = arguments[G__6824__i + 2]; ++G__6824__i;}
G__6823 = new cljs.core.IndexedSeq(G__6824__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6823);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__6829__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6830 = y;
var G__6831 = cljs.core.first(more);
var G__6832 = cljs.core.next(more);
x = G__6830;
y = G__6831;
more = G__6832;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6829 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6833__i = 0, G__6833__a = new Array(arguments.length -  2);
while (G__6833__i < G__6833__a.length) {G__6833__a[G__6833__i] = arguments[G__6833__i + 2]; ++G__6833__i;}
  more = new cljs.core.IndexedSeq(G__6833__a,0);
} 
return G__6829__delegate.call(this,x,y,more);};
G__6829.cljs$lang$maxFixedArity = 2;
G__6829.cljs$lang$applyTo = (function (arglist__6834){
var x = cljs.core.first(arglist__6834);
arglist__6834 = cljs.core.next(arglist__6834);
var y = cljs.core.first(arglist__6834);
var more = cljs.core.rest(arglist__6834);
return G__6829__delegate(x,y,more);
});
G__6829.cljs$core$IFn$_invoke$arity$variadic = G__6829__delegate;
return G__6829;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__6835 = null;
if (arguments.length > 2) {
var G__6836__i = 0, G__6836__a = new Array(arguments.length -  2);
while (G__6836__i < G__6836__a.length) {G__6836__a[G__6836__i] = arguments[G__6836__i + 2]; ++G__6836__i;}
G__6835 = new cljs.core.IndexedSeq(G__6836__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6835);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__6837 = (n__$1 - (1));
var G__6838 = cljs.core.next(xs);
n__$1 = G__6837;
xs = G__6838;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__6842 = x;
return goog.string.buildString(G__6842);
}
});
var str__2 = (function() { 
var G__6843__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__6844 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__6845 = cljs.core.next(more);
sb = G__6844;
more = G__6845;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__6843 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__6846__i = 0, G__6846__a = new Array(arguments.length -  1);
while (G__6846__i < G__6846__a.length) {G__6846__a[G__6846__i] = arguments[G__6846__i + 1]; ++G__6846__i;}
  ys = new cljs.core.IndexedSeq(G__6846__a,0);
} 
return G__6843__delegate.call(this,x,ys);};
G__6843.cljs$lang$maxFixedArity = 1;
G__6843.cljs$lang$applyTo = (function (arglist__6847){
var x = cljs.core.first(arglist__6847);
var ys = cljs.core.rest(arglist__6847);
return G__6843__delegate(x,ys);
});
G__6843.cljs$core$IFn$_invoke$arity$variadic = G__6843__delegate;
return G__6843;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__6848 = null;
if (arguments.length > 1) {
var G__6849__i = 0, G__6849__a = new Array(arguments.length -  1);
while (G__6849__i < G__6849__a.length) {G__6849__a[G__6849__i] = arguments[G__6849__i + 1]; ++G__6849__i;}
G__6848 = new cljs.core.IndexedSeq(G__6849__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6848);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__6850 = cljs.core.next(xs);
var G__6851 = cljs.core.next(ys);
xs = G__6850;
ys = G__6851;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__6852 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__6853 = cljs.core.next(s);
res = G__6852;
s = G__6853;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__6858 = ((h + (cljs.core.hash((function (){var G__6856 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6856) : cljs.core.key.call(null,G__6856));
})()) ^ cljs.core.hash((function (){var G__6857 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6857) : cljs.core.val.call(null,G__6857));
})()))) % (4503599627370496));
var G__6859 = cljs.core.next(s);
h = G__6858;
s = G__6859;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__6860 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__6861 = cljs.core.next(s__$1);
h = G__6860;
s__$1 = G__6861;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__6872_6882 = cljs.core.seq(fn_map);
var chunk__6873_6883 = null;
var count__6874_6884 = (0);
var i__6875_6885 = (0);
while(true){
if((i__6875_6885 < count__6874_6884)){
var vec__6876_6886 = chunk__6873_6883.cljs$core$IIndexed$_nth$arity$2(null,i__6875_6885);
var key_name_6887 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6876_6886,(0),null);
var f_6888 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6876_6886,(1),null);
var str_name_6889 = (function (){var G__6877 = key_name_6887;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6877) : cljs.core.name.call(null,G__6877));
})();
(obj[str_name_6889] = f_6888);

var G__6890 = seq__6872_6882;
var G__6891 = chunk__6873_6883;
var G__6892 = count__6874_6884;
var G__6893 = (i__6875_6885 + (1));
seq__6872_6882 = G__6890;
chunk__6873_6883 = G__6891;
count__6874_6884 = G__6892;
i__6875_6885 = G__6893;
continue;
} else {
var temp__4126__auto___6894 = cljs.core.seq(seq__6872_6882);
if(temp__4126__auto___6894){
var seq__6872_6895__$1 = temp__4126__auto___6894;
if(cljs.core.chunked_seq_QMARK_(seq__6872_6895__$1)){
var c__4600__auto___6896 = (function (){var G__6878 = seq__6872_6895__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6878) : cljs.core.chunk_first.call(null,G__6878));
})();
var G__6897 = (function (){var G__6879 = seq__6872_6895__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6879) : cljs.core.chunk_rest.call(null,G__6879));
})();
var G__6898 = c__4600__auto___6896;
var G__6899 = cljs.core.count(c__4600__auto___6896);
var G__6900 = (0);
seq__6872_6882 = G__6897;
chunk__6873_6883 = G__6898;
count__6874_6884 = G__6899;
i__6875_6885 = G__6900;
continue;
} else {
var vec__6880_6901 = cljs.core.first(seq__6872_6895__$1);
var key_name_6902 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6880_6901,(0),null);
var f_6903 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6880_6901,(1),null);
var str_name_6904 = (function (){var G__6881 = key_name_6902;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6881) : cljs.core.name.call(null,G__6881));
})();
(obj[str_name_6904] = f_6903);

var G__6905 = cljs.core.next(seq__6872_6895__$1);
var G__6906 = null;
var G__6907 = (0);
var G__6908 = (0);
seq__6872_6882 = G__6905;
chunk__6873_6883 = G__6906;
count__6874_6884 = G__6907;
i__6875_6885 = G__6908;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__6910 = coll;
if(G__6910){
var bit__4494__auto__ = (G__6910.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4494__auto__) || (G__6910.cljs$core$IReversible$)){
return true;
} else {
if((!G__6910.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6910);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6910);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__6911 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__6911;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__6912 = (i - (1));
var G__6913 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__6912;
r = G__6913;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__6914__i = 0, G__6914__a = new Array(arguments.length -  0);
while (G__6914__i < G__6914__a.length) {G__6914__a[G__6914__i] = arguments[G__6914__i + 0]; ++G__6914__i;}
  xs = new cljs.core.IndexedSeq(G__6914__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__6915){
var xs = cljs.core.seq(arglist__6915);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3813__auto__ = (coll == null);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var G__6919 = coll;
if(G__6919){
var bit__4487__auto__ = (G__6919.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4487__auto__) || (G__6919.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__6921 = x;
if(G__6921){
var bit__4494__auto__ = (G__6921.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4494__auto__) || (G__6921.cljs$core$IList$)){
return true;
} else {
if((!G__6921.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6921);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6921);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3801__auto__ = cljs.core.not(a.ns);
if(and__3801__auto__){
return b.ns;
} else {
return and__3801__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6928 = a.ns;
var G__6929 = b.ns;
return goog.array.defaultCompare(G__6928,G__6929);
})();
if(((0) === nsc)){
var G__6930 = a.name;
var G__6931 = b.name;
return goog.array.defaultCompare(G__6930,G__6931);
} else {
return nsc;
}
}
} else {
var G__6932 = a.name;
var G__6933 = b.name;
return goog.array.defaultCompare(G__6932,G__6933);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4234__auto__ = self__._hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__6935 = null;
var G__6935__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__6935__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__6935 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6935__2.call(this,self__,coll);
case 3:
return G__6935__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6935.cljs$core$IFn$_invoke$arity$2 = G__6935__2;
G__6935.cljs$core$IFn$_invoke$arity$3 = G__6935__3;
return G__6935;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args6934){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6934)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__6937 = x;
if(G__6937){
var bit__4487__auto__ = (G__6937.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4487__auto__) || (G__6937.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__6939 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6939) : cljs.core.name.call(null,G__6939));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__6940 = ls.sval();
ls = G__6940;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__6942 = s;
if(G__6942){
var bit__4487__auto__ = (G__6942.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4487__auto__) || (G__6942.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__6943 = cljs.core.next(s__$1);
s__$1 = G__6943;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_6944 = (0);
var xs_6945 = cljs.core.seq(coll);
while(true){
if(xs_6945){
(ret[i_6944] = cljs.core.to_array(cljs.core.first(xs_6945)));

var G__6946 = (i_6944 + (1));
var G__6947 = cljs.core.next(xs_6945);
i_6944 = G__6946;
xs_6945 = G__6947;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6950 = (i + (1));
var G__6951 = cljs.core.next(s__$1);
i = G__6950;
s__$1 = G__6951;
continue;
} else {
return a;
}
break;
}
} else {
var n__4700__auto___6952 = size;
var i_6953 = (0);
while(true){
if((i_6953 < n__4700__auto___6952)){
(a[i_6953] = init_val_or_seq);

var G__6954 = (i_6953 + (1));
i_6953 = G__6954;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6957 = (i + (1));
var G__6958 = cljs.core.next(s__$1);
i = G__6957;
s__$1 = G__6958;
continue;
} else {
return a;
}
break;
}
} else {
var n__4700__auto___6959 = size;
var i_6960 = (0);
while(true){
if((i_6960 < n__4700__auto___6959)){
(a[i_6960] = init_val_or_seq);

var G__6961 = (i_6960 + (1));
i_6960 = G__6961;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6964 = (i + (1));
var G__6965 = cljs.core.next(s__$1);
i = G__6964;
s__$1 = G__6965;
continue;
} else {
return a;
}
break;
}
} else {
var n__4700__auto___6966 = size;
var i_6967 = (0);
while(true){
if((i_6967 < n__4700__auto___6966)){
(a[i_6967] = init_val_or_seq);

var G__6968 = (i_6967 + (1));
i_6967 = G__6968;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6971 = (i + (1));
var G__6972 = cljs.core.next(s__$1);
i = G__6971;
s__$1 = G__6972;
continue;
} else {
return a;
}
break;
}
} else {
var n__4700__auto___6973 = size;
var i_6974 = (0);
while(true){
if((i_6974 < n__4700__auto___6973)){
(a[i_6974] = init_val_or_seq);

var G__6975 = (i_6974 + (1));
i_6974 = G__6975;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__6976 = cljs.core.next(s__$1);
var G__6977 = (i - (1));
var G__6978 = (sum + (1));
s__$1 = G__6976;
i = G__6977;
sum = G__6978;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__6998__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__6998 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__6999__i = 0, G__6999__a = new Array(arguments.length -  2);
while (G__6999__i < G__6999__a.length) {G__6999__a[G__6999__i] = arguments[G__6999__i + 2]; ++G__6999__i;}
  zs = new cljs.core.IndexedSeq(G__6999__a,0);
} 
return G__6998__delegate.call(this,x,y,zs);};
G__6998.cljs$lang$maxFixedArity = 2;
G__6998.cljs$lang$applyTo = (function (arglist__7000){
var x = cljs.core.first(arglist__7000);
arglist__7000 = cljs.core.next(arglist__7000);
var y = cljs.core.first(arglist__7000);
var zs = cljs.core.rest(arglist__7000);
return G__6998__delegate(x,y,zs);
});
G__6998.cljs$core$IFn$_invoke$arity$variadic = G__6998__delegate;
return G__6998;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__7001 = null;
if (arguments.length > 2) {
var G__7002__i = 0, G__7002__a = new Array(arguments.length -  2);
while (G__7002__i < G__7002__a.length) {G__7002__a[G__7002__i] = arguments[G__7002__i + 2]; ++G__7002__i;}
G__7001 = new cljs.core.IndexedSeq(G__7002__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7001);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__7003__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7003 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7004__i = 0, G__7004__a = new Array(arguments.length -  4);
while (G__7004__i < G__7004__a.length) {G__7004__a[G__7004__i] = arguments[G__7004__i + 4]; ++G__7004__i;}
  more = new cljs.core.IndexedSeq(G__7004__a,0);
} 
return G__7003__delegate.call(this,a,b,c,d,more);};
G__7003.cljs$lang$maxFixedArity = 4;
G__7003.cljs$lang$applyTo = (function (arglist__7005){
var a = cljs.core.first(arglist__7005);
arglist__7005 = cljs.core.next(arglist__7005);
var b = cljs.core.first(arglist__7005);
arglist__7005 = cljs.core.next(arglist__7005);
var c = cljs.core.first(arglist__7005);
arglist__7005 = cljs.core.next(arglist__7005);
var d = cljs.core.first(arglist__7005);
var more = cljs.core.rest(arglist__7005);
return G__7003__delegate(a,b,c,d,more);
});
G__7003.cljs$core$IFn$_invoke$arity$variadic = G__7003__delegate;
return G__7003;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__7006 = null;
if (arguments.length > 4) {
var G__7007__i = 0, G__7007__a = new Array(arguments.length -  4);
while (G__7007__i < G__7007__a.length) {G__7007__a[G__7007__i] = arguments[G__7007__i + 4]; ++G__7007__i;}
G__7006 = new cljs.core.IndexedSeq(G__7007__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7006);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__7008__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7009 = ntcoll;
var G__7010 = cljs.core.first(vals);
var G__7011 = cljs.core.next(vals);
tcoll = G__7009;
val = G__7010;
vals = G__7011;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7008 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7012__i = 0, G__7012__a = new Array(arguments.length -  2);
while (G__7012__i < G__7012__a.length) {G__7012__a[G__7012__i] = arguments[G__7012__i + 2]; ++G__7012__i;}
  vals = new cljs.core.IndexedSeq(G__7012__a,0);
} 
return G__7008__delegate.call(this,tcoll,val,vals);};
G__7008.cljs$lang$maxFixedArity = 2;
G__7008.cljs$lang$applyTo = (function (arglist__7013){
var tcoll = cljs.core.first(arglist__7013);
arglist__7013 = cljs.core.next(arglist__7013);
var val = cljs.core.first(arglist__7013);
var vals = cljs.core.rest(arglist__7013);
return G__7008__delegate(tcoll,val,vals);
});
G__7008.cljs$core$IFn$_invoke$arity$variadic = G__7008__delegate;
return G__7008;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__7014 = null;
if (arguments.length > 2) {
var G__7015__i = 0, G__7015__a = new Array(arguments.length -  2);
while (G__7015__i < G__7015__a.length) {G__7015__a[G__7015__i] = arguments[G__7015__i + 2]; ++G__7015__i;}
G__7014 = new cljs.core.IndexedSeq(G__7015__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7014);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__7016__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7017 = ntcoll;
var G__7018 = cljs.core.first(kvs);
var G__7019 = cljs.core.second(kvs);
var G__7020 = cljs.core.nnext(kvs);
tcoll = G__7017;
key = G__7018;
val = G__7019;
kvs = G__7020;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7016 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7021__i = 0, G__7021__a = new Array(arguments.length -  3);
while (G__7021__i < G__7021__a.length) {G__7021__a[G__7021__i] = arguments[G__7021__i + 3]; ++G__7021__i;}
  kvs = new cljs.core.IndexedSeq(G__7021__a,0);
} 
return G__7016__delegate.call(this,tcoll,key,val,kvs);};
G__7016.cljs$lang$maxFixedArity = 3;
G__7016.cljs$lang$applyTo = (function (arglist__7022){
var tcoll = cljs.core.first(arglist__7022);
arglist__7022 = cljs.core.next(arglist__7022);
var key = cljs.core.first(arglist__7022);
arglist__7022 = cljs.core.next(arglist__7022);
var val = cljs.core.first(arglist__7022);
var kvs = cljs.core.rest(arglist__7022);
return G__7016__delegate(tcoll,key,val,kvs);
});
G__7016.cljs$core$IFn$_invoke$arity$variadic = G__7016__delegate;
return G__7016;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7023 = null;
if (arguments.length > 3) {
var G__7024__i = 0, G__7024__a = new Array(arguments.length -  3);
while (G__7024__i < G__7024__a.length) {G__7024__a[G__7024__i] = arguments[G__7024__i + 3]; ++G__7024__i;}
G__7023 = new cljs.core.IndexedSeq(G__7024__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7023);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__7025__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7026 = ntcoll;
var G__7027 = cljs.core.first(ks);
var G__7028 = cljs.core.next(ks);
tcoll = G__7026;
key = G__7027;
ks = G__7028;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7025 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7029__i = 0, G__7029__a = new Array(arguments.length -  2);
while (G__7029__i < G__7029__a.length) {G__7029__a[G__7029__i] = arguments[G__7029__i + 2]; ++G__7029__i;}
  ks = new cljs.core.IndexedSeq(G__7029__a,0);
} 
return G__7025__delegate.call(this,tcoll,key,ks);};
G__7025.cljs$lang$maxFixedArity = 2;
G__7025.cljs$lang$applyTo = (function (arglist__7030){
var tcoll = cljs.core.first(arglist__7030);
arglist__7030 = cljs.core.next(arglist__7030);
var key = cljs.core.first(arglist__7030);
var ks = cljs.core.rest(arglist__7030);
return G__7025__delegate(tcoll,key,ks);
});
G__7025.cljs$core$IFn$_invoke$arity$variadic = G__7025__delegate;
return G__7025;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7031 = null;
if (arguments.length > 2) {
var G__7032__i = 0, G__7032__a = new Array(arguments.length -  2);
while (G__7032__i < G__7032__a.length) {G__7032__a[G__7032__i] = arguments[G__7032__i + 2]; ++G__7032__i;}
G__7031 = new cljs.core.IndexedSeq(G__7032__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7031);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__7033__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7034 = ntcoll;
var G__7035 = cljs.core.first(vals);
var G__7036 = cljs.core.next(vals);
tcoll = G__7034;
val = G__7035;
vals = G__7036;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7033 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7037__i = 0, G__7037__a = new Array(arguments.length -  2);
while (G__7037__i < G__7037__a.length) {G__7037__a[G__7037__i] = arguments[G__7037__i + 2]; ++G__7037__i;}
  vals = new cljs.core.IndexedSeq(G__7037__a,0);
} 
return G__7033__delegate.call(this,tcoll,val,vals);};
G__7033.cljs$lang$maxFixedArity = 2;
G__7033.cljs$lang$applyTo = (function (arglist__7038){
var tcoll = cljs.core.first(arglist__7038);
arglist__7038 = cljs.core.next(arglist__7038);
var val = cljs.core.first(arglist__7038);
var vals = cljs.core.rest(arglist__7038);
return G__7033__delegate(tcoll,val,vals);
});
G__7033.cljs$core$IFn$_invoke$arity$variadic = G__7033__delegate;
return G__7033;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__7039 = null;
if (arguments.length > 2) {
var G__7040__i = 0, G__7040__a = new Array(arguments.length -  2);
while (G__7040__i < G__7040__a.length) {G__7040__a[G__7040__i] = arguments[G__7040__i + 2]; ++G__7040__i;}
G__7039 = new cljs.core.IndexedSeq(G__7040__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7039);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4744 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4744);
} else {
var G__7251 = a4744;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7251) : f.call(null,G__7251));
}
} else {
var b4745 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4744,b4745);
} else {
var G__7252 = a4744;
var G__7253 = b4745;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7252,G__7253) : f.call(null,G__7252,G__7253));
}
} else {
var c4746 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4744,b4745,c4746);
} else {
var G__7254 = a4744;
var G__7255 = b4745;
var G__7256 = c4746;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7254,G__7255,G__7256) : f.call(null,G__7254,G__7255,G__7256));
}
} else {
var d4747 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4744,b4745,c4746,d4747);
} else {
var G__7257 = a4744;
var G__7258 = b4745;
var G__7259 = c4746;
var G__7260 = d4747;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7257,G__7258,G__7259,G__7260) : f.call(null,G__7257,G__7258,G__7259,G__7260));
}
} else {
var e4748 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4744,b4745,c4746,d4747,e4748);
} else {
var G__7261 = a4744;
var G__7262 = b4745;
var G__7263 = c4746;
var G__7264 = d4747;
var G__7265 = e4748;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7261,G__7262,G__7263,G__7264,G__7265) : f.call(null,G__7261,G__7262,G__7263,G__7264,G__7265));
}
} else {
var f4749 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4744,b4745,c4746,d4747,e4748,f4749);
} else {
var G__7266 = a4744;
var G__7267 = b4745;
var G__7268 = c4746;
var G__7269 = d4747;
var G__7270 = e4748;
var G__7271 = f4749;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7266,G__7267,G__7268,G__7269,G__7270,G__7271) : f.call(null,G__7266,G__7267,G__7268,G__7269,G__7270,G__7271));
}
} else {
var g4750 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4744,b4745,c4746,d4747,e4748,f4749,g4750);
} else {
var G__7272 = a4744;
var G__7273 = b4745;
var G__7274 = c4746;
var G__7275 = d4747;
var G__7276 = e4748;
var G__7277 = f4749;
var G__7278 = g4750;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278) : f.call(null,G__7272,G__7273,G__7274,G__7275,G__7276,G__7277,G__7278));
}
} else {
var h4751 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751);
} else {
var G__7279 = a4744;
var G__7280 = b4745;
var G__7281 = c4746;
var G__7282 = d4747;
var G__7283 = e4748;
var G__7284 = f4749;
var G__7285 = g4750;
var G__7286 = h4751;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286) : f.call(null,G__7279,G__7280,G__7281,G__7282,G__7283,G__7284,G__7285,G__7286));
}
} else {
var i4752 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752);
} else {
var G__7287 = a4744;
var G__7288 = b4745;
var G__7289 = c4746;
var G__7290 = d4747;
var G__7291 = e4748;
var G__7292 = f4749;
var G__7293 = g4750;
var G__7294 = h4751;
var G__7295 = i4752;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295) : f.call(null,G__7287,G__7288,G__7289,G__7290,G__7291,G__7292,G__7293,G__7294,G__7295));
}
} else {
var j4753 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753);
} else {
var G__7296 = a4744;
var G__7297 = b4745;
var G__7298 = c4746;
var G__7299 = d4747;
var G__7300 = e4748;
var G__7301 = f4749;
var G__7302 = g4750;
var G__7303 = h4751;
var G__7304 = i4752;
var G__7305 = j4753;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7296,G__7297,G__7298,G__7299,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305) : f.call(null,G__7296,G__7297,G__7298,G__7299,G__7300,G__7301,G__7302,G__7303,G__7304,G__7305));
}
} else {
var k4754 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754);
} else {
var G__7306 = a4744;
var G__7307 = b4745;
var G__7308 = c4746;
var G__7309 = d4747;
var G__7310 = e4748;
var G__7311 = f4749;
var G__7312 = g4750;
var G__7313 = h4751;
var G__7314 = i4752;
var G__7315 = j4753;
var G__7316 = k4754;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316) : f.call(null,G__7306,G__7307,G__7308,G__7309,G__7310,G__7311,G__7312,G__7313,G__7314,G__7315,G__7316));
}
} else {
var l4755 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755);
} else {
var G__7317 = a4744;
var G__7318 = b4745;
var G__7319 = c4746;
var G__7320 = d4747;
var G__7321 = e4748;
var G__7322 = f4749;
var G__7323 = g4750;
var G__7324 = h4751;
var G__7325 = i4752;
var G__7326 = j4753;
var G__7327 = k4754;
var G__7328 = l4755;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7317,G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328) : f.call(null,G__7317,G__7318,G__7319,G__7320,G__7321,G__7322,G__7323,G__7324,G__7325,G__7326,G__7327,G__7328));
}
} else {
var m4756 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756);
} else {
var G__7329 = a4744;
var G__7330 = b4745;
var G__7331 = c4746;
var G__7332 = d4747;
var G__7333 = e4748;
var G__7334 = f4749;
var G__7335 = g4750;
var G__7336 = h4751;
var G__7337 = i4752;
var G__7338 = j4753;
var G__7339 = k4754;
var G__7340 = l4755;
var G__7341 = m4756;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7329,G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341) : f.call(null,G__7329,G__7330,G__7331,G__7332,G__7333,G__7334,G__7335,G__7336,G__7337,G__7338,G__7339,G__7340,G__7341));
}
} else {
var n4757 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757);
} else {
var G__7342 = a4744;
var G__7343 = b4745;
var G__7344 = c4746;
var G__7345 = d4747;
var G__7346 = e4748;
var G__7347 = f4749;
var G__7348 = g4750;
var G__7349 = h4751;
var G__7350 = i4752;
var G__7351 = j4753;
var G__7352 = k4754;
var G__7353 = l4755;
var G__7354 = m4756;
var G__7355 = n4757;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7342,G__7343,G__7344,G__7345,G__7346,G__7347,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355) : f.call(null,G__7342,G__7343,G__7344,G__7345,G__7346,G__7347,G__7348,G__7349,G__7350,G__7351,G__7352,G__7353,G__7354,G__7355));
}
} else {
var o4758 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758);
} else {
var G__7356 = a4744;
var G__7357 = b4745;
var G__7358 = c4746;
var G__7359 = d4747;
var G__7360 = e4748;
var G__7361 = f4749;
var G__7362 = g4750;
var G__7363 = h4751;
var G__7364 = i4752;
var G__7365 = j4753;
var G__7366 = k4754;
var G__7367 = l4755;
var G__7368 = m4756;
var G__7369 = n4757;
var G__7370 = o4758;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7356,G__7357,G__7358,G__7359,G__7360,G__7361,G__7362,G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370) : f.call(null,G__7356,G__7357,G__7358,G__7359,G__7360,G__7361,G__7362,G__7363,G__7364,G__7365,G__7366,G__7367,G__7368,G__7369,G__7370));
}
} else {
var p4759 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759);
} else {
var G__7371 = a4744;
var G__7372 = b4745;
var G__7373 = c4746;
var G__7374 = d4747;
var G__7375 = e4748;
var G__7376 = f4749;
var G__7377 = g4750;
var G__7378 = h4751;
var G__7379 = i4752;
var G__7380 = j4753;
var G__7381 = k4754;
var G__7382 = l4755;
var G__7383 = m4756;
var G__7384 = n4757;
var G__7385 = o4758;
var G__7386 = p4759;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378,G__7379,G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386) : f.call(null,G__7371,G__7372,G__7373,G__7374,G__7375,G__7376,G__7377,G__7378,G__7379,G__7380,G__7381,G__7382,G__7383,G__7384,G__7385,G__7386));
}
} else {
var q4760 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759,q4760);
} else {
var G__7387 = a4744;
var G__7388 = b4745;
var G__7389 = c4746;
var G__7390 = d4747;
var G__7391 = e4748;
var G__7392 = f4749;
var G__7393 = g4750;
var G__7394 = h4751;
var G__7395 = i4752;
var G__7396 = j4753;
var G__7397 = k4754;
var G__7398 = l4755;
var G__7399 = m4756;
var G__7400 = n4757;
var G__7401 = o4758;
var G__7402 = p4759;
var G__7403 = q4760;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395,G__7396,G__7397,G__7398,G__7399,G__7400,G__7401,G__7402,G__7403) : f.call(null,G__7387,G__7388,G__7389,G__7390,G__7391,G__7392,G__7393,G__7394,G__7395,G__7396,G__7397,G__7398,G__7399,G__7400,G__7401,G__7402,G__7403));
}
} else {
var r4761 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759,q4760,r4761);
} else {
var G__7404 = a4744;
var G__7405 = b4745;
var G__7406 = c4746;
var G__7407 = d4747;
var G__7408 = e4748;
var G__7409 = f4749;
var G__7410 = g4750;
var G__7411 = h4751;
var G__7412 = i4752;
var G__7413 = j4753;
var G__7414 = k4754;
var G__7415 = l4755;
var G__7416 = m4756;
var G__7417 = n4757;
var G__7418 = o4758;
var G__7419 = p4759;
var G__7420 = q4760;
var G__7421 = r4761;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7404,G__7405,G__7406,G__7407,G__7408,G__7409,G__7410,G__7411,G__7412,G__7413,G__7414,G__7415,G__7416,G__7417,G__7418,G__7419,G__7420,G__7421) : f.call(null,G__7404,G__7405,G__7406,G__7407,G__7408,G__7409,G__7410,G__7411,G__7412,G__7413,G__7414,G__7415,G__7416,G__7417,G__7418,G__7419,G__7420,G__7421));
}
} else {
var s4762 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759,q4760,r4761,s4762);
} else {
var G__7422 = a4744;
var G__7423 = b4745;
var G__7424 = c4746;
var G__7425 = d4747;
var G__7426 = e4748;
var G__7427 = f4749;
var G__7428 = g4750;
var G__7429 = h4751;
var G__7430 = i4752;
var G__7431 = j4753;
var G__7432 = k4754;
var G__7433 = l4755;
var G__7434 = m4756;
var G__7435 = n4757;
var G__7436 = o4758;
var G__7437 = p4759;
var G__7438 = q4760;
var G__7439 = r4761;
var G__7440 = s4762;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7422,G__7423,G__7424,G__7425,G__7426,G__7427,G__7428,G__7429,G__7430,G__7431,G__7432,G__7433,G__7434,G__7435,G__7436,G__7437,G__7438,G__7439,G__7440) : f.call(null,G__7422,G__7423,G__7424,G__7425,G__7426,G__7427,G__7428,G__7429,G__7430,G__7431,G__7432,G__7433,G__7434,G__7435,G__7436,G__7437,G__7438,G__7439,G__7440));
}
} else {
var t4763 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759,q4760,r4761,s4762,t4763);
} else {
var G__7441 = a4744;
var G__7442 = b4745;
var G__7443 = c4746;
var G__7444 = d4747;
var G__7445 = e4748;
var G__7446 = f4749;
var G__7447 = g4750;
var G__7448 = h4751;
var G__7449 = i4752;
var G__7450 = j4753;
var G__7451 = k4754;
var G__7452 = l4755;
var G__7453 = m4756;
var G__7454 = n4757;
var G__7455 = o4758;
var G__7456 = p4759;
var G__7457 = q4760;
var G__7458 = r4761;
var G__7459 = s4762;
var G__7460 = t4763;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7441,G__7442,G__7443,G__7444,G__7445,G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452,G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460) : f.call(null,G__7441,G__7442,G__7443,G__7444,G__7445,G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452,G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__7461__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__7461 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__7462__i = 0, G__7462__a = new Array(arguments.length -  5);
while (G__7462__i < G__7462__a.length) {G__7462__a[G__7462__i] = arguments[G__7462__i + 5]; ++G__7462__i;}
  args = new cljs.core.IndexedSeq(G__7462__a,0);
} 
return G__7461__delegate.call(this,f,a,b,c,d,args);};
G__7461.cljs$lang$maxFixedArity = 5;
G__7461.cljs$lang$applyTo = (function (arglist__7463){
var f = cljs.core.first(arglist__7463);
arglist__7463 = cljs.core.next(arglist__7463);
var a = cljs.core.first(arglist__7463);
arglist__7463 = cljs.core.next(arglist__7463);
var b = cljs.core.first(arglist__7463);
arglist__7463 = cljs.core.next(arglist__7463);
var c = cljs.core.first(arglist__7463);
arglist__7463 = cljs.core.next(arglist__7463);
var d = cljs.core.first(arglist__7463);
var args = cljs.core.rest(arglist__7463);
return G__7461__delegate(f,a,b,c,d,args);
});
G__7461.cljs$core$IFn$_invoke$arity$variadic = G__7461__delegate;
return G__7461;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__7464 = null;
if (arguments.length > 5) {
var G__7465__i = 0, G__7465__a = new Array(arguments.length -  5);
while (G__7465__i < G__7465__a.length) {G__7465__a[G__7465__i] = arguments[G__7465__i + 5]; ++G__7465__i;}
G__7464 = new cljs.core.IndexedSeq(G__7465__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__7464);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__7481 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7481) : f.call(null,G__7481));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__7482 = cljs.core.meta(obj);
var G__7483 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7482,G__7483) : f.call(null,G__7482,G__7483));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__7484 = cljs.core.meta(obj);
var G__7485 = a;
var G__7486 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7484,G__7485,G__7486) : f.call(null,G__7484,G__7485,G__7486));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__7487 = cljs.core.meta(obj);
var G__7488 = a;
var G__7489 = b;
var G__7490 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7487,G__7488,G__7489,G__7490) : f.call(null,G__7487,G__7488,G__7489,G__7490));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__7491 = cljs.core.meta(obj);
var G__7492 = a;
var G__7493 = b;
var G__7494 = c;
var G__7495 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7491,G__7492,G__7493,G__7494,G__7495) : f.call(null,G__7491,G__7492,G__7493,G__7494,G__7495));
})());
});
var vary_meta__7 = (function() { 
var G__7496__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__7496 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__7497__i = 0, G__7497__a = new Array(arguments.length -  6);
while (G__7497__i < G__7497__a.length) {G__7497__a[G__7497__i] = arguments[G__7497__i + 6]; ++G__7497__i;}
  args = new cljs.core.IndexedSeq(G__7497__a,0);
} 
return G__7496__delegate.call(this,obj,f,a,b,c,d,args);};
G__7496.cljs$lang$maxFixedArity = 6;
G__7496.cljs$lang$applyTo = (function (arglist__7498){
var obj = cljs.core.first(arglist__7498);
arglist__7498 = cljs.core.next(arglist__7498);
var f = cljs.core.first(arglist__7498);
arglist__7498 = cljs.core.next(arglist__7498);
var a = cljs.core.first(arglist__7498);
arglist__7498 = cljs.core.next(arglist__7498);
var b = cljs.core.first(arglist__7498);
arglist__7498 = cljs.core.next(arglist__7498);
var c = cljs.core.first(arglist__7498);
arglist__7498 = cljs.core.next(arglist__7498);
var d = cljs.core.first(arglist__7498);
var args = cljs.core.rest(arglist__7498);
return G__7496__delegate(obj,f,a,b,c,d,args);
});
G__7496.cljs$core$IFn$_invoke$arity$variadic = G__7496__delegate;
return G__7496;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__7499 = null;
if (arguments.length > 6) {
var G__7500__i = 0, G__7500__a = new Array(arguments.length -  6);
while (G__7500__i < G__7500__a.length) {G__7500__a[G__7500__i] = arguments[G__7500__i + 6]; ++G__7500__i;}
G__7499 = new cljs.core.IndexedSeq(G__7500__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__7499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__7501__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__7501 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7502__i = 0, G__7502__a = new Array(arguments.length -  2);
while (G__7502__i < G__7502__a.length) {G__7502__a[G__7502__i] = arguments[G__7502__i + 2]; ++G__7502__i;}
  more = new cljs.core.IndexedSeq(G__7502__a,0);
} 
return G__7501__delegate.call(this,x,y,more);};
G__7501.cljs$lang$maxFixedArity = 2;
G__7501.cljs$lang$applyTo = (function (arglist__7503){
var x = cljs.core.first(arglist__7503);
arglist__7503 = cljs.core.next(arglist__7503);
var y = cljs.core.first(arglist__7503);
var more = cljs.core.rest(arglist__7503);
return G__7501__delegate(x,y,more);
});
G__7501.cljs$core$IFn$_invoke$arity$variadic = G__7501__delegate;
return G__7501;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__7504 = null;
if (arguments.length > 2) {
var G__7505__i = 0, G__7505__a = new Array(arguments.length -  2);
while (G__7505__i < G__7505__a.length) {G__7505__a[G__7505__i] = arguments[G__7505__i + 2]; ++G__7505__i;}
G__7504 = new cljs.core.IndexedSeq(G__7505__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t7509 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t7509 = (function (nil_iter,meta7510){
this.nil_iter = nil_iter;
this.meta7510 = meta7510;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t7509.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t7509.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t7509.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t7509.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_7511){
var self__ = this;
var _7511__$1 = this;
return self__.meta7510;
});

cljs.core.t7509.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_7511,meta7510__$1){
var self__ = this;
var _7511__$1 = this;
return (new cljs.core.t7509(self__.nil_iter,meta7510__$1));
});

cljs.core.t7509.cljs$lang$type = true;

cljs.core.t7509.cljs$lang$ctorStr = "cljs.core/t7509";

cljs.core.t7509.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/t7509");
});

cljs.core.__GT_t7509 = (function __GT_t7509(nil_iter__$1,meta7510){
return (new cljs.core.t7509(nil_iter__$1,meta7510));
});

}

return (new cljs.core.t7509(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3801__auto__ = !((lt.stepper == null));
if(and__3801__auto__){
return self__.iter.hasNext();
} else {
return and__3801__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__7512 = lt;
var G__7513 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7512,G__7513) : self__.xform.call(null,G__7512,G__7513));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7514 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7514) : self__.xform.call(null,G__7514));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__7516 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7516) : xform.call(null,G__7516));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__7518 = cljs.core.next(iters__$1);
iters__$1 = G__7518;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4700__auto___7519 = self__.iters.length;
var i_7520 = (0);
while(true){
if((i_7520 < n__4700__auto___7519)){
(self__.nexts[i_7520] = (self__.iters[i_7520]).next());

var G__7521 = (i_7520 + (1));
i_7520 = G__7521;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3801__auto__ = !((lt.stepper == null));
if(and__3801__auto__){
return this$.hasNext();
} else {
return and__3801__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7517 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7517) : self__.xform.call(null,G__7517));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__7526 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7526) : xform.call(null,G__7526));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__7527_7531 = cljs.core.seq(colls);
var chunk__7528_7532 = null;
var count__7529_7533 = (0);
var i__7530_7534 = (0);
while(true){
if((i__7530_7534 < count__7529_7533)){
var coll_7535 = chunk__7528_7532.cljs$core$IIndexed$_nth$arity$2(null,i__7530_7534);
iters.push(cljs.core.iter(coll_7535));

var G__7536 = seq__7527_7531;
var G__7537 = chunk__7528_7532;
var G__7538 = count__7529_7533;
var G__7539 = (i__7530_7534 + (1));
seq__7527_7531 = G__7536;
chunk__7528_7532 = G__7537;
count__7529_7533 = G__7538;
i__7530_7534 = G__7539;
continue;
} else {
var temp__4126__auto___7540 = cljs.core.seq(seq__7527_7531);
if(temp__4126__auto___7540){
var seq__7527_7541__$1 = temp__4126__auto___7540;
if(cljs.core.chunked_seq_QMARK_(seq__7527_7541__$1)){
var c__4600__auto___7542 = cljs.core.chunk_first(seq__7527_7541__$1);
var G__7543 = cljs.core.chunk_rest(seq__7527_7541__$1);
var G__7544 = c__4600__auto___7542;
var G__7545 = cljs.core.count(c__4600__auto___7542);
var G__7546 = (0);
seq__7527_7531 = G__7543;
chunk__7528_7532 = G__7544;
count__7529_7533 = G__7545;
i__7530_7534 = G__7546;
continue;
} else {
var coll_7547 = cljs.core.first(seq__7527_7541__$1);
iters.push(cljs.core.iter(coll_7547));

var G__7548 = cljs.core.next(seq__7527_7541__$1);
var G__7549 = null;
var G__7550 = (0);
var G__7551 = (0);
seq__7527_7531 = G__7548;
chunk__7528_7532 = G__7549;
count__7529_7533 = G__7550;
i__7530_7534 = G__7551;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3813__auto__ = cljs.core.seq(coll);
if(or__3813__auto__){
return or__3813__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__7552__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__7552 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__7553__i = 0, G__7553__a = new Array(arguments.length -  2);
while (G__7553__i < G__7553__a.length) {G__7553__a[G__7553__i] = arguments[G__7553__i + 2]; ++G__7553__i;}
  colls = new cljs.core.IndexedSeq(G__7553__a,0);
} 
return G__7552__delegate.call(this,xform,coll,colls);};
G__7552.cljs$lang$maxFixedArity = 2;
G__7552.cljs$lang$applyTo = (function (arglist__7554){
var xform = cljs.core.first(arglist__7554);
arglist__7554 = cljs.core.next(arglist__7554);
var coll = cljs.core.first(arglist__7554);
var colls = cljs.core.rest(arglist__7554);
return G__7552__delegate(xform,coll,colls);
});
G__7552.cljs$core$IFn$_invoke$arity$variadic = G__7552__delegate;
return G__7552;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__7555 = null;
if (arguments.length > 2) {
var G__7556__i = 0, G__7556__a = new Array(arguments.length -  2);
while (G__7556__i < G__7556__a.length) {G__7556__a[G__7556__i] = arguments[G__7556__i + 2]; ++G__7556__i;}
G__7555 = new cljs.core.IndexedSeq(G__7556__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__7555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__7558 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7558) : pred.call(null,G__7558));
})())){
var G__7559 = pred;
var G__7560 = cljs.core.next(coll);
pred = G__7559;
coll = G__7560;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3813__auto__ = (function (){var G__7564 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7564) : pred.call(null,G__7564));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__7565 = pred;
var G__7566 = cljs.core.next(coll);
pred = G__7565;
coll = G__7566;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__7573 = null;
var G__7573__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__7573__1 = (function (x){
return cljs.core.not((function (){var G__7570 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7570) : f.call(null,G__7570));
})());
});
var G__7573__2 = (function (x,y){
return cljs.core.not((function (){var G__7571 = x;
var G__7572 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7571,G__7572) : f.call(null,G__7571,G__7572));
})());
});
var G__7573__3 = (function() { 
var G__7574__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__7574 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7575__i = 0, G__7575__a = new Array(arguments.length -  2);
while (G__7575__i < G__7575__a.length) {G__7575__a[G__7575__i] = arguments[G__7575__i + 2]; ++G__7575__i;}
  zs = new cljs.core.IndexedSeq(G__7575__a,0);
} 
return G__7574__delegate.call(this,x,y,zs);};
G__7574.cljs$lang$maxFixedArity = 2;
G__7574.cljs$lang$applyTo = (function (arglist__7576){
var x = cljs.core.first(arglist__7576);
arglist__7576 = cljs.core.next(arglist__7576);
var y = cljs.core.first(arglist__7576);
var zs = cljs.core.rest(arglist__7576);
return G__7574__delegate(x,y,zs);
});
G__7574.cljs$core$IFn$_invoke$arity$variadic = G__7574__delegate;
return G__7574;
})()
;
G__7573 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__7573__0.call(this);
case 1:
return G__7573__1.call(this,x);
case 2:
return G__7573__2.call(this,x,y);
default:
var G__7577 = null;
if (arguments.length > 2) {
var G__7578__i = 0, G__7578__a = new Array(arguments.length -  2);
while (G__7578__i < G__7578__a.length) {G__7578__a[G__7578__i] = arguments[G__7578__i + 2]; ++G__7578__i;}
G__7577 = new cljs.core.IndexedSeq(G__7578__a,0);
}
return G__7573__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7577);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7573.cljs$lang$maxFixedArity = 2;
G__7573.cljs$lang$applyTo = G__7573__3.cljs$lang$applyTo;
G__7573.cljs$core$IFn$_invoke$arity$0 = G__7573__0;
G__7573.cljs$core$IFn$_invoke$arity$1 = G__7573__1;
G__7573.cljs$core$IFn$_invoke$arity$2 = G__7573__2;
G__7573.cljs$core$IFn$_invoke$arity$variadic = G__7573__3.cljs$core$IFn$_invoke$arity$variadic;
return G__7573;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__7579__delegate = function (args){
return x;
};
var G__7579 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7580__i = 0, G__7580__a = new Array(arguments.length -  0);
while (G__7580__i < G__7580__a.length) {G__7580__a[G__7580__i] = arguments[G__7580__i + 0]; ++G__7580__i;}
  args = new cljs.core.IndexedSeq(G__7580__a,0);
} 
return G__7579__delegate.call(this,args);};
G__7579.cljs$lang$maxFixedArity = 0;
G__7579.cljs$lang$applyTo = (function (arglist__7581){
var args = cljs.core.seq(arglist__7581);
return G__7579__delegate(args);
});
G__7579.cljs$core$IFn$_invoke$arity$variadic = G__7579__delegate;
return G__7579;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__7636 = null;
var G__7636__0 = (function (){
var G__7609 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7609) : f.call(null,G__7609));
});
var G__7636__1 = (function (x){
var G__7610 = (function (){var G__7611 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7611) : g.call(null,G__7611));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7610) : f.call(null,G__7610));
});
var G__7636__2 = (function (x,y){
var G__7612 = (function (){var G__7613 = x;
var G__7614 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7613,G__7614) : g.call(null,G__7613,G__7614));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7612) : f.call(null,G__7612));
});
var G__7636__3 = (function (x,y,z){
var G__7615 = (function (){var G__7616 = x;
var G__7617 = y;
var G__7618 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7616,G__7617,G__7618) : g.call(null,G__7616,G__7617,G__7618));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7615) : f.call(null,G__7615));
});
var G__7636__4 = (function() { 
var G__7637__delegate = function (x,y,z,args){
var G__7619 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7619) : f.call(null,G__7619));
};
var G__7637 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7638__i = 0, G__7638__a = new Array(arguments.length -  3);
while (G__7638__i < G__7638__a.length) {G__7638__a[G__7638__i] = arguments[G__7638__i + 3]; ++G__7638__i;}
  args = new cljs.core.IndexedSeq(G__7638__a,0);
} 
return G__7637__delegate.call(this,x,y,z,args);};
G__7637.cljs$lang$maxFixedArity = 3;
G__7637.cljs$lang$applyTo = (function (arglist__7639){
var x = cljs.core.first(arglist__7639);
arglist__7639 = cljs.core.next(arglist__7639);
var y = cljs.core.first(arglist__7639);
arglist__7639 = cljs.core.next(arglist__7639);
var z = cljs.core.first(arglist__7639);
var args = cljs.core.rest(arglist__7639);
return G__7637__delegate(x,y,z,args);
});
G__7637.cljs$core$IFn$_invoke$arity$variadic = G__7637__delegate;
return G__7637;
})()
;
G__7636 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7636__0.call(this);
case 1:
return G__7636__1.call(this,x);
case 2:
return G__7636__2.call(this,x,y);
case 3:
return G__7636__3.call(this,x,y,z);
default:
var G__7640 = null;
if (arguments.length > 3) {
var G__7641__i = 0, G__7641__a = new Array(arguments.length -  3);
while (G__7641__i < G__7641__a.length) {G__7641__a[G__7641__i] = arguments[G__7641__i + 3]; ++G__7641__i;}
G__7640 = new cljs.core.IndexedSeq(G__7641__a,0);
}
return G__7636__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7640);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7636.cljs$lang$maxFixedArity = 3;
G__7636.cljs$lang$applyTo = G__7636__4.cljs$lang$applyTo;
G__7636.cljs$core$IFn$_invoke$arity$0 = G__7636__0;
G__7636.cljs$core$IFn$_invoke$arity$1 = G__7636__1;
G__7636.cljs$core$IFn$_invoke$arity$2 = G__7636__2;
G__7636.cljs$core$IFn$_invoke$arity$3 = G__7636__3;
G__7636.cljs$core$IFn$_invoke$arity$variadic = G__7636__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7636;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__7642 = null;
var G__7642__0 = (function (){
var G__7620 = (function (){var G__7621 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7621) : g.call(null,G__7621));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7620) : f.call(null,G__7620));
});
var G__7642__1 = (function (x){
var G__7622 = (function (){var G__7623 = (function (){var G__7624 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7624) : h.call(null,G__7624));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7623) : g.call(null,G__7623));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7622) : f.call(null,G__7622));
});
var G__7642__2 = (function (x,y){
var G__7625 = (function (){var G__7626 = (function (){var G__7627 = x;
var G__7628 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7627,G__7628) : h.call(null,G__7627,G__7628));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7626) : g.call(null,G__7626));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7625) : f.call(null,G__7625));
});
var G__7642__3 = (function (x,y,z){
var G__7629 = (function (){var G__7630 = (function (){var G__7631 = x;
var G__7632 = y;
var G__7633 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7631,G__7632,G__7633) : h.call(null,G__7631,G__7632,G__7633));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7630) : g.call(null,G__7630));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7629) : f.call(null,G__7629));
});
var G__7642__4 = (function() { 
var G__7643__delegate = function (x,y,z,args){
var G__7634 = (function (){var G__7635 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7635) : g.call(null,G__7635));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7634) : f.call(null,G__7634));
};
var G__7643 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7644__i = 0, G__7644__a = new Array(arguments.length -  3);
while (G__7644__i < G__7644__a.length) {G__7644__a[G__7644__i] = arguments[G__7644__i + 3]; ++G__7644__i;}
  args = new cljs.core.IndexedSeq(G__7644__a,0);
} 
return G__7643__delegate.call(this,x,y,z,args);};
G__7643.cljs$lang$maxFixedArity = 3;
G__7643.cljs$lang$applyTo = (function (arglist__7645){
var x = cljs.core.first(arglist__7645);
arglist__7645 = cljs.core.next(arglist__7645);
var y = cljs.core.first(arglist__7645);
arglist__7645 = cljs.core.next(arglist__7645);
var z = cljs.core.first(arglist__7645);
var args = cljs.core.rest(arglist__7645);
return G__7643__delegate(x,y,z,args);
});
G__7643.cljs$core$IFn$_invoke$arity$variadic = G__7643__delegate;
return G__7643;
})()
;
G__7642 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7642__0.call(this);
case 1:
return G__7642__1.call(this,x);
case 2:
return G__7642__2.call(this,x,y);
case 3:
return G__7642__3.call(this,x,y,z);
default:
var G__7646 = null;
if (arguments.length > 3) {
var G__7647__i = 0, G__7647__a = new Array(arguments.length -  3);
while (G__7647__i < G__7647__a.length) {G__7647__a[G__7647__i] = arguments[G__7647__i + 3]; ++G__7647__i;}
G__7646 = new cljs.core.IndexedSeq(G__7647__a,0);
}
return G__7642__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7646);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7642.cljs$lang$maxFixedArity = 3;
G__7642.cljs$lang$applyTo = G__7642__4.cljs$lang$applyTo;
G__7642.cljs$core$IFn$_invoke$arity$0 = G__7642__0;
G__7642.cljs$core$IFn$_invoke$arity$1 = G__7642__1;
G__7642.cljs$core$IFn$_invoke$arity$2 = G__7642__2;
G__7642.cljs$core$IFn$_invoke$arity$3 = G__7642__3;
G__7642.cljs$core$IFn$_invoke$arity$variadic = G__7642__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7642;
})()
});
var comp__4 = (function() { 
var G__7648__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__7649__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__7650 = cljs.core.first(fs__$2).call(null,ret);
var G__7651 = cljs.core.next(fs__$2);
ret = G__7650;
fs__$2 = G__7651;
continue;
} else {
return ret;
}
break;
}
};
var G__7649 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7652__i = 0, G__7652__a = new Array(arguments.length -  0);
while (G__7652__i < G__7652__a.length) {G__7652__a[G__7652__i] = arguments[G__7652__i + 0]; ++G__7652__i;}
  args = new cljs.core.IndexedSeq(G__7652__a,0);
} 
return G__7649__delegate.call(this,args);};
G__7649.cljs$lang$maxFixedArity = 0;
G__7649.cljs$lang$applyTo = (function (arglist__7653){
var args = cljs.core.seq(arglist__7653);
return G__7649__delegate(args);
});
G__7649.cljs$core$IFn$_invoke$arity$variadic = G__7649__delegate;
return G__7649;
})()
;
;})(fs__$1))
};
var G__7648 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__7654__i = 0, G__7654__a = new Array(arguments.length -  3);
while (G__7654__i < G__7654__a.length) {G__7654__a[G__7654__i] = arguments[G__7654__i + 3]; ++G__7654__i;}
  fs = new cljs.core.IndexedSeq(G__7654__a,0);
} 
return G__7648__delegate.call(this,f1,f2,f3,fs);};
G__7648.cljs$lang$maxFixedArity = 3;
G__7648.cljs$lang$applyTo = (function (arglist__7655){
var f1 = cljs.core.first(arglist__7655);
arglist__7655 = cljs.core.next(arglist__7655);
var f2 = cljs.core.first(arglist__7655);
arglist__7655 = cljs.core.next(arglist__7655);
var f3 = cljs.core.first(arglist__7655);
var fs = cljs.core.rest(arglist__7655);
return G__7648__delegate(f1,f2,f3,fs);
});
G__7648.cljs$core$IFn$_invoke$arity$variadic = G__7648__delegate;
return G__7648;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__7656 = null;
if (arguments.length > 3) {
var G__7657__i = 0, G__7657__a = new Array(arguments.length -  3);
while (G__7657__i < G__7657__a.length) {G__7657__a[G__7657__i] = arguments[G__7657__i + 3]; ++G__7657__i;}
G__7656 = new cljs.core.IndexedSeq(G__7657__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__7656);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__7742 = null;
var G__7742__0 = (function (){
var G__7700 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7700) : f.call(null,G__7700));
});
var G__7742__1 = (function (x){
var G__7701 = arg1;
var G__7702 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7701,G__7702) : f.call(null,G__7701,G__7702));
});
var G__7742__2 = (function (x,y){
var G__7703 = arg1;
var G__7704 = x;
var G__7705 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7703,G__7704,G__7705) : f.call(null,G__7703,G__7704,G__7705));
});
var G__7742__3 = (function (x,y,z){
var G__7706 = arg1;
var G__7707 = x;
var G__7708 = y;
var G__7709 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7706,G__7707,G__7708,G__7709) : f.call(null,G__7706,G__7707,G__7708,G__7709));
});
var G__7742__4 = (function() { 
var G__7743__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__7743 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7744__i = 0, G__7744__a = new Array(arguments.length -  3);
while (G__7744__i < G__7744__a.length) {G__7744__a[G__7744__i] = arguments[G__7744__i + 3]; ++G__7744__i;}
  args = new cljs.core.IndexedSeq(G__7744__a,0);
} 
return G__7743__delegate.call(this,x,y,z,args);};
G__7743.cljs$lang$maxFixedArity = 3;
G__7743.cljs$lang$applyTo = (function (arglist__7745){
var x = cljs.core.first(arglist__7745);
arglist__7745 = cljs.core.next(arglist__7745);
var y = cljs.core.first(arglist__7745);
arglist__7745 = cljs.core.next(arglist__7745);
var z = cljs.core.first(arglist__7745);
var args = cljs.core.rest(arglist__7745);
return G__7743__delegate(x,y,z,args);
});
G__7743.cljs$core$IFn$_invoke$arity$variadic = G__7743__delegate;
return G__7743;
})()
;
G__7742 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7742__0.call(this);
case 1:
return G__7742__1.call(this,x);
case 2:
return G__7742__2.call(this,x,y);
case 3:
return G__7742__3.call(this,x,y,z);
default:
var G__7746 = null;
if (arguments.length > 3) {
var G__7747__i = 0, G__7747__a = new Array(arguments.length -  3);
while (G__7747__i < G__7747__a.length) {G__7747__a[G__7747__i] = arguments[G__7747__i + 3]; ++G__7747__i;}
G__7746 = new cljs.core.IndexedSeq(G__7747__a,0);
}
return G__7742__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7742.cljs$lang$maxFixedArity = 3;
G__7742.cljs$lang$applyTo = G__7742__4.cljs$lang$applyTo;
G__7742.cljs$core$IFn$_invoke$arity$0 = G__7742__0;
G__7742.cljs$core$IFn$_invoke$arity$1 = G__7742__1;
G__7742.cljs$core$IFn$_invoke$arity$2 = G__7742__2;
G__7742.cljs$core$IFn$_invoke$arity$3 = G__7742__3;
G__7742.cljs$core$IFn$_invoke$arity$variadic = G__7742__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7742;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__7748 = null;
var G__7748__0 = (function (){
var G__7710 = arg1;
var G__7711 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7710,G__7711) : f.call(null,G__7710,G__7711));
});
var G__7748__1 = (function (x){
var G__7712 = arg1;
var G__7713 = arg2;
var G__7714 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7712,G__7713,G__7714) : f.call(null,G__7712,G__7713,G__7714));
});
var G__7748__2 = (function (x,y){
var G__7715 = arg1;
var G__7716 = arg2;
var G__7717 = x;
var G__7718 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7715,G__7716,G__7717,G__7718) : f.call(null,G__7715,G__7716,G__7717,G__7718));
});
var G__7748__3 = (function (x,y,z){
var G__7719 = arg1;
var G__7720 = arg2;
var G__7721 = x;
var G__7722 = y;
var G__7723 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7719,G__7720,G__7721,G__7722,G__7723) : f.call(null,G__7719,G__7720,G__7721,G__7722,G__7723));
});
var G__7748__4 = (function() { 
var G__7749__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__7749 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7750__i = 0, G__7750__a = new Array(arguments.length -  3);
while (G__7750__i < G__7750__a.length) {G__7750__a[G__7750__i] = arguments[G__7750__i + 3]; ++G__7750__i;}
  args = new cljs.core.IndexedSeq(G__7750__a,0);
} 
return G__7749__delegate.call(this,x,y,z,args);};
G__7749.cljs$lang$maxFixedArity = 3;
G__7749.cljs$lang$applyTo = (function (arglist__7751){
var x = cljs.core.first(arglist__7751);
arglist__7751 = cljs.core.next(arglist__7751);
var y = cljs.core.first(arglist__7751);
arglist__7751 = cljs.core.next(arglist__7751);
var z = cljs.core.first(arglist__7751);
var args = cljs.core.rest(arglist__7751);
return G__7749__delegate(x,y,z,args);
});
G__7749.cljs$core$IFn$_invoke$arity$variadic = G__7749__delegate;
return G__7749;
})()
;
G__7748 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7748__0.call(this);
case 1:
return G__7748__1.call(this,x);
case 2:
return G__7748__2.call(this,x,y);
case 3:
return G__7748__3.call(this,x,y,z);
default:
var G__7752 = null;
if (arguments.length > 3) {
var G__7753__i = 0, G__7753__a = new Array(arguments.length -  3);
while (G__7753__i < G__7753__a.length) {G__7753__a[G__7753__i] = arguments[G__7753__i + 3]; ++G__7753__i;}
G__7752 = new cljs.core.IndexedSeq(G__7753__a,0);
}
return G__7748__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7748.cljs$lang$maxFixedArity = 3;
G__7748.cljs$lang$applyTo = G__7748__4.cljs$lang$applyTo;
G__7748.cljs$core$IFn$_invoke$arity$0 = G__7748__0;
G__7748.cljs$core$IFn$_invoke$arity$1 = G__7748__1;
G__7748.cljs$core$IFn$_invoke$arity$2 = G__7748__2;
G__7748.cljs$core$IFn$_invoke$arity$3 = G__7748__3;
G__7748.cljs$core$IFn$_invoke$arity$variadic = G__7748__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7748;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__7754 = null;
var G__7754__0 = (function (){
var G__7724 = arg1;
var G__7725 = arg2;
var G__7726 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7724,G__7725,G__7726) : f.call(null,G__7724,G__7725,G__7726));
});
var G__7754__1 = (function (x){
var G__7727 = arg1;
var G__7728 = arg2;
var G__7729 = arg3;
var G__7730 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7727,G__7728,G__7729,G__7730) : f.call(null,G__7727,G__7728,G__7729,G__7730));
});
var G__7754__2 = (function (x,y){
var G__7731 = arg1;
var G__7732 = arg2;
var G__7733 = arg3;
var G__7734 = x;
var G__7735 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7731,G__7732,G__7733,G__7734,G__7735) : f.call(null,G__7731,G__7732,G__7733,G__7734,G__7735));
});
var G__7754__3 = (function (x,y,z){
var G__7736 = arg1;
var G__7737 = arg2;
var G__7738 = arg3;
var G__7739 = x;
var G__7740 = y;
var G__7741 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7736,G__7737,G__7738,G__7739,G__7740,G__7741) : f.call(null,G__7736,G__7737,G__7738,G__7739,G__7740,G__7741));
});
var G__7754__4 = (function() { 
var G__7755__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__7755 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7756__i = 0, G__7756__a = new Array(arguments.length -  3);
while (G__7756__i < G__7756__a.length) {G__7756__a[G__7756__i] = arguments[G__7756__i + 3]; ++G__7756__i;}
  args = new cljs.core.IndexedSeq(G__7756__a,0);
} 
return G__7755__delegate.call(this,x,y,z,args);};
G__7755.cljs$lang$maxFixedArity = 3;
G__7755.cljs$lang$applyTo = (function (arglist__7757){
var x = cljs.core.first(arglist__7757);
arglist__7757 = cljs.core.next(arglist__7757);
var y = cljs.core.first(arglist__7757);
arglist__7757 = cljs.core.next(arglist__7757);
var z = cljs.core.first(arglist__7757);
var args = cljs.core.rest(arglist__7757);
return G__7755__delegate(x,y,z,args);
});
G__7755.cljs$core$IFn$_invoke$arity$variadic = G__7755__delegate;
return G__7755;
})()
;
G__7754 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7754__0.call(this);
case 1:
return G__7754__1.call(this,x);
case 2:
return G__7754__2.call(this,x,y);
case 3:
return G__7754__3.call(this,x,y,z);
default:
var G__7758 = null;
if (arguments.length > 3) {
var G__7759__i = 0, G__7759__a = new Array(arguments.length -  3);
while (G__7759__i < G__7759__a.length) {G__7759__a[G__7759__i] = arguments[G__7759__i + 3]; ++G__7759__i;}
G__7758 = new cljs.core.IndexedSeq(G__7759__a,0);
}
return G__7754__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7758);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7754.cljs$lang$maxFixedArity = 3;
G__7754.cljs$lang$applyTo = G__7754__4.cljs$lang$applyTo;
G__7754.cljs$core$IFn$_invoke$arity$0 = G__7754__0;
G__7754.cljs$core$IFn$_invoke$arity$1 = G__7754__1;
G__7754.cljs$core$IFn$_invoke$arity$2 = G__7754__2;
G__7754.cljs$core$IFn$_invoke$arity$3 = G__7754__3;
G__7754.cljs$core$IFn$_invoke$arity$variadic = G__7754__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7754;
})()
});
var partial__5 = (function() { 
var G__7760__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__7761__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__7761 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7762__i = 0, G__7762__a = new Array(arguments.length -  0);
while (G__7762__i < G__7762__a.length) {G__7762__a[G__7762__i] = arguments[G__7762__i + 0]; ++G__7762__i;}
  args = new cljs.core.IndexedSeq(G__7762__a,0);
} 
return G__7761__delegate.call(this,args);};
G__7761.cljs$lang$maxFixedArity = 0;
G__7761.cljs$lang$applyTo = (function (arglist__7763){
var args = cljs.core.seq(arglist__7763);
return G__7761__delegate(args);
});
G__7761.cljs$core$IFn$_invoke$arity$variadic = G__7761__delegate;
return G__7761;
})()
;
};
var G__7760 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__7764__i = 0, G__7764__a = new Array(arguments.length -  4);
while (G__7764__i < G__7764__a.length) {G__7764__a[G__7764__i] = arguments[G__7764__i + 4]; ++G__7764__i;}
  more = new cljs.core.IndexedSeq(G__7764__a,0);
} 
return G__7760__delegate.call(this,f,arg1,arg2,arg3,more);};
G__7760.cljs$lang$maxFixedArity = 4;
G__7760.cljs$lang$applyTo = (function (arglist__7765){
var f = cljs.core.first(arglist__7765);
arglist__7765 = cljs.core.next(arglist__7765);
var arg1 = cljs.core.first(arglist__7765);
arglist__7765 = cljs.core.next(arglist__7765);
var arg2 = cljs.core.first(arglist__7765);
arglist__7765 = cljs.core.next(arglist__7765);
var arg3 = cljs.core.first(arglist__7765);
var more = cljs.core.rest(arglist__7765);
return G__7760__delegate(f,arg1,arg2,arg3,more);
});
G__7760.cljs$core$IFn$_invoke$arity$variadic = G__7760__delegate;
return G__7760;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__7766 = null;
if (arguments.length > 4) {
var G__7767__i = 0, G__7767__a = new Array(arguments.length -  4);
while (G__7767__i < G__7767__a.length) {G__7767__a[G__7767__i] = arguments[G__7767__i + 4]; ++G__7767__i;}
G__7766 = new cljs.core.IndexedSeq(G__7767__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__7766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__7800 = null;
var G__7800__1 = (function (a){
var G__7784 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7784) : f.call(null,G__7784));
});
var G__7800__2 = (function (a,b){
var G__7785 = (((a == null))?x:a);
var G__7786 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7785,G__7786) : f.call(null,G__7785,G__7786));
});
var G__7800__3 = (function (a,b,c){
var G__7787 = (((a == null))?x:a);
var G__7788 = b;
var G__7789 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7787,G__7788,G__7789) : f.call(null,G__7787,G__7788,G__7789));
});
var G__7800__4 = (function() { 
var G__7801__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__7801 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7802__i = 0, G__7802__a = new Array(arguments.length -  3);
while (G__7802__i < G__7802__a.length) {G__7802__a[G__7802__i] = arguments[G__7802__i + 3]; ++G__7802__i;}
  ds = new cljs.core.IndexedSeq(G__7802__a,0);
} 
return G__7801__delegate.call(this,a,b,c,ds);};
G__7801.cljs$lang$maxFixedArity = 3;
G__7801.cljs$lang$applyTo = (function (arglist__7803){
var a = cljs.core.first(arglist__7803);
arglist__7803 = cljs.core.next(arglist__7803);
var b = cljs.core.first(arglist__7803);
arglist__7803 = cljs.core.next(arglist__7803);
var c = cljs.core.first(arglist__7803);
var ds = cljs.core.rest(arglist__7803);
return G__7801__delegate(a,b,c,ds);
});
G__7801.cljs$core$IFn$_invoke$arity$variadic = G__7801__delegate;
return G__7801;
})()
;
G__7800 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__7800__1.call(this,a);
case 2:
return G__7800__2.call(this,a,b);
case 3:
return G__7800__3.call(this,a,b,c);
default:
var G__7804 = null;
if (arguments.length > 3) {
var G__7805__i = 0, G__7805__a = new Array(arguments.length -  3);
while (G__7805__i < G__7805__a.length) {G__7805__a[G__7805__i] = arguments[G__7805__i + 3]; ++G__7805__i;}
G__7804 = new cljs.core.IndexedSeq(G__7805__a,0);
}
return G__7800__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7804);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7800.cljs$lang$maxFixedArity = 3;
G__7800.cljs$lang$applyTo = G__7800__4.cljs$lang$applyTo;
G__7800.cljs$core$IFn$_invoke$arity$1 = G__7800__1;
G__7800.cljs$core$IFn$_invoke$arity$2 = G__7800__2;
G__7800.cljs$core$IFn$_invoke$arity$3 = G__7800__3;
G__7800.cljs$core$IFn$_invoke$arity$variadic = G__7800__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7800;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__7806 = null;
var G__7806__2 = (function (a,b){
var G__7790 = (((a == null))?x:a);
var G__7791 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7790,G__7791) : f.call(null,G__7790,G__7791));
});
var G__7806__3 = (function (a,b,c){
var G__7792 = (((a == null))?x:a);
var G__7793 = (((b == null))?y:b);
var G__7794 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7792,G__7793,G__7794) : f.call(null,G__7792,G__7793,G__7794));
});
var G__7806__4 = (function() { 
var G__7807__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__7807 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7808__i = 0, G__7808__a = new Array(arguments.length -  3);
while (G__7808__i < G__7808__a.length) {G__7808__a[G__7808__i] = arguments[G__7808__i + 3]; ++G__7808__i;}
  ds = new cljs.core.IndexedSeq(G__7808__a,0);
} 
return G__7807__delegate.call(this,a,b,c,ds);};
G__7807.cljs$lang$maxFixedArity = 3;
G__7807.cljs$lang$applyTo = (function (arglist__7809){
var a = cljs.core.first(arglist__7809);
arglist__7809 = cljs.core.next(arglist__7809);
var b = cljs.core.first(arglist__7809);
arglist__7809 = cljs.core.next(arglist__7809);
var c = cljs.core.first(arglist__7809);
var ds = cljs.core.rest(arglist__7809);
return G__7807__delegate(a,b,c,ds);
});
G__7807.cljs$core$IFn$_invoke$arity$variadic = G__7807__delegate;
return G__7807;
})()
;
G__7806 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7806__2.call(this,a,b);
case 3:
return G__7806__3.call(this,a,b,c);
default:
var G__7810 = null;
if (arguments.length > 3) {
var G__7811__i = 0, G__7811__a = new Array(arguments.length -  3);
while (G__7811__i < G__7811__a.length) {G__7811__a[G__7811__i] = arguments[G__7811__i + 3]; ++G__7811__i;}
G__7810 = new cljs.core.IndexedSeq(G__7811__a,0);
}
return G__7806__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7810);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7806.cljs$lang$maxFixedArity = 3;
G__7806.cljs$lang$applyTo = G__7806__4.cljs$lang$applyTo;
G__7806.cljs$core$IFn$_invoke$arity$2 = G__7806__2;
G__7806.cljs$core$IFn$_invoke$arity$3 = G__7806__3;
G__7806.cljs$core$IFn$_invoke$arity$variadic = G__7806__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7806;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__7812 = null;
var G__7812__2 = (function (a,b){
var G__7795 = (((a == null))?x:a);
var G__7796 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7795,G__7796) : f.call(null,G__7795,G__7796));
});
var G__7812__3 = (function (a,b,c){
var G__7797 = (((a == null))?x:a);
var G__7798 = (((b == null))?y:b);
var G__7799 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7797,G__7798,G__7799) : f.call(null,G__7797,G__7798,G__7799));
});
var G__7812__4 = (function() { 
var G__7813__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__7813 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7814__i = 0, G__7814__a = new Array(arguments.length -  3);
while (G__7814__i < G__7814__a.length) {G__7814__a[G__7814__i] = arguments[G__7814__i + 3]; ++G__7814__i;}
  ds = new cljs.core.IndexedSeq(G__7814__a,0);
} 
return G__7813__delegate.call(this,a,b,c,ds);};
G__7813.cljs$lang$maxFixedArity = 3;
G__7813.cljs$lang$applyTo = (function (arglist__7815){
var a = cljs.core.first(arglist__7815);
arglist__7815 = cljs.core.next(arglist__7815);
var b = cljs.core.first(arglist__7815);
arglist__7815 = cljs.core.next(arglist__7815);
var c = cljs.core.first(arglist__7815);
var ds = cljs.core.rest(arglist__7815);
return G__7813__delegate(a,b,c,ds);
});
G__7813.cljs$core$IFn$_invoke$arity$variadic = G__7813__delegate;
return G__7813;
})()
;
G__7812 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7812__2.call(this,a,b);
case 3:
return G__7812__3.call(this,a,b,c);
default:
var G__7816 = null;
if (arguments.length > 3) {
var G__7817__i = 0, G__7817__a = new Array(arguments.length -  3);
while (G__7817__i < G__7817__a.length) {G__7817__a[G__7817__i] = arguments[G__7817__i + 3]; ++G__7817__i;}
G__7816 = new cljs.core.IndexedSeq(G__7817__a,0);
}
return G__7812__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7816);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7812.cljs$lang$maxFixedArity = 3;
G__7812.cljs$lang$applyTo = G__7812__4.cljs$lang$applyTo;
G__7812.cljs$core$IFn$_invoke$arity$2 = G__7812__2;
G__7812.cljs$core$IFn$_invoke$arity$3 = G__7812__3;
G__7812.cljs$core$IFn$_invoke$arity$variadic = G__7812__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7812;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__7848 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7848) : cljs.core.volatile_BANG_.call(null,G__7848));
})();
return ((function (i){
return (function() {
var G__7878 = null;
var G__7878__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7878__1 = (function (result){
var G__7849 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7849) : rf.call(null,G__7849));
});
var G__7878__2 = (function (result,input){
var G__7850 = result;
var G__7851 = (function (){var G__7852 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__7853 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7852,G__7853) : f.call(null,G__7852,G__7853));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7850,G__7851) : rf.call(null,G__7850,G__7851));
});
G__7878 = function(result,input){
switch(arguments.length){
case 0:
return G__7878__0.call(this);
case 1:
return G__7878__1.call(this,result);
case 2:
return G__7878__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7878.cljs$core$IFn$_invoke$arity$0 = G__7878__0;
G__7878.cljs$core$IFn$_invoke$arity$1 = G__7878__1;
G__7878.cljs$core$IFn$_invoke$arity$2 = G__7878__2;
return G__7878;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___7879 = size;
var i_7880 = (0);
while(true){
if((i_7880 < n__4700__auto___7879)){
cljs.core.chunk_append(b,(function (){var G__7874 = (idx + i_7880);
var G__7875 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7880);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7874,G__7875) : f.call(null,G__7874,G__7875));
})());

var G__7881 = (i_7880 + (1));
i_7880 = G__7881;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__7876 = idx;
var G__7877 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7876,G__7877) : f.call(null,G__7876,G__7877));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__7900 = null;
var G__7900__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7900__1 = (function (result){
var G__7894 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7894) : rf.call(null,G__7894));
});
var G__7900__2 = (function (result,input){
var v = (function (){var G__7895 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7895) : f.call(null,G__7895));
})();
if((v == null)){
return result;
} else {
var G__7896 = result;
var G__7897 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7896,G__7897) : rf.call(null,G__7896,G__7897));
}
});
G__7900 = function(result,input){
switch(arguments.length){
case 0:
return G__7900__0.call(this);
case 1:
return G__7900__1.call(this,result);
case 2:
return G__7900__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7900.cljs$core$IFn$_invoke$arity$0 = G__7900__0;
G__7900.cljs$core$IFn$_invoke$arity$1 = G__7900__1;
G__7900.cljs$core$IFn$_invoke$arity$2 = G__7900__2;
return G__7900;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___7901 = size;
var i_7902 = (0);
while(true){
if((i_7902 < n__4700__auto___7901)){
var x_7903 = (function (){var G__7898 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7902);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7898) : f.call(null,G__7898));
})();
if((x_7903 == null)){
} else {
cljs.core.chunk_append(b,x_7903);
}

var G__7904 = (i_7902 + (1));
i_7902 = G__7904;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7899 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7899) : f.call(null,G__7899));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__7905 = this$__$1;
return goog.getUid(G__7905);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__7906 = cljs.core.seq(self__.watches);
var chunk__7907 = null;
var count__7908 = (0);
var i__7909 = (0);
while(true){
if((i__7909 < count__7908)){
var vec__7910 = chunk__7907.cljs$core$IIndexed$_nth$arity$2(null,i__7909);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7910,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7910,(1),null);
var G__7911_7920 = key;
var G__7912_7921 = this$__$1;
var G__7913_7922 = oldval;
var G__7914_7923 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7911_7920,G__7912_7921,G__7913_7922,G__7914_7923) : f.call(null,G__7911_7920,G__7912_7921,G__7913_7922,G__7914_7923));

var G__7924 = seq__7906;
var G__7925 = chunk__7907;
var G__7926 = count__7908;
var G__7927 = (i__7909 + (1));
seq__7906 = G__7924;
chunk__7907 = G__7925;
count__7908 = G__7926;
i__7909 = G__7927;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__7906);
if(temp__4126__auto__){
var seq__7906__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__7906__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__7906__$1);
var G__7928 = cljs.core.chunk_rest(seq__7906__$1);
var G__7929 = c__4600__auto__;
var G__7930 = cljs.core.count(c__4600__auto__);
var G__7931 = (0);
seq__7906 = G__7928;
chunk__7907 = G__7929;
count__7908 = G__7930;
i__7909 = G__7931;
continue;
} else {
var vec__7915 = cljs.core.first(seq__7906__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7915,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7915,(1),null);
var G__7916_7932 = key;
var G__7917_7933 = this$__$1;
var G__7918_7934 = oldval;
var G__7919_7935 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7916_7932,G__7917_7933,G__7918_7934,G__7919_7935) : f.call(null,G__7916_7932,G__7917_7933,G__7918_7934,G__7919_7935));

var G__7936 = cljs.core.next(seq__7906__$1);
var G__7937 = null;
var G__7938 = (0);
var G__7939 = (0);
seq__7906 = G__7936;
chunk__7907 = G__7937;
count__7908 = G__7938;
i__7909 = G__7939;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__7943__delegate = function (x,p__7940){
var map__7942 = p__7940;
var map__7942__$1 = ((cljs.core.seq_QMARK_(map__7942))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7942):map__7942);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7942__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7942__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__7943 = function (x,var_args){
var p__7940 = null;
if (arguments.length > 1) {
var G__7944__i = 0, G__7944__a = new Array(arguments.length -  1);
while (G__7944__i < G__7944__a.length) {G__7944__a[G__7944__i] = arguments[G__7944__i + 1]; ++G__7944__i;}
  p__7940 = new cljs.core.IndexedSeq(G__7944__a,0);
} 
return G__7943__delegate.call(this,x,p__7940);};
G__7943.cljs$lang$maxFixedArity = 1;
G__7943.cljs$lang$applyTo = (function (arglist__7945){
var x = cljs.core.first(arglist__7945);
var p__7940 = cljs.core.rest(arglist__7945);
return G__7943__delegate(x,p__7940);
});
G__7943.cljs$core$IFn$_invoke$arity$variadic = G__7943__delegate;
return G__7943;
})()
;
atom = function(x,var_args){
var p__7940 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__7946 = null;
if (arguments.length > 1) {
var G__7947__i = 0, G__7947__a = new Array(arguments.length -  1);
while (G__7947__i < G__7947__a.length) {G__7947__a[G__7947__i] = arguments[G__7947__i + 1]; ++G__7947__i;}
G__7946 = new cljs.core.IndexedSeq(G__7947__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7946);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__7950 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7950) : validate.call(null,G__7950));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__7951 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7951) : cljs.core.pr_str.call(null,G__7951));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7958 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7958) : f.call(null,G__7958));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7959 = a.state;
var G__7960 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7959,G__7960) : f.call(null,G__7959,G__7960));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7961 = a.state;
var G__7962 = x;
var G__7963 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7961,G__7962,G__7963) : f.call(null,G__7961,G__7962,G__7963));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__7964__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__7964 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__7965__i = 0, G__7965__a = new Array(arguments.length -  4);
while (G__7965__i < G__7965__a.length) {G__7965__a[G__7965__i] = arguments[G__7965__i + 4]; ++G__7965__i;}
  more = new cljs.core.IndexedSeq(G__7965__a,0);
} 
return G__7964__delegate.call(this,a,f,x,y,more);};
G__7964.cljs$lang$maxFixedArity = 4;
G__7964.cljs$lang$applyTo = (function (arglist__7966){
var a = cljs.core.first(arglist__7966);
arglist__7966 = cljs.core.next(arglist__7966);
var f = cljs.core.first(arglist__7966);
arglist__7966 = cljs.core.next(arglist__7966);
var x = cljs.core.first(arglist__7966);
arglist__7966 = cljs.core.next(arglist__7966);
var y = cljs.core.first(arglist__7966);
var more = cljs.core.rest(arglist__7966);
return G__7964__delegate(a,f,x,y,more);
});
G__7964.cljs$core$IFn$_invoke$arity$variadic = G__7964__delegate;
return G__7964;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__7967 = null;
if (arguments.length > 4) {
var G__7968__i = 0, G__7968__a = new Array(arguments.length -  4);
while (G__7968__i < G__7968__a.length) {G__7968__a[G__7968__i] = arguments[G__7968__i + 4]; ++G__7968__i;}
G__7967 = new cljs.core.IndexedSeq(G__7968__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__7967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8035 = null;
var G__8035__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8035__1 = (function (result){
var G__8002 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8002) : rf.call(null,G__8002));
});
var G__8035__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8003 = i;
var G__8004 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8003,G__8004) : f.call(null,G__8003,G__8004));
})();
if((v == null)){
return result;
} else {
var G__8005 = result;
var G__8006 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8005,G__8006) : rf.call(null,G__8005,G__8006));
}
});
G__8035 = function(result,input){
switch(arguments.length){
case 0:
return G__8035__0.call(this);
case 1:
return G__8035__1.call(this,result);
case 2:
return G__8035__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8035.cljs$core$IFn$_invoke$arity$0 = G__8035__0;
G__8035.cljs$core$IFn$_invoke$arity$1 = G__8035__1;
G__8035.cljs$core$IFn$_invoke$arity$2 = G__8035__2;
return G__8035;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___8036 = size;
var i_8037 = (0);
while(true){
if((i_8037 < n__4700__auto___8036)){
var x_8038 = (function (){var G__8031 = (idx + i_8037);
var G__8032 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8037);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8031,G__8032) : f.call(null,G__8031,G__8032));
})();
if((x_8038 == null)){
} else {
cljs.core.chunk_append(b,x_8038);
}

var G__8039 = (i_8037 + (1));
i_8037 = G__8039;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8033 = idx;
var G__8034 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8033,G__8034) : f.call(null,G__8033,G__8034));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__8253 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8253) : p.call(null,G__8253));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8255 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8255) : p.call(null,G__8255));
})();
if(cljs.core.truth_(and__3801__auto__)){
var G__8256 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8256) : p.call(null,G__8256));
} else {
return and__3801__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8258 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8258) : p.call(null,G__8258));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__8260 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8260) : p.call(null,G__8260));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var G__8261 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8261) : p.call(null,G__8261));
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__8430__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__8430 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8431__i = 0, G__8431__a = new Array(arguments.length -  3);
while (G__8431__i < G__8431__a.length) {G__8431__a[G__8431__i] = arguments[G__8431__i + 3]; ++G__8431__i;}
  args = new cljs.core.IndexedSeq(G__8431__a,0);
} 
return G__8430__delegate.call(this,x,y,z,args);};
G__8430.cljs$lang$maxFixedArity = 3;
G__8430.cljs$lang$applyTo = (function (arglist__8432){
var x = cljs.core.first(arglist__8432);
arglist__8432 = cljs.core.next(arglist__8432);
var y = cljs.core.first(arglist__8432);
arglist__8432 = cljs.core.next(arglist__8432);
var z = cljs.core.first(arglist__8432);
var args = cljs.core.rest(arglist__8432);
return G__8430__delegate(x,y,z,args);
});
G__8430.cljs$core$IFn$_invoke$arity$variadic = G__8430__delegate;
return G__8430;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__8433 = null;
if (arguments.length > 3) {
var G__8434__i = 0, G__8434__a = new Array(arguments.length -  3);
while (G__8434__i < G__8434__a.length) {G__8434__a[G__8434__i] = arguments[G__8434__i + 3]; ++G__8434__i;}
G__8433 = new cljs.core.IndexedSeq(G__8434__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8433);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8293 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8293) : p1.call(null,G__8293));
})();
if(cljs.core.truth_(and__3801__auto__)){
var G__8294 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8294) : p2.call(null,G__8294));
} else {
return and__3801__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8296 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8296) : p1.call(null,G__8296));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__8298 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8298) : p1.call(null,G__8298));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var and__3801__auto____$2 = (function (){var G__8300 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8300) : p2.call(null,G__8300));
})();
if(cljs.core.truth_(and__3801__auto____$2)){
var G__8301 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8301) : p2.call(null,G__8301));
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8303 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8303) : p1.call(null,G__8303));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__8305 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8305) : p1.call(null,G__8305));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var and__3801__auto____$2 = (function (){var G__8307 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8307) : p1.call(null,G__8307));
})();
if(cljs.core.truth_(and__3801__auto____$2)){
var and__3801__auto____$3 = (function (){var G__8309 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8309) : p2.call(null,G__8309));
})();
if(cljs.core.truth_(and__3801__auto____$3)){
var and__3801__auto____$4 = (function (){var G__8311 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8311) : p2.call(null,G__8311));
})();
if(cljs.core.truth_(and__3801__auto____$4)){
var G__8312 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8312) : p2.call(null,G__8312));
} else {
return and__3801__auto____$4;
}
} else {
return and__3801__auto____$3;
}
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__8435__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8040_SHARP_){
var and__3801__auto__ = (function (){var G__8317 = p1__8040_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8317) : p1.call(null,G__8317));
})();
if(cljs.core.truth_(and__3801__auto__)){
var G__8318 = p1__8040_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8318) : p2.call(null,G__8318));
} else {
return and__3801__auto__;
}
}),args)));
};
var G__8435 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8436__i = 0, G__8436__a = new Array(arguments.length -  3);
while (G__8436__i < G__8436__a.length) {G__8436__a[G__8436__i] = arguments[G__8436__i + 3]; ++G__8436__i;}
  args = new cljs.core.IndexedSeq(G__8436__a,0);
} 
return G__8435__delegate.call(this,x,y,z,args);};
G__8435.cljs$lang$maxFixedArity = 3;
G__8435.cljs$lang$applyTo = (function (arglist__8437){
var x = cljs.core.first(arglist__8437);
arglist__8437 = cljs.core.next(arglist__8437);
var y = cljs.core.first(arglist__8437);
arglist__8437 = cljs.core.next(arglist__8437);
var z = cljs.core.first(arglist__8437);
var args = cljs.core.rest(arglist__8437);
return G__8435__delegate(x,y,z,args);
});
G__8435.cljs$core$IFn$_invoke$arity$variadic = G__8435__delegate;
return G__8435;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__8438 = null;
if (arguments.length > 3) {
var G__8439__i = 0, G__8439__a = new Array(arguments.length -  3);
while (G__8439__i < G__8439__a.length) {G__8439__a[G__8439__i] = arguments[G__8439__i + 3]; ++G__8439__i;}
G__8438 = new cljs.core.IndexedSeq(G__8439__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8364 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8364) : p1.call(null,G__8364));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__8366 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8366) : p2.call(null,G__8366));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var G__8367 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8367) : p3.call(null,G__8367));
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8369 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8369) : p1.call(null,G__8369));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__8371 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8371) : p2.call(null,G__8371));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var and__3801__auto____$2 = (function (){var G__8373 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8373) : p3.call(null,G__8373));
})();
if(cljs.core.truth_(and__3801__auto____$2)){
var and__3801__auto____$3 = (function (){var G__8375 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8375) : p1.call(null,G__8375));
})();
if(cljs.core.truth_(and__3801__auto____$3)){
var and__3801__auto____$4 = (function (){var G__8377 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8377) : p2.call(null,G__8377));
})();
if(cljs.core.truth_(and__3801__auto____$4)){
var G__8378 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8378) : p3.call(null,G__8378));
} else {
return and__3801__auto____$4;
}
} else {
return and__3801__auto____$3;
}
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8380 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8380) : p1.call(null,G__8380));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__8382 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8382) : p2.call(null,G__8382));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var and__3801__auto____$2 = (function (){var G__8384 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8384) : p3.call(null,G__8384));
})();
if(cljs.core.truth_(and__3801__auto____$2)){
var and__3801__auto____$3 = (function (){var G__8386 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8386) : p1.call(null,G__8386));
})();
if(cljs.core.truth_(and__3801__auto____$3)){
var and__3801__auto____$4 = (function (){var G__8388 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8388) : p2.call(null,G__8388));
})();
if(cljs.core.truth_(and__3801__auto____$4)){
var and__3801__auto____$5 = (function (){var G__8390 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8390) : p3.call(null,G__8390));
})();
if(cljs.core.truth_(and__3801__auto____$5)){
var and__3801__auto____$6 = (function (){var G__8392 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8392) : p1.call(null,G__8392));
})();
if(cljs.core.truth_(and__3801__auto____$6)){
var and__3801__auto____$7 = (function (){var G__8394 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8394) : p2.call(null,G__8394));
})();
if(cljs.core.truth_(and__3801__auto____$7)){
var G__8395 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8395) : p3.call(null,G__8395));
} else {
return and__3801__auto____$7;
}
} else {
return and__3801__auto____$6;
}
} else {
return and__3801__auto____$5;
}
} else {
return and__3801__auto____$4;
}
} else {
return and__3801__auto____$3;
}
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__8440__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8041_SHARP_){
var and__3801__auto__ = (function (){var G__8402 = p1__8041_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8402) : p1.call(null,G__8402));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__8404 = p1__8041_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8404) : p2.call(null,G__8404));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var G__8405 = p1__8041_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8405) : p3.call(null,G__8405));
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
}),args)));
};
var G__8440 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8441__i = 0, G__8441__a = new Array(arguments.length -  3);
while (G__8441__i < G__8441__a.length) {G__8441__a[G__8441__i] = arguments[G__8441__i + 3]; ++G__8441__i;}
  args = new cljs.core.IndexedSeq(G__8441__a,0);
} 
return G__8440__delegate.call(this,x,y,z,args);};
G__8440.cljs$lang$maxFixedArity = 3;
G__8440.cljs$lang$applyTo = (function (arglist__8442){
var x = cljs.core.first(arglist__8442);
arglist__8442 = cljs.core.next(arglist__8442);
var y = cljs.core.first(arglist__8442);
arglist__8442 = cljs.core.next(arglist__8442);
var z = cljs.core.first(arglist__8442);
var args = cljs.core.rest(arglist__8442);
return G__8440__delegate(x,y,z,args);
});
G__8440.cljs$core$IFn$_invoke$arity$variadic = G__8440__delegate;
return G__8440;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__8443 = null;
if (arguments.length > 3) {
var G__8444__i = 0, G__8444__a = new Array(arguments.length -  3);
while (G__8444__i < G__8444__a.length) {G__8444__a[G__8444__i] = arguments[G__8444__i + 3]; ++G__8444__i;}
G__8443 = new cljs.core.IndexedSeq(G__8444__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__8445__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8042_SHARP_){
var G__8421 = x;
return (p1__8042_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8042_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8421) : p1__8042_SHARP_.call(null,G__8421));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8043_SHARP_){
var and__3801__auto__ = (function (){var G__8423 = x;
return (p1__8043_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8043_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8423) : p1__8043_SHARP_.call(null,G__8423));
})();
if(cljs.core.truth_(and__3801__auto__)){
var G__8424 = y;
return (p1__8043_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8043_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8424) : p1__8043_SHARP_.call(null,G__8424));
} else {
return and__3801__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8044_SHARP_){
var and__3801__auto__ = (function (){var G__8426 = x;
return (p1__8044_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8044_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8426) : p1__8044_SHARP_.call(null,G__8426));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__8428 = y;
return (p1__8044_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8044_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8428) : p1__8044_SHARP_.call(null,G__8428));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var G__8429 = z;
return (p1__8044_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8044_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8429) : p1__8044_SHARP_.call(null,G__8429));
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__8446__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8045_SHARP_){
return cljs.core.every_QMARK_(p1__8045_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__8446 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8447__i = 0, G__8447__a = new Array(arguments.length -  3);
while (G__8447__i < G__8447__a.length) {G__8447__a[G__8447__i] = arguments[G__8447__i + 3]; ++G__8447__i;}
  args = new cljs.core.IndexedSeq(G__8447__a,0);
} 
return G__8446__delegate.call(this,x,y,z,args);};
G__8446.cljs$lang$maxFixedArity = 3;
G__8446.cljs$lang$applyTo = (function (arglist__8448){
var x = cljs.core.first(arglist__8448);
arglist__8448 = cljs.core.next(arglist__8448);
var y = cljs.core.first(arglist__8448);
arglist__8448 = cljs.core.next(arglist__8448);
var z = cljs.core.first(arglist__8448);
var args = cljs.core.rest(arglist__8448);
return G__8446__delegate(x,y,z,args);
});
G__8446.cljs$core$IFn$_invoke$arity$variadic = G__8446__delegate;
return G__8446;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__8449 = null;
if (arguments.length > 3) {
var G__8450__i = 0, G__8450__a = new Array(arguments.length -  3);
while (G__8450__i < G__8450__a.length) {G__8450__a[G__8450__i] = arguments[G__8450__i + 3]; ++G__8450__i;}
G__8449 = new cljs.core.IndexedSeq(G__8450__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8449);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__8445 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8451__i = 0, G__8451__a = new Array(arguments.length -  3);
while (G__8451__i < G__8451__a.length) {G__8451__a[G__8451__i] = arguments[G__8451__i + 3]; ++G__8451__i;}
  ps = new cljs.core.IndexedSeq(G__8451__a,0);
} 
return G__8445__delegate.call(this,p1,p2,p3,ps);};
G__8445.cljs$lang$maxFixedArity = 3;
G__8445.cljs$lang$applyTo = (function (arglist__8452){
var p1 = cljs.core.first(arglist__8452);
arglist__8452 = cljs.core.next(arglist__8452);
var p2 = cljs.core.first(arglist__8452);
arglist__8452 = cljs.core.next(arglist__8452);
var p3 = cljs.core.first(arglist__8452);
var ps = cljs.core.rest(arglist__8452);
return G__8445__delegate(p1,p2,p3,ps);
});
G__8445.cljs$core$IFn$_invoke$arity$variadic = G__8445__delegate;
return G__8445;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__8453 = null;
if (arguments.length > 3) {
var G__8454__i = 0, G__8454__a = new Array(arguments.length -  3);
while (G__8454__i < G__8454__a.length) {G__8454__a[G__8454__i] = arguments[G__8454__i + 3]; ++G__8454__i;}
G__8453 = new cljs.core.IndexedSeq(G__8454__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__8660 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8660) : p.call(null,G__8660));
});
var sp1__2 = (function (x,y){
var or__3813__auto__ = (function (){var G__8662 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8662) : p.call(null,G__8662));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__8663 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8663) : p.call(null,G__8663));
}
});
var sp1__3 = (function (x,y,z){
var or__3813__auto__ = (function (){var G__8665 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8665) : p.call(null,G__8665));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__8667 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8667) : p.call(null,G__8667));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var G__8668 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8668) : p.call(null,G__8668));
}
}
});
var sp1__4 = (function() { 
var G__8829__delegate = function (x,y,z,args){
var or__3813__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__8829 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8830__i = 0, G__8830__a = new Array(arguments.length -  3);
while (G__8830__i < G__8830__a.length) {G__8830__a[G__8830__i] = arguments[G__8830__i + 3]; ++G__8830__i;}
  args = new cljs.core.IndexedSeq(G__8830__a,0);
} 
return G__8829__delegate.call(this,x,y,z,args);};
G__8829.cljs$lang$maxFixedArity = 3;
G__8829.cljs$lang$applyTo = (function (arglist__8831){
var x = cljs.core.first(arglist__8831);
arglist__8831 = cljs.core.next(arglist__8831);
var y = cljs.core.first(arglist__8831);
arglist__8831 = cljs.core.next(arglist__8831);
var z = cljs.core.first(arglist__8831);
var args = cljs.core.rest(arglist__8831);
return G__8829__delegate(x,y,z,args);
});
G__8829.cljs$core$IFn$_invoke$arity$variadic = G__8829__delegate;
return G__8829;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__8832 = null;
if (arguments.length > 3) {
var G__8833__i = 0, G__8833__a = new Array(arguments.length -  3);
while (G__8833__i < G__8833__a.length) {G__8833__a[G__8833__i] = arguments[G__8833__i + 3]; ++G__8833__i;}
G__8832 = new cljs.core.IndexedSeq(G__8833__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3813__auto__ = (function (){var G__8700 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8700) : p1.call(null,G__8700));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__8701 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8701) : p2.call(null,G__8701));
}
});
var sp2__2 = (function (x,y){
var or__3813__auto__ = (function (){var G__8703 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8703) : p1.call(null,G__8703));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__8705 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8705) : p1.call(null,G__8705));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__8707 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8707) : p2.call(null,G__8707));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var G__8708 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8708) : p2.call(null,G__8708));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3813__auto__ = (function (){var G__8710 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8710) : p1.call(null,G__8710));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__8712 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8712) : p1.call(null,G__8712));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__8714 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8714) : p1.call(null,G__8714));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var or__3813__auto____$3 = (function (){var G__8716 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8716) : p2.call(null,G__8716));
})();
if(cljs.core.truth_(or__3813__auto____$3)){
return or__3813__auto____$3;
} else {
var or__3813__auto____$4 = (function (){var G__8718 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8718) : p2.call(null,G__8718));
})();
if(cljs.core.truth_(or__3813__auto____$4)){
return or__3813__auto____$4;
} else {
var G__8719 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8719) : p2.call(null,G__8719));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__8834__delegate = function (x,y,z,args){
var or__3813__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.some(((function (or__3813__auto__){
return (function (p1__8455_SHARP_){
var or__3813__auto____$1 = (function (){var G__8721 = p1__8455_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8721) : p1.call(null,G__8721));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var G__8722 = p1__8455_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8722) : p2.call(null,G__8722));
}
});})(or__3813__auto__))
,args);
}
};
var G__8834 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8835__i = 0, G__8835__a = new Array(arguments.length -  3);
while (G__8835__i < G__8835__a.length) {G__8835__a[G__8835__i] = arguments[G__8835__i + 3]; ++G__8835__i;}
  args = new cljs.core.IndexedSeq(G__8835__a,0);
} 
return G__8834__delegate.call(this,x,y,z,args);};
G__8834.cljs$lang$maxFixedArity = 3;
G__8834.cljs$lang$applyTo = (function (arglist__8836){
var x = cljs.core.first(arglist__8836);
arglist__8836 = cljs.core.next(arglist__8836);
var y = cljs.core.first(arglist__8836);
arglist__8836 = cljs.core.next(arglist__8836);
var z = cljs.core.first(arglist__8836);
var args = cljs.core.rest(arglist__8836);
return G__8834__delegate(x,y,z,args);
});
G__8834.cljs$core$IFn$_invoke$arity$variadic = G__8834__delegate;
return G__8834;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__8837 = null;
if (arguments.length > 3) {
var G__8838__i = 0, G__8838__a = new Array(arguments.length -  3);
while (G__8838__i < G__8838__a.length) {G__8838__a[G__8838__i] = arguments[G__8838__i + 3]; ++G__8838__i;}
G__8837 = new cljs.core.IndexedSeq(G__8838__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3813__auto__ = (function (){var G__8768 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8768) : p1.call(null,G__8768));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__8770 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8770) : p2.call(null,G__8770));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var G__8771 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8771) : p3.call(null,G__8771));
}
}
});
var sp3__2 = (function (x,y){
var or__3813__auto__ = (function (){var G__8773 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8773) : p1.call(null,G__8773));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__8775 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8775) : p2.call(null,G__8775));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__8777 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8777) : p3.call(null,G__8777));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var or__3813__auto____$3 = (function (){var G__8779 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8779) : p1.call(null,G__8779));
})();
if(cljs.core.truth_(or__3813__auto____$3)){
return or__3813__auto____$3;
} else {
var or__3813__auto____$4 = (function (){var G__8781 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8781) : p2.call(null,G__8781));
})();
if(cljs.core.truth_(or__3813__auto____$4)){
return or__3813__auto____$4;
} else {
var G__8782 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8782) : p3.call(null,G__8782));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3813__auto__ = (function (){var G__8784 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8784) : p1.call(null,G__8784));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__8786 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8786) : p2.call(null,G__8786));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__8788 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8788) : p3.call(null,G__8788));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var or__3813__auto____$3 = (function (){var G__8790 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8790) : p1.call(null,G__8790));
})();
if(cljs.core.truth_(or__3813__auto____$3)){
return or__3813__auto____$3;
} else {
var or__3813__auto____$4 = (function (){var G__8792 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8792) : p2.call(null,G__8792));
})();
if(cljs.core.truth_(or__3813__auto____$4)){
return or__3813__auto____$4;
} else {
var or__3813__auto____$5 = (function (){var G__8794 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8794) : p3.call(null,G__8794));
})();
if(cljs.core.truth_(or__3813__auto____$5)){
return or__3813__auto____$5;
} else {
var or__3813__auto____$6 = (function (){var G__8796 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8796) : p1.call(null,G__8796));
})();
if(cljs.core.truth_(or__3813__auto____$6)){
return or__3813__auto____$6;
} else {
var or__3813__auto____$7 = (function (){var G__8798 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8798) : p2.call(null,G__8798));
})();
if(cljs.core.truth_(or__3813__auto____$7)){
return or__3813__auto____$7;
} else {
var G__8799 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8799) : p3.call(null,G__8799));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__8839__delegate = function (x,y,z,args){
var or__3813__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.some(((function (or__3813__auto__){
return (function (p1__8456_SHARP_){
var or__3813__auto____$1 = (function (){var G__8801 = p1__8456_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8801) : p1.call(null,G__8801));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__8803 = p1__8456_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8803) : p2.call(null,G__8803));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var G__8804 = p1__8456_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8804) : p3.call(null,G__8804));
}
}
});})(or__3813__auto__))
,args);
}
};
var G__8839 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8840__i = 0, G__8840__a = new Array(arguments.length -  3);
while (G__8840__i < G__8840__a.length) {G__8840__a[G__8840__i] = arguments[G__8840__i + 3]; ++G__8840__i;}
  args = new cljs.core.IndexedSeq(G__8840__a,0);
} 
return G__8839__delegate.call(this,x,y,z,args);};
G__8839.cljs$lang$maxFixedArity = 3;
G__8839.cljs$lang$applyTo = (function (arglist__8841){
var x = cljs.core.first(arglist__8841);
arglist__8841 = cljs.core.next(arglist__8841);
var y = cljs.core.first(arglist__8841);
arglist__8841 = cljs.core.next(arglist__8841);
var z = cljs.core.first(arglist__8841);
var args = cljs.core.rest(arglist__8841);
return G__8839__delegate(x,y,z,args);
});
G__8839.cljs$core$IFn$_invoke$arity$variadic = G__8839__delegate;
return G__8839;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__8842 = null;
if (arguments.length > 3) {
var G__8843__i = 0, G__8843__a = new Array(arguments.length -  3);
while (G__8843__i < G__8843__a.length) {G__8843__a[G__8843__i] = arguments[G__8843__i + 3]; ++G__8843__i;}
G__8842 = new cljs.core.IndexedSeq(G__8843__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8842);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__8844__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__8457_SHARP_){
var G__8820 = x;
return (p1__8457_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8457_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8820) : p1__8457_SHARP_.call(null,G__8820));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__8458_SHARP_){
var or__3813__auto__ = (function (){var G__8822 = x;
return (p1__8458_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8458_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8822) : p1__8458_SHARP_.call(null,G__8822));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__8823 = y;
return (p1__8458_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8458_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8823) : p1__8458_SHARP_.call(null,G__8823));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__8459_SHARP_){
var or__3813__auto__ = (function (){var G__8825 = x;
return (p1__8459_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8459_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8825) : p1__8459_SHARP_.call(null,G__8825));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__8827 = y;
return (p1__8459_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8459_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8827) : p1__8459_SHARP_.call(null,G__8827));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var G__8828 = z;
return (p1__8459_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8459_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8828) : p1__8459_SHARP_.call(null,G__8828));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__8845__delegate = function (x,y,z,args){
var or__3813__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.some(((function (or__3813__auto__,ps__$1){
return (function (p1__8460_SHARP_){
return cljs.core.some(p1__8460_SHARP_,args);
});})(or__3813__auto__,ps__$1))
,ps__$1);
}
};
var G__8845 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8846__i = 0, G__8846__a = new Array(arguments.length -  3);
while (G__8846__i < G__8846__a.length) {G__8846__a[G__8846__i] = arguments[G__8846__i + 3]; ++G__8846__i;}
  args = new cljs.core.IndexedSeq(G__8846__a,0);
} 
return G__8845__delegate.call(this,x,y,z,args);};
G__8845.cljs$lang$maxFixedArity = 3;
G__8845.cljs$lang$applyTo = (function (arglist__8847){
var x = cljs.core.first(arglist__8847);
arglist__8847 = cljs.core.next(arglist__8847);
var y = cljs.core.first(arglist__8847);
arglist__8847 = cljs.core.next(arglist__8847);
var z = cljs.core.first(arglist__8847);
var args = cljs.core.rest(arglist__8847);
return G__8845__delegate(x,y,z,args);
});
G__8845.cljs$core$IFn$_invoke$arity$variadic = G__8845__delegate;
return G__8845;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__8848 = null;
if (arguments.length > 3) {
var G__8849__i = 0, G__8849__a = new Array(arguments.length -  3);
while (G__8849__i < G__8849__a.length) {G__8849__a[G__8849__i] = arguments[G__8849__i + 3]; ++G__8849__i;}
G__8848 = new cljs.core.IndexedSeq(G__8849__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8848);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__8844 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8850__i = 0, G__8850__a = new Array(arguments.length -  3);
while (G__8850__i < G__8850__a.length) {G__8850__a[G__8850__i] = arguments[G__8850__i + 3]; ++G__8850__i;}
  ps = new cljs.core.IndexedSeq(G__8850__a,0);
} 
return G__8844__delegate.call(this,p1,p2,p3,ps);};
G__8844.cljs$lang$maxFixedArity = 3;
G__8844.cljs$lang$applyTo = (function (arglist__8851){
var p1 = cljs.core.first(arglist__8851);
arglist__8851 = cljs.core.next(arglist__8851);
var p2 = cljs.core.first(arglist__8851);
arglist__8851 = cljs.core.next(arglist__8851);
var p3 = cljs.core.first(arglist__8851);
var ps = cljs.core.rest(arglist__8851);
return G__8844__delegate(p1,p2,p3,ps);
});
G__8844.cljs$core$IFn$_invoke$arity$variadic = G__8844__delegate;
return G__8844;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__8852 = null;
if (arguments.length > 3) {
var G__8853__i = 0, G__8853__a = new Array(arguments.length -  3);
while (G__8853__i < G__8853__a.length) {G__8853__a[G__8853__i] = arguments[G__8853__i + 3]; ++G__8853__i;}
G__8852 = new cljs.core.IndexedSeq(G__8853__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8852);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__8908 = null;
var G__8908__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8908__1 = (function (result){
var G__8894 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8894) : rf.call(null,G__8894));
});
var G__8908__2 = (function (result,input){
var G__8895 = result;
var G__8896 = (function (){var G__8897 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8897) : f.call(null,G__8897));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8895,G__8896) : rf.call(null,G__8895,G__8896));
});
var G__8908__3 = (function() { 
var G__8909__delegate = function (result,input,inputs){
var G__8898 = result;
var G__8899 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8898,G__8899) : rf.call(null,G__8898,G__8899));
};
var G__8909 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__8910__i = 0, G__8910__a = new Array(arguments.length -  2);
while (G__8910__i < G__8910__a.length) {G__8910__a[G__8910__i] = arguments[G__8910__i + 2]; ++G__8910__i;}
  inputs = new cljs.core.IndexedSeq(G__8910__a,0);
} 
return G__8909__delegate.call(this,result,input,inputs);};
G__8909.cljs$lang$maxFixedArity = 2;
G__8909.cljs$lang$applyTo = (function (arglist__8911){
var result = cljs.core.first(arglist__8911);
arglist__8911 = cljs.core.next(arglist__8911);
var input = cljs.core.first(arglist__8911);
var inputs = cljs.core.rest(arglist__8911);
return G__8909__delegate(result,input,inputs);
});
G__8909.cljs$core$IFn$_invoke$arity$variadic = G__8909__delegate;
return G__8909;
})()
;
G__8908 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__8908__0.call(this);
case 1:
return G__8908__1.call(this,result);
case 2:
return G__8908__2.call(this,result,input);
default:
var G__8912 = null;
if (arguments.length > 2) {
var G__8913__i = 0, G__8913__a = new Array(arguments.length -  2);
while (G__8913__i < G__8913__a.length) {G__8913__a[G__8913__i] = arguments[G__8913__i + 2]; ++G__8913__i;}
G__8912 = new cljs.core.IndexedSeq(G__8913__a,0);
}
return G__8908__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__8912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8908.cljs$lang$maxFixedArity = 2;
G__8908.cljs$lang$applyTo = G__8908__3.cljs$lang$applyTo;
G__8908.cljs$core$IFn$_invoke$arity$0 = G__8908__0;
G__8908.cljs$core$IFn$_invoke$arity$1 = G__8908__1;
G__8908.cljs$core$IFn$_invoke$arity$2 = G__8908__2;
G__8908.cljs$core$IFn$_invoke$arity$variadic = G__8908__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8908;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___8914 = size;
var i_8915 = (0);
while(true){
if((i_8915 < n__4700__auto___8914)){
cljs.core.chunk_append(b,(function (){var G__8900 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8915);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8900) : f.call(null,G__8900));
})());

var G__8916 = (i_8915 + (1));
i_8915 = G__8916;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8901 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8901) : f.call(null,G__8901));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__8902 = cljs.core.first(s1);
var G__8903 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8902,G__8903) : f.call(null,G__8902,G__8903));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__8904 = cljs.core.first(s1);
var G__8905 = cljs.core.first(s2);
var G__8906 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8904,G__8905,G__8906) : f.call(null,G__8904,G__8905,G__8906));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__8917__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__8854_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__8854_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__8917 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8918__i = 0, G__8918__a = new Array(arguments.length -  4);
while (G__8918__i < G__8918__a.length) {G__8918__a[G__8918__i] = arguments[G__8918__i + 4]; ++G__8918__i;}
  colls = new cljs.core.IndexedSeq(G__8918__a,0);
} 
return G__8917__delegate.call(this,f,c1,c2,c3,colls);};
G__8917.cljs$lang$maxFixedArity = 4;
G__8917.cljs$lang$applyTo = (function (arglist__8919){
var f = cljs.core.first(arglist__8919);
arglist__8919 = cljs.core.next(arglist__8919);
var c1 = cljs.core.first(arglist__8919);
arglist__8919 = cljs.core.next(arglist__8919);
var c2 = cljs.core.first(arglist__8919);
arglist__8919 = cljs.core.next(arglist__8919);
var c3 = cljs.core.first(arglist__8919);
var colls = cljs.core.rest(arglist__8919);
return G__8917__delegate(f,c1,c2,c3,colls);
});
G__8917.cljs$core$IFn$_invoke$arity$variadic = G__8917__delegate;
return G__8917;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__8920 = null;
if (arguments.length > 4) {
var G__8921__i = 0, G__8921__a = new Array(arguments.length -  4);
while (G__8921__i < G__8921__a.length) {G__8921__a[G__8921__i] = arguments[G__8921__i + 4]; ++G__8921__i;}
G__8920 = new cljs.core.IndexedSeq(G__8921__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8930 = null;
var G__8930__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8930__1 = (function (result){
var G__8927 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8927) : rf.call(null,G__8927));
});
var G__8930__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__8928 = result;
var G__8929 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8928,G__8929) : rf.call(null,G__8928,G__8929));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__8930 = function(result,input){
switch(arguments.length){
case 0:
return G__8930__0.call(this);
case 1:
return G__8930__1.call(this,result);
case 2:
return G__8930__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8930.cljs$core$IFn$_invoke$arity$0 = G__8930__0;
G__8930.cljs$core$IFn$_invoke$arity$1 = G__8930__1;
G__8930.cljs$core$IFn$_invoke$arity$2 = G__8930__2;
return G__8930;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8937 = null;
var G__8937__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8937__1 = (function (result){
var G__8934 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8934) : rf.call(null,G__8934));
});
var G__8937__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__8935 = result;
var G__8936 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8935,G__8936) : rf.call(null,G__8935,G__8936));
}
});
G__8937 = function(result,input){
switch(arguments.length){
case 0:
return G__8937__0.call(this);
case 1:
return G__8937__1.call(this,result);
case 2:
return G__8937__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8937.cljs$core$IFn$_invoke$arity$0 = G__8937__0;
G__8937.cljs$core$IFn$_invoke$arity$1 = G__8937__1;
G__8937.cljs$core$IFn$_invoke$arity$2 = G__8937__2;
return G__8937;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__8938 = (n__$1 - (1));
var G__8939 = cljs.core.rest(s);
n__$1 = G__8938;
coll__$1 = G__8939;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__8942 = cljs.core.next(s);
var G__8943 = cljs.core.next(lead);
s = G__8942;
lead = G__8943;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__8956 = null;
var G__8956__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8956__1 = (function (result){
var G__8950 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8950) : rf.call(null,G__8950));
});
var G__8956__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3801__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3801__auto__)){
var G__8951 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8951) : pred.call(null,G__8951));
} else {
return and__3801__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__8952 = result;
var G__8953 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8952,G__8953) : rf.call(null,G__8952,G__8953));
}
});
G__8956 = function(result,input){
switch(arguments.length){
case 0:
return G__8956__0.call(this);
case 1:
return G__8956__1.call(this,result);
case 2:
return G__8956__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8956.cljs$core$IFn$_invoke$arity$0 = G__8956__0;
G__8956.cljs$core$IFn$_invoke$arity$1 = G__8956__1;
G__8956.cljs$core$IFn$_invoke$arity$2 = G__8956__2;
return G__8956;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3801__auto__ = s;
if(and__3801__auto__){
var G__8955 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8955) : pred__$1.call(null,G__8955));
} else {
return and__3801__auto__;
}
})())){
var G__8957 = pred__$1;
var G__8958 = cljs.core.rest(s);
pred__$1 = G__8957;
coll__$1 = G__8958;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__8967 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8967) : f.call(null,G__8967));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__8970__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__8970 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8971__i = 0, G__8971__a = new Array(arguments.length -  2);
while (G__8971__i < G__8971__a.length) {G__8971__a[G__8971__i] = arguments[G__8971__i + 2]; ++G__8971__i;}
  colls = new cljs.core.IndexedSeq(G__8971__a,0);
} 
return G__8970__delegate.call(this,c1,c2,colls);};
G__8970.cljs$lang$maxFixedArity = 2;
G__8970.cljs$lang$applyTo = (function (arglist__8972){
var c1 = cljs.core.first(arglist__8972);
arglist__8972 = cljs.core.next(arglist__8972);
var c2 = cljs.core.first(arglist__8972);
var colls = cljs.core.rest(arglist__8972);
return G__8970__delegate(c1,c2,colls);
});
G__8970.cljs$core$IFn$_invoke$arity$variadic = G__8970__delegate;
return G__8970;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__8973 = null;
if (arguments.length > 2) {
var G__8974__i = 0, G__8974__a = new Array(arguments.length -  2);
while (G__8974__i < G__8974__a.length) {G__8974__a[G__8974__i] = arguments[G__8974__i + 2]; ++G__8974__i;}
G__8973 = new cljs.core.IndexedSeq(G__8974__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__8973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__8989 = null;
var G__8989__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8989__1 = (function (result){
var G__8982 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8982) : rf.call(null,G__8982));
});
var G__8989__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__8983 = result;
var G__8984 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8983,G__8984) : rf.call(null,G__8983,G__8984));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__8985 = sepr;
var G__8986 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8985,G__8986) : rf.call(null,G__8985,G__8986));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__8987 = result;
var G__8988 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8987,G__8988) : rf.call(null,G__8987,G__8988));
}
});
G__8989 = function(result,input){
switch(arguments.length){
case 0:
return G__8989__0.call(this);
case 1:
return G__8989__1.call(this,result);
case 2:
return G__8989__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8989.cljs$core$IFn$_invoke$arity$0 = G__8989__0;
G__8989.cljs$core$IFn$_invoke$arity$1 = G__8989__1;
G__8989.cljs$core$IFn$_invoke$arity$2 = G__8989__2;
return G__8989;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__8998__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__8998 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__8999__i = 0, G__8999__a = new Array(arguments.length -  1);
while (G__8999__i < G__8999__a.length) {G__8999__a[G__8999__i] = arguments[G__8999__i + 1]; ++G__8999__i;}
  colls = new cljs.core.IndexedSeq(G__8999__a,0);
} 
return G__8998__delegate.call(this,f,colls);};
G__8998.cljs$lang$maxFixedArity = 1;
G__8998.cljs$lang$applyTo = (function (arglist__9000){
var f = cljs.core.first(arglist__9000);
var colls = cljs.core.rest(arglist__9000);
return G__8998__delegate(f,colls);
});
G__8998.cljs$core$IFn$_invoke$arity$variadic = G__8998__delegate;
return G__8998;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__9001 = null;
if (arguments.length > 1) {
var G__9002__i = 0, G__9002__a = new Array(arguments.length -  1);
while (G__9002__i < G__9002__a.length) {G__9002__a[G__9002__i] = arguments[G__9002__i + 1]; ++G__9002__i;}
G__9001 = new cljs.core.IndexedSeq(G__9002__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9001);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9021 = null;
var G__9021__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9021__1 = (function (result){
var G__9015 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9015) : rf.call(null,G__9015));
});
var G__9021__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9016 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9016) : pred.call(null,G__9016));
})())){
var G__9017 = result;
var G__9018 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9017,G__9018) : rf.call(null,G__9017,G__9018));
} else {
return result;
}
});
G__9021 = function(result,input){
switch(arguments.length){
case 0:
return G__9021__0.call(this);
case 1:
return G__9021__1.call(this,result);
case 2:
return G__9021__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9021.cljs$core$IFn$_invoke$arity$0 = G__9021__0;
G__9021.cljs$core$IFn$_invoke$arity$1 = G__9021__1;
G__9021.cljs$core$IFn$_invoke$arity$2 = G__9021__2;
return G__9021;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___9022 = size;
var i_9023 = (0);
while(true){
if((i_9023 < n__4700__auto___9022)){
if(cljs.core.truth_((function (){var G__9019 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9023);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9019) : pred.call(null,G__9019));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9023));
} else {
}

var G__9024 = (i_9023 + (1));
i_9023 = G__9024;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9020 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9020) : pred.call(null,G__9020));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9031 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9031) : branch_QMARK_.call(null,G__9031));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__9032 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9032) : children.call(null,G__9032));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9033_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9033_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9036 = to;
if(G__9036){
var bit__4487__auto__ = (G__9036.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4487__auto__) || (G__9036.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__9037 = to;
if(G__9037){
var bit__4487__auto__ = (G__9037.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4487__auto__) || (G__9037.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9039 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9039) : f.call(null,G__9039));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__9040__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9040 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9041__i = 0, G__9041__a = new Array(arguments.length -  4);
while (G__9041__i < G__9041__a.length) {G__9041__a[G__9041__i] = arguments[G__9041__i + 4]; ++G__9041__i;}
  colls = new cljs.core.IndexedSeq(G__9041__a,0);
} 
return G__9040__delegate.call(this,f,c1,c2,c3,colls);};
G__9040.cljs$lang$maxFixedArity = 4;
G__9040.cljs$lang$applyTo = (function (arglist__9042){
var f = cljs.core.first(arglist__9042);
arglist__9042 = cljs.core.next(arglist__9042);
var c1 = cljs.core.first(arglist__9042);
arglist__9042 = cljs.core.next(arglist__9042);
var c2 = cljs.core.first(arglist__9042);
arglist__9042 = cljs.core.next(arglist__9042);
var c3 = cljs.core.first(arglist__9042);
var colls = cljs.core.rest(arglist__9042);
return G__9040__delegate(f,c1,c2,c3,colls);
});
G__9040.cljs$core$IFn$_invoke$arity$variadic = G__9040__delegate;
return G__9040;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__9043 = null;
if (arguments.length > 4) {
var G__9044__i = 0, G__9044__a = new Array(arguments.length -  4);
while (G__9044__i < G__9044__a.length) {G__9044__a[G__9044__i] = arguments[G__9044__i + 4]; ++G__9044__i;}
G__9043 = new cljs.core.IndexedSeq(G__9044__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9046 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9046) : pred.call(null,G__9046));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9061 = m__$1;
if(G__9061){
var bit__4494__auto__ = (G__9061.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4494__auto__) || (G__9061.cljs$core$ILookup$)){
return true;
} else {
if((!G__9061.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9061);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9061);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9062 = sentinel;
var G__9063 = m__$2;
var G__9064 = cljs.core.next(ks__$1);
sentinel = G__9062;
m__$1 = G__9063;
ks__$1 = G__9064;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__9065,v){
var vec__9070 = p__9065;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9070,(0),null);
var ks = cljs.core.nthnext(vec__9070,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__9071,f){
var vec__9109 = p__9071;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9109,(0),null);
var ks = cljs.core.nthnext(vec__9109,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9110 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9110) : f.call(null,G__9110));
})());
}
});
var update_in__4 = (function (m,p__9072,f,a){
var vec__9111 = p__9072;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9111,(0),null);
var ks = cljs.core.nthnext(vec__9111,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9112 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9113 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9112,G__9113) : f.call(null,G__9112,G__9113));
})());
}
});
var update_in__5 = (function (m,p__9073,f,a,b){
var vec__9114 = p__9073;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9114,(0),null);
var ks = cljs.core.nthnext(vec__9114,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9115 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9116 = a;
var G__9117 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9115,G__9116,G__9117) : f.call(null,G__9115,G__9116,G__9117));
})());
}
});
var update_in__6 = (function (m,p__9074,f,a,b,c){
var vec__9118 = p__9074;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9118,(0),null);
var ks = cljs.core.nthnext(vec__9118,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9119 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9120 = a;
var G__9121 = b;
var G__9122 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9119,G__9120,G__9121,G__9122) : f.call(null,G__9119,G__9120,G__9121,G__9122));
})());
}
});
var update_in__7 = (function() { 
var G__9124__delegate = function (m,p__9075,f,a,b,c,args){
var vec__9123 = p__9075;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9123,(0),null);
var ks = cljs.core.nthnext(vec__9123,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__9124 = function (m,p__9075,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__9125__i = 0, G__9125__a = new Array(arguments.length -  6);
while (G__9125__i < G__9125__a.length) {G__9125__a[G__9125__i] = arguments[G__9125__i + 6]; ++G__9125__i;}
  args = new cljs.core.IndexedSeq(G__9125__a,0);
} 
return G__9124__delegate.call(this,m,p__9075,f,a,b,c,args);};
G__9124.cljs$lang$maxFixedArity = 6;
G__9124.cljs$lang$applyTo = (function (arglist__9126){
var m = cljs.core.first(arglist__9126);
arglist__9126 = cljs.core.next(arglist__9126);
var p__9075 = cljs.core.first(arglist__9126);
arglist__9126 = cljs.core.next(arglist__9126);
var f = cljs.core.first(arglist__9126);
arglist__9126 = cljs.core.next(arglist__9126);
var a = cljs.core.first(arglist__9126);
arglist__9126 = cljs.core.next(arglist__9126);
var b = cljs.core.first(arglist__9126);
arglist__9126 = cljs.core.next(arglist__9126);
var c = cljs.core.first(arglist__9126);
var args = cljs.core.rest(arglist__9126);
return G__9124__delegate(m,p__9075,f,a,b,c,args);
});
G__9124.cljs$core$IFn$_invoke$arity$variadic = G__9124__delegate;
return G__9124;
})()
;
update_in = function(m,p__9075,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__9075,f);
case 4:
return update_in__4.call(this,m,p__9075,f,a);
case 5:
return update_in__5.call(this,m,p__9075,f,a,b);
case 6:
return update_in__6.call(this,m,p__9075,f,a,b,c);
default:
var G__9127 = null;
if (arguments.length > 6) {
var G__9128__i = 0, G__9128__a = new Array(arguments.length -  6);
while (G__9128__i < G__9128__a.length) {G__9128__a[G__9128__i] = arguments[G__9128__i + 6]; ++G__9128__i;}
G__9127 = new cljs.core.IndexedSeq(G__9128__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9075,f,a,b,c, G__9127);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9139 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9139) : f.call(null,G__9139));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9140 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9141 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9140,G__9141) : f.call(null,G__9140,G__9141));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9142 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9143 = x;
var G__9144 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9142,G__9143,G__9144) : f.call(null,G__9142,G__9143,G__9144));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9145 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9146 = x;
var G__9147 = y;
var G__9148 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9145,G__9146,G__9147,G__9148) : f.call(null,G__9145,G__9146,G__9147,G__9148));
})());
});
var update__7 = (function() { 
var G__9149__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__9149 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__9150__i = 0, G__9150__a = new Array(arguments.length -  6);
while (G__9150__i < G__9150__a.length) {G__9150__a[G__9150__i] = arguments[G__9150__i + 6]; ++G__9150__i;}
  more = new cljs.core.IndexedSeq(G__9150__a,0);
} 
return G__9149__delegate.call(this,m,k,f,x,y,z,more);};
G__9149.cljs$lang$maxFixedArity = 6;
G__9149.cljs$lang$applyTo = (function (arglist__9151){
var m = cljs.core.first(arglist__9151);
arglist__9151 = cljs.core.next(arglist__9151);
var k = cljs.core.first(arglist__9151);
arglist__9151 = cljs.core.next(arglist__9151);
var f = cljs.core.first(arglist__9151);
arglist__9151 = cljs.core.next(arglist__9151);
var x = cljs.core.first(arglist__9151);
arglist__9151 = cljs.core.next(arglist__9151);
var y = cljs.core.first(arglist__9151);
arglist__9151 = cljs.core.next(arglist__9151);
var z = cljs.core.first(arglist__9151);
var more = cljs.core.rest(arglist__9151);
return G__9149__delegate(m,k,f,x,y,z,more);
});
G__9149.cljs$core$IFn$_invoke$arity$variadic = G__9149__delegate;
return G__9149;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__9152 = null;
if (arguments.length > 6) {
var G__9153__i = 0, G__9153__a = new Array(arguments.length -  6);
while (G__9153__i < G__9153__a.length) {G__9153__a[G__9153__i] = arguments[G__9153__i + 6]; ++G__9153__i;}
G__9152 = new cljs.core.IndexedSeq(G__9153__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__9152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__9154 = (ll - (5));
var G__9155 = r;
ll = G__9154;
ret = G__9155;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9160 = cljs.core.pv_aget(node,(0));
var G__9161 = (level - (5));
node = G__9160;
level = G__9161;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9162 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__9163 = (level - (5));
node = G__9162;
level = G__9163;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9173 = init__$2;
var G__9174 = (j + i);
var G__9175 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9173,G__9174,G__9175) : f.call(null,G__9173,G__9174,G__9175));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9186 = (j + (1));
var G__9187 = init__$3;
j = G__9186;
init__$2 = G__9187;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9176 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9176) : cljs.core.deref.call(null,G__9176));
} else {
var G__9188 = (i + len);
var G__9189 = init__$2;
i = G__9188;
init__$1 = G__9189;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__9177 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9177) : cljs.core.tv_editable_root.call(null,G__9177));
})(),(function (){var G__9178 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9178) : cljs.core.tv_editable_tail.call(null,G__9178));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9179 = init__$2;
var G__9180 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9179,G__9180) : f.call(null,G__9179,G__9180));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9190 = (j + (1));
var G__9191 = init__$3;
j = G__9190;
init__$2 = G__9191;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9181 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9181) : cljs.core.deref.call(null,G__9181));
} else {
var G__9192 = (i + len);
var G__9193 = init__$2;
i = G__9192;
init__$1 = G__9193;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__9182 = coll__$1;
var G__9183 = cljs.core.first_array_for_longvec(coll__$1);
var G__9184 = (0);
var G__9185 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9182,G__9183,G__9184,G__9185) : cljs.core.chunked_seq.call(null,G__9182,G__9183,G__9184,G__9185));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4700__auto___9194 = len;
var i_9195 = (0);
while(true){
if((i_9195 < n__4700__auto___9194)){
(new_tail[i_9195] = (self__.tail[i_9195]));

var G__9196 = (i_9195 + (1));
i_9195 = G__9196;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__9197 = null;
var G__9197__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9197__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9197 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9197__2.call(this,self__,k);
case 3:
return G__9197__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9197.cljs$core$IFn$_invoke$arity$2 = G__9197__2;
G__9197.cljs$core$IFn$_invoke$arity$3 = G__9197__3;
return G__9197;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args9172){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9172)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__9198 = (i + (1));
var G__9199 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__9198;
out = G__9199;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9200__i = 0, G__9200__a = new Array(arguments.length -  0);
while (G__9200__i < G__9200__a.length) {G__9200__a[G__9200__i] = arguments[G__9200__i + 0]; ++G__9200__i;}
  args = new cljs.core.IndexedSeq(G__9200__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__9201){
var args = cljs.core.seq(arglist__9201);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9202 = self__.vec;
var G__9203 = self__.node;
var G__9204 = self__.i;
var G__9205 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9202,G__9203,G__9204,G__9205) : cljs.core.chunked_seq.call(null,G__9202,G__9203,G__9204,G__9205));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__9206 = self__.vec;
var G__9207 = (self__.i + self__.off);
var G__9208 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9206,G__9207,G__9208) : cljs.core.subvec.call(null,G__9206,G__9207,G__9208));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__9209 = self__.vec;
var G__9210 = (self__.i + self__.off);
var G__9211 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9209,G__9210,G__9211) : cljs.core.subvec.call(null,G__9209,G__9210,G__9211));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9212 = self__.vec;
var G__9213 = self__.node;
var G__9214 = self__.i;
var G__9215 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9212,G__9213,G__9214,G__9215) : cljs.core.chunked_seq.call(null,G__9212,G__9213,G__9214,G__9215));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9216 = self__.vec;
var G__9217 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9218 = end;
var G__9219 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9216,G__9217,G__9218,G__9219) : cljs.core.chunked_seq.call(null,G__9216,G__9217,G__9218,G__9219));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__9220 = self__.vec;
var G__9221 = self__.node;
var G__9222 = self__.i;
var G__9223 = self__.off;
var G__9224 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9220,G__9221,G__9222,G__9223,G__9224) : cljs.core.chunked_seq.call(null,G__9220,G__9221,G__9222,G__9223,G__9224));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9225 = self__.vec;
var G__9226 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9227 = end;
var G__9228 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9225,G__9226,G__9227,G__9228) : cljs.core.chunked_seq.call(null,G__9225,G__9226,G__9227,G__9228));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__9230 = self__.meta;
var G__9231 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__9232 = self__.start;
var G__9233 = (function (){var x__4130__auto__ = self__.end;
var y__4131__auto__ = (v_pos + (1));
return ((x__4130__auto__ > y__4131__auto__) ? x__4130__auto__ : y__4131__auto__);
})();
var G__9234 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9230,G__9231,G__9232,G__9233,G__9234) : cljs.core.build_subvec.call(null,G__9230,G__9231,G__9232,G__9233,G__9234));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__9235 = self__.meta;
var G__9236 = self__.v;
var G__9237 = self__.start;
var G__9238 = (self__.end - (1));
var G__9239 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9235,G__9236,G__9237,G__9238,G__9239) : cljs.core.build_subvec.call(null,G__9235,G__9236,G__9237,G__9238,G__9239));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__9241 = meta__$1;
var G__9242 = self__.v;
var G__9243 = self__.start;
var G__9244 = self__.end;
var G__9245 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9241,G__9242,G__9243,G__9244,G__9245) : cljs.core.build_subvec.call(null,G__9241,G__9242,G__9243,G__9244,G__9245));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__9246 = self__.meta;
var G__9247 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__9248 = self__.start;
var G__9249 = (self__.end + (1));
var G__9250 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9246,G__9247,G__9248,G__9249,G__9250) : cljs.core.build_subvec.call(null,G__9246,G__9247,G__9248,G__9249,G__9250));
});

cljs.core.Subvec.prototype.call = (function() {
var G__9251 = null;
var G__9251__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9251__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9251 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9251__2.call(this,self__,k);
case 3:
return G__9251__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9251.cljs$core$IFn$_invoke$arity$2 = G__9251__2;
G__9251.cljs$core$IFn$_invoke$arity$3 = G__9251__3;
return G__9251;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args9229){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9229)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__9252 = meta;
var G__9253 = v.v;
var G__9254 = (v.start + start);
var G__9255 = (v.start + end);
var G__9256 = __hash;
meta = G__9252;
v = G__9253;
start = G__9254;
end = G__9255;
__hash = G__9256;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj9263 = {};
return obj9263;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__9271 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__9272 = (level - (5));
node = G__9271;
level = G__9272;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__9276 = null;
var G__9276__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9276__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9276 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9276__2.call(this,self__,k);
case 3:
return G__9276__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9276.cljs$core$IFn$_invoke$arity$2 = G__9276__2;
G__9276.cljs$core$IFn$_invoke$arity$3 = G__9276__3;
return G__9276;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args9273){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9273)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3813__auto__ = self__.front;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3813__auto__ = self__.rear;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__9277 = (i + incr);
i = G__9277;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__9278 = (i + (1));
var G__9279 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__9278;
out = G__9279;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj9283 = {};
return obj9283;
})();
var l = ks.length;
var i_9284 = (0);
while(true){
if((i_9284 < l)){
var k_9285 = (ks[i_9284]);
(new_obj[k_9285] = (obj[k_9285]));

var G__9286 = (i_9284 + (1));
i_9284 = G__9286;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3801__auto__ = (function (){var G__9290 = k;
return goog.isString(G__9290);
})();
if(cljs.core.truth_(and__3801__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3801__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__9291 = init__$1;
var G__9292 = k;
var G__9293 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9291,G__9292,G__9293) : f.call(null,G__9291,G__9292,G__9293));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9294 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9294) : cljs.core.deref.call(null,G__9294));
} else {
var G__9300 = cljs.core.rest(keys__$1);
var G__9301 = init__$2;
keys__$1 = G__9300;
init__$1 = G__9301;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3801__auto__ = (function (){var G__9296 = k;
return goog.isString(G__9296);
})();
if(cljs.core.truth_(and__3801__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3801__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__9297 = k;
return goog.isString(G__9297);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3801__auto__ = (function (){var G__9299 = k;
return goog.isString(G__9299);
})();
if(cljs.core.truth_(and__3801__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3801__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__9287_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__9287_SHARP_,(self__.strobj[p1__9287_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__9302 = null;
var G__9302__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9302__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9302 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9302__2.call(this,self__,k);
case 3:
return G__9302__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9302.cljs$core$IFn$_invoke$arity$2 = G__9302__2;
G__9302.cljs$core$IFn$_invoke$arity$3 = G__9302__3;
return G__9302;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args9288){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9288)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj9304 = {};
return obj9304;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__9305 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9305,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9305,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__9306 = (i + (2));
i = G__9306;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__9307 = (i + (2));
i = G__9307;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__9308 = (i + (2));
i = G__9308;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__9309 = (i + (2));
i = G__9309;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__9310 = (i + (2));
i = G__9310;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3813__auto__ = (function (){var G__9314 = k;
return goog.isString(G__9314);
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_9315 = (0);
while(true){
if((i_9315 < l)){
(narr[i_9315] = (arr[i_9315]));

var G__9316 = (i_9315 + (1));
i_9315 = G__9316;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9318 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9318) : cljs.core.keys.call(null,G__9318));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9319 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9319) : cljs.core.vals.call(null,G__9319));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9320 = cljs.core.seq(coll);
var chunk__9321 = null;
var count__9322 = (0);
var i__9323 = (0);
while(true){
if((i__9323 < count__9322)){
var vec__9324 = chunk__9321.cljs$core$IIndexed$_nth$arity$2(null,i__9323);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9324,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9324,(1),null);
var G__9325_9338 = v;
var G__9326_9339 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9325_9338,G__9326_9339) : f.call(null,G__9325_9338,G__9326_9339));

var G__9340 = seq__9320;
var G__9341 = chunk__9321;
var G__9342 = count__9322;
var G__9343 = (i__9323 + (1));
seq__9320 = G__9340;
chunk__9321 = G__9341;
count__9322 = G__9342;
i__9323 = G__9343;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9320);
if(temp__4126__auto__){
var seq__9320__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9320__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__9320__$1);
var G__9344 = cljs.core.chunk_rest(seq__9320__$1);
var G__9345 = c__4600__auto__;
var G__9346 = cljs.core.count(c__4600__auto__);
var G__9347 = (0);
seq__9320 = G__9344;
chunk__9321 = G__9345;
count__9322 = G__9346;
i__9323 = G__9347;
continue;
} else {
var vec__9327 = cljs.core.first(seq__9320__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9327,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9327,(1),null);
var G__9328_9348 = v;
var G__9329_9349 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9328_9348,G__9329_9349) : f.call(null,G__9328_9348,G__9329_9349));

var G__9350 = cljs.core.next(seq__9320__$1);
var G__9351 = null;
var G__9352 = (0);
var G__9353 = (0);
seq__9320 = G__9350;
chunk__9321 = G__9351;
count__9322 = G__9352;
i__9323 = G__9353;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__9330 = init__$1;
var G__9331 = (self__.arr[i]);
var G__9332 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9330,G__9331,G__9332) : f.call(null,G__9330,G__9331,G__9332));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9333 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9333) : cljs.core.deref.call(null,G__9333));
} else {
var G__9354 = (i + (2));
var G__9355 = init__$2;
i = G__9354;
init__$1 = G__9355;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__9334 = other;
if(G__9334){
var bit__4487__auto__ = (G__9334.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4487__auto__) || (G__9334.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__9356 = (i + (2));
i = G__9356;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj9336 = {};
return obj9336;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__9357 = (s + (2));
var G__9358 = d;
s = G__9357;
d = G__9358;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__9359 = (s + (2));
var G__9360 = (d + (2));
s = G__9359;
d = G__9360;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__9337 = cljs.core.aclone(self__.arr);
(G__9337[(idx + (1))] = v);

return G__9337;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9361 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9362 = cljs.core.next(es);
ret = G__9361;
es = G__9362;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__9363 = null;
var G__9363__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9363__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9363 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9363__2.call(this,self__,k);
case 3:
return G__9363__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9363.cljs$core$IFn$_invoke$arity$2 = G__9363__2;
G__9363.cljs$core$IFn$_invoke$arity$3 = G__9363__3;
return G__9363;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args9317){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9317)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9364 = (i + (2));
var G__9365 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9364;
ret = G__9365;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__9366_9374 = self__.arr;
G__9366_9374.pop();

G__9366_9374.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__9367 = self__.len;
var G__9368 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9367,G__9368) : cljs.core.array__GT_transient_hash_map.call(null,G__9367,G__9368));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__9369 = o;
if(G__9369){
var bit__4494__auto__ = (G__9369.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4494__auto__) || (G__9369.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9369.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9369);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9369);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__9370 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9370) : cljs.core.key.call(null,G__9370));
})(),(function (){var G__9371 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9371) : cljs.core.val.call(null,G__9371));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9375 = cljs.core.next(es);
var G__9376 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__9372 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9372) : cljs.core.key.call(null,G__9372));
})(),(function (){var G__9373 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9373) : cljs.core.val.call(null,G__9373));
})());
es = G__9375;
tcoll__$2 = G__9376;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__9377 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__9378 = (i + (2));
out = G__9377;
i = G__9378;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__9381 = cljs.core.aclone(arr);
(G__9381[i] = a);

return G__9381;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__9382 = cljs.core.aclone(arr);
(G__9382[i] = a);

(G__9382[j] = b);

return G__9382;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__9387 = init__$1;
var G__9388 = k;
var G__9389 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9387,G__9388,G__9389) : f.call(null,G__9387,G__9388,G__9389));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9390 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9390) : cljs.core.deref.call(null,G__9390));
} else {
var G__9391 = (i + (2));
var G__9392 = init__$2;
i = G__9391;
init__$1 = G__9392;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9393 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9393) : cljs.core.create_inode_seq.call(null,G__9393));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9407 = (0);
var j_9408 = (0);
while(true){
if((i_9407 < (32))){
if((((self__.bitmap >>> i_9407) & (1)) === (0))){
var G__9409 = (i_9407 + (1));
var G__9410 = j_9408;
i_9407 = G__9409;
j_9408 = G__9410;
continue;
} else {
(nodes[i_9407] = ((!(((self__.arr[j_9408]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_9408])),(self__.arr[j_9408]),(self__.arr[(j_9408 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9408 + (1))])));

var G__9411 = (i_9407 + (1));
var G__9412 = (j_9408 + (2));
i_9407 = G__9411;
j_9408 = G__9412;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9394 = edit__$1;
var G__9395 = (shift + (5));
var G__9396 = key_or_nil;
var G__9397 = val_or_node;
var G__9398 = hash;
var G__9399 = key;
var G__9400 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9394,G__9395,G__9396,G__9397,G__9398,G__9399,G__9400) : cljs.core.create_node.call(null,G__9394,G__9395,G__9396,G__9397,G__9398,G__9399,G__9400));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9413 = (0);
var j_9414 = (0);
while(true){
if((i_9413 < (32))){
if((((self__.bitmap >>> i_9413) & (1)) === (0))){
var G__9415 = (i_9413 + (1));
var G__9416 = j_9414;
i_9413 = G__9415;
j_9414 = G__9416;
continue;
} else {
(nodes[i_9413] = ((!(((self__.arr[j_9414]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_9414])),(self__.arr[j_9414]),(self__.arr[(j_9414 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9414 + (1))])));

var G__9417 = (i_9413 + (1));
var G__9418 = (j_9414 + (2));
i_9413 = G__9417;
j_9414 = G__9418;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9401 = (shift + (5));
var G__9402 = key_or_nil;
var G__9403 = val_or_node;
var G__9404 = hash;
var G__9405 = key;
var G__9406 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9401,G__9402,G__9403,G__9404,G__9405,G__9406) : cljs.core.create_node.call(null,G__9401,G__9402,G__9403,G__9404,G__9405,G__9406));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__9419 = (i + (1));
var G__9420 = (j + (2));
var G__9421 = (bitmap | ((1) << i));
i = G__9419;
j = G__9420;
bitmap = G__9421;
continue;
} else {
var G__9422 = (i + (1));
var G__9423 = j;
var G__9424 = bitmap;
i = G__9422;
j = G__9423;
bitmap = G__9424;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9425 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9425) : cljs.core.create_array_node_seq.call(null,G__9425));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9426 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9426) : cljs.core.deref.call(null,G__9426));
} else {
var G__9427 = (i + (1));
var G__9428 = init__$2;
i = G__9427;
init__$1 = G__9428;
continue;
}
} else {
var G__9429 = (i + (1));
var G__9430 = init__$1;
i = G__9429;
init__$1 = G__9430;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__9431 = (i + (2));
i = G__9431;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9432 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9432) : cljs.core.create_inode_seq.call(null,G__9432));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__9433 = self__.nodes;
var G__9434 = (self__.i + (2));
var G__9435 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9433,G__9434,G__9435) : cljs.core.create_inode_seq.call(null,G__9433,G__9434,G__9435));
} else {
var G__9436 = self__.nodes;
var G__9437 = self__.i;
var G__9438 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9436,G__9437,G__9438) : cljs.core.create_inode_seq.call(null,G__9436,G__9437,G__9438));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__9442 = (j + (2));
j = G__9442;
continue;
}
} else {
var G__9443 = (j + (2));
j = G__9443;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__9444 = null;
var G__9445 = self__.nodes;
var G__9446 = self__.i;
var G__9447 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9444,G__9445,G__9446,G__9447) : cljs.core.create_array_node_seq.call(null,G__9444,G__9445,G__9446,G__9447));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__9452 = (j + (1));
j = G__9452;
continue;
}
} else {
var G__9453 = (j + (1));
j = G__9453;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9455 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9455) : cljs.core.keys.call(null,G__9455));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9456 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9456) : cljs.core.vals.call(null,G__9456));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9457 = cljs.core.seq(coll);
var chunk__9458 = null;
var count__9459 = (0);
var i__9460 = (0);
while(true){
if((i__9460 < count__9459)){
var vec__9461 = chunk__9458.cljs$core$IIndexed$_nth$arity$2(null,i__9460);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9461,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9461,(1),null);
var G__9462_9473 = v;
var G__9463_9474 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9462_9473,G__9463_9474) : f.call(null,G__9462_9473,G__9463_9474));

var G__9475 = seq__9457;
var G__9476 = chunk__9458;
var G__9477 = count__9459;
var G__9478 = (i__9460 + (1));
seq__9457 = G__9475;
chunk__9458 = G__9476;
count__9459 = G__9477;
i__9460 = G__9478;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9457);
if(temp__4126__auto__){
var seq__9457__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9457__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__9457__$1);
var G__9479 = cljs.core.chunk_rest(seq__9457__$1);
var G__9480 = c__4600__auto__;
var G__9481 = cljs.core.count(c__4600__auto__);
var G__9482 = (0);
seq__9457 = G__9479;
chunk__9458 = G__9480;
count__9459 = G__9481;
i__9460 = G__9482;
continue;
} else {
var vec__9464 = cljs.core.first(seq__9457__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9464,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9464,(1),null);
var G__9465_9483 = v;
var G__9466_9484 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9465_9483,G__9466_9484) : f.call(null,G__9465_9483,G__9466_9484));

var G__9485 = cljs.core.next(seq__9457__$1);
var G__9486 = null;
var G__9487 = (0);
var G__9488 = (0);
seq__9457 = G__9485;
chunk__9458 = G__9486;
count__9459 = G__9487;
i__9460 = G__9488;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__9467 = init;
var G__9468 = null;
var G__9469 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9467,G__9468,G__9469) : f.call(null,G__9467,G__9468,G__9469));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9470 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9470) : cljs.core.deref.call(null,G__9470));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj9472 = {};
return obj9472;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9489 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9490 = cljs.core.next(es);
ret = G__9489;
es = G__9490;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__9491 = null;
var G__9491__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9491__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9491 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9491__2.call(this,self__,k);
case 3:
return G__9491__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9491.cljs$core$IFn$_invoke$arity$2 = G__9491__2;
G__9491.cljs$core$IFn$_invoke$arity$3 = G__9491__3;
return G__9491;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args9454){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9454)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9492 = (i + (2));
var G__9493 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9492;
ret = G__9493;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9494 = (i + (1));
var G__9495 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__9494;
out = G__9495;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__9496 = o;
if(G__9496){
var bit__4494__auto__ = (G__9496.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4494__auto__) || (G__9496.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9496.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9496);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9496);
}
})()){
return tcoll.assoc_BANG_((function (){var G__9497 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9497) : cljs.core.key.call(null,G__9497));
})(),(function (){var G__9498 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9498) : cljs.core.val.call(null,G__9498));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9501 = cljs.core.next(es);
var G__9502 = tcoll__$1.assoc_BANG_((function (){var G__9499 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9499) : cljs.core.key.call(null,G__9499));
})(),(function (){var G__9500 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9500) : cljs.core.val.call(null,G__9500));
})());
es = G__9501;
tcoll__$1 = G__9502;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__9503 = ((ascending_QMARK_)?t.left:t.right);
var G__9504 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__9503;
stack__$1 = G__9504;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9517 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9517) : cljs.core.deref.call(null,G__9517));
} else {
var init__$2 = (function (){var G__9518 = init__$1;
var G__9519 = node.key;
var G__9520 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9518,G__9519,G__9520) : f.call(null,G__9518,G__9519,G__9520));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9521 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9521) : cljs.core.deref.call(null,G__9521));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__9522 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9522) : cljs.core.deref.call(null,G__9522));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__9524 = null;
var G__9524__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9524__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9524 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9524__2.call(this,self__,k);
case 3:
return G__9524__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9524.cljs$core$IFn$_invoke$arity$2 = G__9524__2;
G__9524.cljs$core$IFn$_invoke$arity$3 = G__9524__3;
return G__9524;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args9523){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9523)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__9526 = null;
var G__9526__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9526__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9526 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9526__2.call(this,self__,k);
case 3:
return G__9526__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9526.cljs$core$IFn$_invoke$arity$2 = G__9526__2;
G__9526.cljs$core$IFn$_invoke$arity$3 = G__9526__3;
return G__9526;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args9525){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9525)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__9539 = k;
var G__9540 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9539,G__9540) : comp.call(null,G__9539,G__9540));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__9559 = k;
var G__9560 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9559,G__9560) : comp.call(null,G__9559,G__9560));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__9571 = k;
var G__9572 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9571,G__9572) : comp.call(null,G__9571,G__9572));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9574 = cljs.core.seq(coll);
var chunk__9575 = null;
var count__9576 = (0);
var i__9577 = (0);
while(true){
if((i__9577 < count__9576)){
var vec__9578 = chunk__9575.cljs$core$IIndexed$_nth$arity$2(null,i__9577);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9578,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9578,(1),null);
var G__9579_9591 = v;
var G__9580_9592 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9579_9591,G__9580_9592) : f.call(null,G__9579_9591,G__9580_9592));

var G__9593 = seq__9574;
var G__9594 = chunk__9575;
var G__9595 = count__9576;
var G__9596 = (i__9577 + (1));
seq__9574 = G__9593;
chunk__9575 = G__9594;
count__9576 = G__9595;
i__9577 = G__9596;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9574);
if(temp__4126__auto__){
var seq__9574__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9574__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__9574__$1);
var G__9597 = cljs.core.chunk_rest(seq__9574__$1);
var G__9598 = c__4600__auto__;
var G__9599 = cljs.core.count(c__4600__auto__);
var G__9600 = (0);
seq__9574 = G__9597;
chunk__9575 = G__9598;
count__9576 = G__9599;
i__9577 = G__9600;
continue;
} else {
var vec__9581 = cljs.core.first(seq__9574__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9581,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9581,(1),null);
var G__9582_9601 = v;
var G__9583_9602 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9582_9601,G__9583_9602) : f.call(null,G__9582_9601,G__9583_9602));

var G__9603 = cljs.core.next(seq__9574__$1);
var G__9604 = null;
var G__9605 = (0);
var G__9606 = (0);
seq__9574 = G__9603;
chunk__9575 = G__9604;
count__9576 = G__9605;
i__9577 = G__9606;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9584 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9584) : cljs.core.keys.call(null,G__9584));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9585 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9585) : cljs.core.vals.call(null,G__9585));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9586 = k;
var G__9587 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9586,G__9587) : self__.comp.call(null,G__9586,G__9587));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__9607 = t.left;
t = G__9607;
continue;
} else {
var G__9608 = t.right;
t = G__9608;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9609 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9610 = cljs.core.next(es);
ret = G__9609;
es = G__9610;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__9611 = null;
var G__9611__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9611__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9611 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9611__2.call(this,self__,k);
case 3:
return G__9611__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9611.cljs$core$IFn$_invoke$arity$2 = G__9611__2;
G__9611.cljs$core$IFn$_invoke$arity$3 = G__9611__3;
return G__9611;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args9573){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9573)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9588 = k;
var G__9589 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9588,G__9589) : self__.comp.call(null,G__9588,G__9589));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__9612 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9613 = t.left;
stack = G__9612;
t = G__9613;
continue;
} else {
var G__9614 = stack;
var G__9615 = t.right;
stack = G__9614;
t = G__9615;
continue;
}
} else {
if((c > (0))){
var G__9616 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9617 = t.right;
stack = G__9616;
t = G__9617;
continue;
} else {
var G__9618 = stack;
var G__9619 = t.left;
stack = G__9618;
t = G__9619;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__9590 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9590) : cljs.core.key.call(null,G__9590));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__9620 = cljs.core.nnext(in$);
var G__9621 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9620;
out = G__9621;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9622__i = 0, G__9622__a = new Array(arguments.length -  0);
while (G__9622__i < G__9622__a.length) {G__9622__a[G__9622__i] = arguments[G__9622__i + 0]; ++G__9622__i;}
  keyvals = new cljs.core.IndexedSeq(G__9622__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__9623){
var keyvals = cljs.core.seq(arglist__9623);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9624__i = 0, G__9624__a = new Array(arguments.length -  0);
while (G__9624__i < G__9624__a.length) {G__9624__a[G__9624__i] = arguments[G__9624__i + 0]; ++G__9624__i;}
  keyvals = new cljs.core.IndexedSeq(G__9624__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__9625){
var keyvals = cljs.core.seq(arglist__9625);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj9629 = {};
return obj9629;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__9630 = cljs.core.nnext(kvs);
kvs = G__9630;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9631__i = 0, G__9631__a = new Array(arguments.length -  0);
while (G__9631__i < G__9631__a.length) {G__9631__a[G__9631__i] = arguments[G__9631__i + 0]; ++G__9631__i;}
  keyvals = new cljs.core.IndexedSeq(G__9631__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__9632){
var keyvals = cljs.core.seq(arglist__9632);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__9633 = cljs.core.nnext(in$);
var G__9634 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9633;
out = G__9634;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9635__i = 0, G__9635__a = new Array(arguments.length -  0);
while (G__9635__i < G__9635__a.length) {G__9635__a[G__9635__i] = arguments[G__9635__i + 0]; ++G__9635__i;}
  keyvals = new cljs.core.IndexedSeq(G__9635__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__9636){
var keyvals = cljs.core.seq(arglist__9636);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__9637 = cljs.core.nnext(in$);
var G__9638 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9637;
out = G__9638;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__9639__i = 0, G__9639__a = new Array(arguments.length -  1);
while (G__9639__i < G__9639__a.length) {G__9639__a[G__9639__i] = arguments[G__9639__i + 1]; ++G__9639__i;}
  keyvals = new cljs.core.IndexedSeq(G__9639__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__9640){
var comparator = cljs.core.first(arglist__9640);
var keyvals = cljs.core.rest(arglist__9640);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9641 = self__.mseq;
if(G__9641){
var bit__4494__auto__ = (G__9641.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4494__auto__) || (G__9641.cljs$core$INext$)){
return true;
} else {
if((!G__9641.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9641);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9641);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9642 = self__.mseq;
if(G__9642){
var bit__4494__auto__ = (G__9642.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4494__auto__) || (G__9642.cljs$core$INext$)){
return true;
} else {
if((!G__9642.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9642);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9642);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9643 = self__.mseq;
if(G__9643){
var bit__4494__auto__ = (G__9643.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4494__auto__) || (G__9643.cljs$core$INext$)){
return true;
} else {
if((!G__9643.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9643);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9643);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9644 = self__.mseq;
if(G__9644){
var bit__4494__auto__ = (G__9644.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4494__auto__) || (G__9644.cljs$core$INext$)){
return true;
} else {
if((!G__9644.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9644);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9644);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__9645_SHARP_,p2__9646_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3813__auto__ = p1__9645_SHARP_;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__9646_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__9647__i = 0, G__9647__a = new Array(arguments.length -  0);
while (G__9647__i < G__9647__a.length) {G__9647__a[G__9647__i] = arguments[G__9647__i + 0]; ++G__9647__i;}
  maps = new cljs.core.IndexedSeq(G__9647__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__9648){
var maps = cljs.core.seq(arglist__9648);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9651 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9652 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9651,G__9652) : f.call(null,G__9651,G__9652));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3813__auto__ = m1;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__9653__i = 0, G__9653__a = new Array(arguments.length -  1);
while (G__9653__i < G__9653__a.length) {G__9653__a[G__9653__i] = arguments[G__9653__i + 1]; ++G__9653__i;}
  maps = new cljs.core.IndexedSeq(G__9653__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__9654){
var f = cljs.core.first(arglist__9654);
var maps = cljs.core.rest(arglist__9654);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__9655 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__9656 = cljs.core.next(keys);
ret = G__9655;
keys = G__9656;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9659 = cljs.core.seq(coll);
var chunk__9660 = null;
var count__9661 = (0);
var i__9662 = (0);
while(true){
if((i__9662 < count__9661)){
var vec__9663 = chunk__9660.cljs$core$IIndexed$_nth$arity$2(null,i__9662);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9663,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9663,(1),null);
var G__9664_9669 = v;
var G__9665_9670 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9664_9669,G__9665_9670) : f.call(null,G__9664_9669,G__9665_9670));

var G__9671 = seq__9659;
var G__9672 = chunk__9660;
var G__9673 = count__9661;
var G__9674 = (i__9662 + (1));
seq__9659 = G__9671;
chunk__9660 = G__9672;
count__9661 = G__9673;
i__9662 = G__9674;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9659);
if(temp__4126__auto__){
var seq__9659__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9659__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__9659__$1);
var G__9675 = cljs.core.chunk_rest(seq__9659__$1);
var G__9676 = c__4600__auto__;
var G__9677 = cljs.core.count(c__4600__auto__);
var G__9678 = (0);
seq__9659 = G__9675;
chunk__9660 = G__9676;
count__9661 = G__9677;
i__9662 = G__9678;
continue;
} else {
var vec__9666 = cljs.core.first(seq__9659__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9666,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9666,(1),null);
var G__9667_9679 = v;
var G__9668_9680 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9667_9679,G__9668_9680) : f.call(null,G__9667_9679,G__9668_9680));

var G__9681 = cljs.core.next(seq__9659__$1);
var G__9682 = null;
var G__9683 = (0);
var G__9684 = (0);
seq__9659 = G__9681;
chunk__9660 = G__9682;
count__9661 = G__9683;
i__9662 = G__9684;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9657_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9657_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__9685 = null;
var G__9685__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9685__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9685 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9685__2.call(this,self__,k);
case 3:
return G__9685__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9685.cljs$core$IFn$_invoke$arity$2 = G__9685__2;
G__9685.cljs$core$IFn$_invoke$arity$3 = G__9685__3;
return G__9685;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args9658){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9658)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9686 = (i + (1));
var G__9687 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__9686;
out = G__9687;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__9688 = (i + (1));
var G__9689 = cljs.core._conj_BANG_(out,(items[i]));
i = G__9688;
out = G__9689;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__9691 = null;
var G__9691__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__9691__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__9691 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9691__2.call(this,self__,k);
case 3:
return G__9691__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9691.cljs$core$IFn$_invoke$arity$2 = G__9691__2;
G__9691.cljs$core$IFn$_invoke$arity$3 = G__9691__3;
return G__9691;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args9690){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9690)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9694 = cljs.core.seq(coll);
var chunk__9695 = null;
var count__9696 = (0);
var i__9697 = (0);
while(true){
if((i__9697 < count__9696)){
var vec__9698 = chunk__9695.cljs$core$IIndexed$_nth$arity$2(null,i__9697);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9698,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9698,(1),null);
var G__9699_9704 = v;
var G__9700_9705 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9699_9704,G__9700_9705) : f.call(null,G__9699_9704,G__9700_9705));

var G__9706 = seq__9694;
var G__9707 = chunk__9695;
var G__9708 = count__9696;
var G__9709 = (i__9697 + (1));
seq__9694 = G__9706;
chunk__9695 = G__9707;
count__9696 = G__9708;
i__9697 = G__9709;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9694);
if(temp__4126__auto__){
var seq__9694__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9694__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__9694__$1);
var G__9710 = cljs.core.chunk_rest(seq__9694__$1);
var G__9711 = c__4600__auto__;
var G__9712 = cljs.core.count(c__4600__auto__);
var G__9713 = (0);
seq__9694 = G__9710;
chunk__9695 = G__9711;
count__9696 = G__9712;
i__9697 = G__9713;
continue;
} else {
var vec__9701 = cljs.core.first(seq__9694__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9701,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9701,(1),null);
var G__9702_9714 = v;
var G__9703_9715 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9702_9714,G__9703_9715) : f.call(null,G__9702_9714,G__9703_9715));

var G__9716 = cljs.core.next(seq__9694__$1);
var G__9717 = null;
var G__9718 = (0);
var G__9719 = (0);
seq__9694 = G__9716;
chunk__9695 = G__9717;
count__9696 = G__9718;
i__9697 = G__9719;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9692_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9692_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__9720 = null;
var G__9720__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9720__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9720 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9720__2.call(this,self__,k);
case 3:
return G__9720__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9720.cljs$core$IFn$_invoke$arity$2 = G__9720__2;
G__9720.cljs$core$IFn$_invoke$arity$3 = G__9720__3;
return G__9720;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args9693){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9693)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4694__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4694__auto__.length)){
var G__9721 = (i + (1));
var G__9722 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__9721;
res = G__9722;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__9723 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__9724 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__9723;
out = G__9724;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__9725__delegate = function (keys){
return cljs.core.set(keys);
};
var G__9725 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9726__i = 0, G__9726__a = new Array(arguments.length -  0);
while (G__9726__i < G__9726__a.length) {G__9726__a[G__9726__i] = arguments[G__9726__i + 0]; ++G__9726__i;}
  keys = new cljs.core.IndexedSeq(G__9726__a,0);
} 
return G__9725__delegate.call(this,keys);};
G__9725.cljs$lang$maxFixedArity = 0;
G__9725.cljs$lang$applyTo = (function (arglist__9727){
var keys = cljs.core.seq(arglist__9727);
return G__9725__delegate(keys);
});
G__9725.cljs$core$IFn$_invoke$arity$variadic = G__9725__delegate;
return G__9725;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__9728 = null;
if (arguments.length > 0) {
var G__9729__i = 0, G__9729__a = new Array(arguments.length -  0);
while (G__9729__i < G__9729__a.length) {G__9729__a[G__9729__i] = arguments[G__9729__i + 0]; ++G__9729__i;}
G__9728 = new cljs.core.IndexedSeq(G__9729__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9730__i = 0, G__9730__a = new Array(arguments.length -  0);
while (G__9730__i < G__9730__a.length) {G__9730__a[G__9730__i] = arguments[G__9730__i + 0]; ++G__9730__i;}
  keys = new cljs.core.IndexedSeq(G__9730__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__9731){
var keys = cljs.core.seq(arglist__9731);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__9732__i = 0, G__9732__a = new Array(arguments.length -  1);
while (G__9732__i < G__9732__a.length) {G__9732__a[G__9732__i] = arguments[G__9732__i + 1]; ++G__9732__i;}
  keys = new cljs.core.IndexedSeq(G__9732__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__9733){
var comparator = cljs.core.first(arglist__9733);
var keys = cljs.core.rest(arglist__9733);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__9734_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9734_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__9734_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__9735_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9735_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__9735_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__9756 = null;
var G__9756__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9756__1 = (function (result){
var G__9746 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9746) : rf.call(null,G__9746));
});
var G__9756__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__9747 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9747) : cljs.core.deref.call(null,G__9747));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__9748 = result;
var G__9749 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9748,G__9749) : rf.call(null,G__9748,G__9749));
}
});
G__9756 = function(result,input){
switch(arguments.length){
case 0:
return G__9756__0.call(this);
case 1:
return G__9756__1.call(this,result);
case 2:
return G__9756__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9756.cljs$core$IFn$_invoke$arity$0 = G__9756__0;
G__9756.cljs$core$IFn$_invoke$arity$1 = G__9756__1;
G__9756.cljs$core$IFn$_invoke$arity$2 = G__9756__2;
return G__9756;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__9754,seen__$1){
while(true){
var vec__9755 = p__9754;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9755,(0),null);
var xs__$1 = vec__9755;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__9757 = cljs.core.rest(s);
var G__9758 = seen__$1;
p__9754 = G__9757;
seen__$1 = G__9758;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__9759 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__9760 = cljs.core.next(s__$1);
ret = G__9759;
s__$1 = G__9760;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__9762 = x;
if(G__9762){
var bit__4487__auto__ = (G__9762.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4487__auto__) || (G__9762.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__9763 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__9764 = cljs.core.next(ks);
var G__9765 = cljs.core.next(vs);
map = G__9763;
ks = G__9764;
vs = G__9765;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__9776 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9776) : k.call(null,G__9776));
})() > (function (){var G__9777 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9777) : k.call(null,G__9777));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__9778__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9766_SHARP_,p2__9767_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__9766_SHARP_,p2__9767_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9778 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9779__i = 0, G__9779__a = new Array(arguments.length -  3);
while (G__9779__i < G__9779__a.length) {G__9779__a[G__9779__i] = arguments[G__9779__i + 3]; ++G__9779__i;}
  more = new cljs.core.IndexedSeq(G__9779__a,0);
} 
return G__9778__delegate.call(this,k,x,y,more);};
G__9778.cljs$lang$maxFixedArity = 3;
G__9778.cljs$lang$applyTo = (function (arglist__9780){
var k = cljs.core.first(arglist__9780);
arglist__9780 = cljs.core.next(arglist__9780);
var x = cljs.core.first(arglist__9780);
arglist__9780 = cljs.core.next(arglist__9780);
var y = cljs.core.first(arglist__9780);
var more = cljs.core.rest(arglist__9780);
return G__9778__delegate(k,x,y,more);
});
G__9778.cljs$core$IFn$_invoke$arity$variadic = G__9778__delegate;
return G__9778;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__9781 = null;
if (arguments.length > 3) {
var G__9782__i = 0, G__9782__a = new Array(arguments.length -  3);
while (G__9782__i < G__9782__a.length) {G__9782__a[G__9782__i] = arguments[G__9782__i + 3]; ++G__9782__i;}
G__9781 = new cljs.core.IndexedSeq(G__9782__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__9793 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9793) : k.call(null,G__9793));
})() < (function (){var G__9794 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9794) : k.call(null,G__9794));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__9795__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9783_SHARP_,p2__9784_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__9783_SHARP_,p2__9784_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9795 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9796__i = 0, G__9796__a = new Array(arguments.length -  3);
while (G__9796__i < G__9796__a.length) {G__9796__a[G__9796__i] = arguments[G__9796__i + 3]; ++G__9796__i;}
  more = new cljs.core.IndexedSeq(G__9796__a,0);
} 
return G__9795__delegate.call(this,k,x,y,more);};
G__9795.cljs$lang$maxFixedArity = 3;
G__9795.cljs$lang$applyTo = (function (arglist__9797){
var k = cljs.core.first(arglist__9797);
arglist__9797 = cljs.core.next(arglist__9797);
var x = cljs.core.first(arglist__9797);
arglist__9797 = cljs.core.next(arglist__9797);
var y = cljs.core.first(arglist__9797);
var more = cljs.core.rest(arglist__9797);
return G__9795__delegate(k,x,y,more);
});
G__9795.cljs$core$IFn$_invoke$arity$variadic = G__9795__delegate;
return G__9795;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__9798 = null;
if (arguments.length > 3) {
var G__9799__i = 0, G__9799__a = new Array(arguments.length -  3);
while (G__9799__i < G__9799__a.length) {G__9799__a[G__9799__i] = arguments[G__9799__i + 3]; ++G__9799__i;}
G__9798 = new cljs.core.IndexedSeq(G__9799__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__9816 = null;
var G__9816__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9816__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9811 = result;
var G__9812 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9811,G__9812) : rf.call(null,G__9811,G__9812));
})());
})());
var G__9813 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9813) : rf.call(null,G__9813));
});
var G__9816__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__9814 = result;
var G__9815 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9814,G__9815) : rf.call(null,G__9814,G__9815));
} else {
return result;
}
});
G__9816 = function(result,input){
switch(arguments.length){
case 0:
return G__9816__0.call(this);
case 1:
return G__9816__1.call(this,result);
case 2:
return G__9816__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9816.cljs$core$IFn$_invoke$arity$0 = G__9816__0;
G__9816.cljs$core$IFn$_invoke$arity$1 = G__9816__1;
G__9816.cljs$core$IFn$_invoke$arity$2 = G__9816__2;
return G__9816;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__9829 = null;
var G__9829__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9829__1 = (function (result){
var G__9824 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9824) : rf.call(null,G__9824));
});
var G__9829__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9825 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9825) : pred.call(null,G__9825));
})())){
var G__9826 = result;
var G__9827 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9826,G__9827) : rf.call(null,G__9826,G__9827));
} else {
return cljs.core.reduced(result);
}
});
G__9829 = function(result,input){
switch(arguments.length){
case 0:
return G__9829__0.call(this);
case 1:
return G__9829__1.call(this,result);
case 2:
return G__9829__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9829.cljs$core$IFn$_invoke$arity$0 = G__9829__0;
G__9829.cljs$core$IFn$_invoke$arity$1 = G__9829__1;
G__9829.cljs$core$IFn$_invoke$arity$2 = G__9829__2;
return G__9829;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__9828 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9828) : pred.call(null,G__9828));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__9834 = (function (){var G__9836 = cljs.core._entry_key(sc,e);
var G__9837 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9836,G__9837) : comp.call(null,G__9836,G__9837));
})();
var G__9835 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9834,G__9835) : test.call(null,G__9834,G__9835));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9841 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9841,(0),null);
var s = vec__9841;
if(cljs.core.truth_((function (){var G__9842 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9842) : include.call(null,G__9842));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9843 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9843,(0),null);
var s = vec__9843;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9847 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9847,(0),null);
var s = vec__9847;
if(cljs.core.truth_((function (){var G__9848 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9848) : include.call(null,G__9848));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__9849 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9849,(0),null);
var s = vec__9849;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__9850 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9850) : Math.ceil.call(null,G__9850));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__9851 = ret;
var G__9852 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9851,G__9852) : f.call(null,G__9851,G__9852));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__9853 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9853) : cljs.core.deref.call(null,G__9853));
} else {
var G__9854 = (i + self__.step);
var G__9855 = ret__$1;
i = G__9854;
ret = G__9855;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9873 = null;
var G__9873__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9873__1 = (function (result){
var G__9870 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9870) : rf.call(null,G__9870));
});
var G__9873__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__9871 = result;
var G__9872 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9871,G__9872) : rf.call(null,G__9871,G__9872));
} else {
return result;
}
});
G__9873 = function(result,input){
switch(arguments.length){
case 0:
return G__9873__0.call(this);
case 1:
return G__9873__1.call(this,result);
case 2:
return G__9873__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9873.cljs$core$IFn$_invoke$arity$0 = G__9873__0;
G__9873.cljs$core$IFn$_invoke$arity$1 = G__9873__1;
G__9873.cljs$core$IFn$_invoke$arity$2 = G__9873__2;
return G__9873;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__9895 = null;
var G__9895__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9895__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9886 = result;
var G__9887 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9886,G__9887) : rf.call(null,G__9886,G__9887));
})());
})());
var G__9888 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9888) : rf.call(null,G__9888));
});
var G__9895__2 = (function (result,input){
var pval = (function (){var G__9889 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9889) : cljs.core.deref.call(null,G__9889));
})();
var val = (function (){var G__9890 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9890) : f.call(null,G__9890));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__9891 = result;
var G__9892 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9891,G__9892) : rf.call(null,G__9891,G__9892));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__9895 = function(result,input){
switch(arguments.length){
case 0:
return G__9895__0.call(this);
case 1:
return G__9895__1.call(this,result);
case 2:
return G__9895__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9895.cljs$core$IFn$_invoke$arity$0 = G__9895__0;
G__9895.cljs$core$IFn$_invoke$arity$1 = G__9895__1;
G__9895.cljs$core$IFn$_invoke$arity$2 = G__9895__2;
return G__9895;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__9893 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9893) : f.call(null,G__9893));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__9874_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__9894 = p1__9874_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9894) : f.call(null,G__9894));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__9904 = init;
var G__9905 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9904,G__9905) : f.call(null,G__9904,G__9905));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__10000 = null;
var G__10000__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10000__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9958 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9958) : f.call(null,G__9958));
})()],null));
});
var G__10000__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9959 = x;
var G__9960 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9959,G__9960) : f.call(null,G__9959,G__9960));
})()],null));
});
var G__10000__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9961 = x;
var G__9962 = y;
var G__9963 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9961,G__9962,G__9963) : f.call(null,G__9961,G__9962,G__9963));
})()],null));
});
var G__10000__4 = (function() { 
var G__10001__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10001 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10002__i = 0, G__10002__a = new Array(arguments.length -  3);
while (G__10002__i < G__10002__a.length) {G__10002__a[G__10002__i] = arguments[G__10002__i + 3]; ++G__10002__i;}
  args = new cljs.core.IndexedSeq(G__10002__a,0);
} 
return G__10001__delegate.call(this,x,y,z,args);};
G__10001.cljs$lang$maxFixedArity = 3;
G__10001.cljs$lang$applyTo = (function (arglist__10003){
var x = cljs.core.first(arglist__10003);
arglist__10003 = cljs.core.next(arglist__10003);
var y = cljs.core.first(arglist__10003);
arglist__10003 = cljs.core.next(arglist__10003);
var z = cljs.core.first(arglist__10003);
var args = cljs.core.rest(arglist__10003);
return G__10001__delegate(x,y,z,args);
});
G__10001.cljs$core$IFn$_invoke$arity$variadic = G__10001__delegate;
return G__10001;
})()
;
G__10000 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10000__0.call(this);
case 1:
return G__10000__1.call(this,x);
case 2:
return G__10000__2.call(this,x,y);
case 3:
return G__10000__3.call(this,x,y,z);
default:
var G__10004 = null;
if (arguments.length > 3) {
var G__10005__i = 0, G__10005__a = new Array(arguments.length -  3);
while (G__10005__i < G__10005__a.length) {G__10005__a[G__10005__i] = arguments[G__10005__i + 3]; ++G__10005__i;}
G__10004 = new cljs.core.IndexedSeq(G__10005__a,0);
}
return G__10000__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10000.cljs$lang$maxFixedArity = 3;
G__10000.cljs$lang$applyTo = G__10000__4.cljs$lang$applyTo;
G__10000.cljs$core$IFn$_invoke$arity$0 = G__10000__0;
G__10000.cljs$core$IFn$_invoke$arity$1 = G__10000__1;
G__10000.cljs$core$IFn$_invoke$arity$2 = G__10000__2;
G__10000.cljs$core$IFn$_invoke$arity$3 = G__10000__3;
G__10000.cljs$core$IFn$_invoke$arity$variadic = G__10000__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10000;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__10006 = null;
var G__10006__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10006__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9964 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9964) : f.call(null,G__9964));
})(),(function (){var G__9965 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9965) : g.call(null,G__9965));
})()],null));
});
var G__10006__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9966 = x;
var G__9967 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9966,G__9967) : f.call(null,G__9966,G__9967));
})(),(function (){var G__9968 = x;
var G__9969 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9968,G__9969) : g.call(null,G__9968,G__9969));
})()],null));
});
var G__10006__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9970 = x;
var G__9971 = y;
var G__9972 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9970,G__9971,G__9972) : f.call(null,G__9970,G__9971,G__9972));
})(),(function (){var G__9973 = x;
var G__9974 = y;
var G__9975 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9973,G__9974,G__9975) : g.call(null,G__9973,G__9974,G__9975));
})()],null));
});
var G__10006__4 = (function() { 
var G__10007__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10007 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10008__i = 0, G__10008__a = new Array(arguments.length -  3);
while (G__10008__i < G__10008__a.length) {G__10008__a[G__10008__i] = arguments[G__10008__i + 3]; ++G__10008__i;}
  args = new cljs.core.IndexedSeq(G__10008__a,0);
} 
return G__10007__delegate.call(this,x,y,z,args);};
G__10007.cljs$lang$maxFixedArity = 3;
G__10007.cljs$lang$applyTo = (function (arglist__10009){
var x = cljs.core.first(arglist__10009);
arglist__10009 = cljs.core.next(arglist__10009);
var y = cljs.core.first(arglist__10009);
arglist__10009 = cljs.core.next(arglist__10009);
var z = cljs.core.first(arglist__10009);
var args = cljs.core.rest(arglist__10009);
return G__10007__delegate(x,y,z,args);
});
G__10007.cljs$core$IFn$_invoke$arity$variadic = G__10007__delegate;
return G__10007;
})()
;
G__10006 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10006__0.call(this);
case 1:
return G__10006__1.call(this,x);
case 2:
return G__10006__2.call(this,x,y);
case 3:
return G__10006__3.call(this,x,y,z);
default:
var G__10010 = null;
if (arguments.length > 3) {
var G__10011__i = 0, G__10011__a = new Array(arguments.length -  3);
while (G__10011__i < G__10011__a.length) {G__10011__a[G__10011__i] = arguments[G__10011__i + 3]; ++G__10011__i;}
G__10010 = new cljs.core.IndexedSeq(G__10011__a,0);
}
return G__10006__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10006.cljs$lang$maxFixedArity = 3;
G__10006.cljs$lang$applyTo = G__10006__4.cljs$lang$applyTo;
G__10006.cljs$core$IFn$_invoke$arity$0 = G__10006__0;
G__10006.cljs$core$IFn$_invoke$arity$1 = G__10006__1;
G__10006.cljs$core$IFn$_invoke$arity$2 = G__10006__2;
G__10006.cljs$core$IFn$_invoke$arity$3 = G__10006__3;
G__10006.cljs$core$IFn$_invoke$arity$variadic = G__10006__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10006;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__10012 = null;
var G__10012__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10012__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9976 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9976) : f.call(null,G__9976));
})(),(function (){var G__9977 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9977) : g.call(null,G__9977));
})(),(function (){var G__9978 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9978) : h.call(null,G__9978));
})()],null));
});
var G__10012__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9979 = x;
var G__9980 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9979,G__9980) : f.call(null,G__9979,G__9980));
})(),(function (){var G__9981 = x;
var G__9982 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9981,G__9982) : g.call(null,G__9981,G__9982));
})(),(function (){var G__9983 = x;
var G__9984 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9983,G__9984) : h.call(null,G__9983,G__9984));
})()],null));
});
var G__10012__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9985 = x;
var G__9986 = y;
var G__9987 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9985,G__9986,G__9987) : f.call(null,G__9985,G__9986,G__9987));
})(),(function (){var G__9988 = x;
var G__9989 = y;
var G__9990 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9988,G__9989,G__9990) : g.call(null,G__9988,G__9989,G__9990));
})(),(function (){var G__9991 = x;
var G__9992 = y;
var G__9993 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9991,G__9992,G__9993) : h.call(null,G__9991,G__9992,G__9993));
})()],null));
});
var G__10012__4 = (function() { 
var G__10013__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10013 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10014__i = 0, G__10014__a = new Array(arguments.length -  3);
while (G__10014__i < G__10014__a.length) {G__10014__a[G__10014__i] = arguments[G__10014__i + 3]; ++G__10014__i;}
  args = new cljs.core.IndexedSeq(G__10014__a,0);
} 
return G__10013__delegate.call(this,x,y,z,args);};
G__10013.cljs$lang$maxFixedArity = 3;
G__10013.cljs$lang$applyTo = (function (arglist__10015){
var x = cljs.core.first(arglist__10015);
arglist__10015 = cljs.core.next(arglist__10015);
var y = cljs.core.first(arglist__10015);
arglist__10015 = cljs.core.next(arglist__10015);
var z = cljs.core.first(arglist__10015);
var args = cljs.core.rest(arglist__10015);
return G__10013__delegate(x,y,z,args);
});
G__10013.cljs$core$IFn$_invoke$arity$variadic = G__10013__delegate;
return G__10013;
})()
;
G__10012 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10012__0.call(this);
case 1:
return G__10012__1.call(this,x);
case 2:
return G__10012__2.call(this,x,y);
case 3:
return G__10012__3.call(this,x,y,z);
default:
var G__10016 = null;
if (arguments.length > 3) {
var G__10017__i = 0, G__10017__a = new Array(arguments.length -  3);
while (G__10017__i < G__10017__a.length) {G__10017__a[G__10017__i] = arguments[G__10017__i + 3]; ++G__10017__i;}
G__10016 = new cljs.core.IndexedSeq(G__10017__a,0);
}
return G__10012__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10012.cljs$lang$maxFixedArity = 3;
G__10012.cljs$lang$applyTo = G__10012__4.cljs$lang$applyTo;
G__10012.cljs$core$IFn$_invoke$arity$0 = G__10012__0;
G__10012.cljs$core$IFn$_invoke$arity$1 = G__10012__1;
G__10012.cljs$core$IFn$_invoke$arity$2 = G__10012__2;
G__10012.cljs$core$IFn$_invoke$arity$3 = G__10012__3;
G__10012.cljs$core$IFn$_invoke$arity$variadic = G__10012__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10012;
})()
});
var juxt__4 = (function() { 
var G__10018__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10019 = null;
var G__10019__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9906_SHARP_,p2__9907_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9906_SHARP_,(function (){return (p2__9907_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9907_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9907_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10019__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9908_SHARP_,p2__9909_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9908_SHARP_,(function (){var G__9994 = x;
return (p2__9909_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9909_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9994) : p2__9909_SHARP_.call(null,G__9994));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10019__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9910_SHARP_,p2__9911_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9910_SHARP_,(function (){var G__9995 = x;
var G__9996 = y;
return (p2__9911_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9911_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9995,G__9996) : p2__9911_SHARP_.call(null,G__9995,G__9996));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10019__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9912_SHARP_,p2__9913_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9912_SHARP_,(function (){var G__9997 = x;
var G__9998 = y;
var G__9999 = z;
return (p2__9913_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9913_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9997,G__9998,G__9999) : p2__9913_SHARP_.call(null,G__9997,G__9998,G__9999));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10019__4 = (function() { 
var G__10020__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9914_SHARP_,p2__9915_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9914_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9915_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10020 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10021__i = 0, G__10021__a = new Array(arguments.length -  3);
while (G__10021__i < G__10021__a.length) {G__10021__a[G__10021__i] = arguments[G__10021__i + 3]; ++G__10021__i;}
  args = new cljs.core.IndexedSeq(G__10021__a,0);
} 
return G__10020__delegate.call(this,x,y,z,args);};
G__10020.cljs$lang$maxFixedArity = 3;
G__10020.cljs$lang$applyTo = (function (arglist__10022){
var x = cljs.core.first(arglist__10022);
arglist__10022 = cljs.core.next(arglist__10022);
var y = cljs.core.first(arglist__10022);
arglist__10022 = cljs.core.next(arglist__10022);
var z = cljs.core.first(arglist__10022);
var args = cljs.core.rest(arglist__10022);
return G__10020__delegate(x,y,z,args);
});
G__10020.cljs$core$IFn$_invoke$arity$variadic = G__10020__delegate;
return G__10020;
})()
;
G__10019 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10019__0.call(this);
case 1:
return G__10019__1.call(this,x);
case 2:
return G__10019__2.call(this,x,y);
case 3:
return G__10019__3.call(this,x,y,z);
default:
var G__10023 = null;
if (arguments.length > 3) {
var G__10024__i = 0, G__10024__a = new Array(arguments.length -  3);
while (G__10024__i < G__10024__a.length) {G__10024__a[G__10024__i] = arguments[G__10024__i + 3]; ++G__10024__i;}
G__10023 = new cljs.core.IndexedSeq(G__10024__a,0);
}
return G__10019__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10023);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10019.cljs$lang$maxFixedArity = 3;
G__10019.cljs$lang$applyTo = G__10019__4.cljs$lang$applyTo;
G__10019.cljs$core$IFn$_invoke$arity$0 = G__10019__0;
G__10019.cljs$core$IFn$_invoke$arity$1 = G__10019__1;
G__10019.cljs$core$IFn$_invoke$arity$2 = G__10019__2;
G__10019.cljs$core$IFn$_invoke$arity$3 = G__10019__3;
G__10019.cljs$core$IFn$_invoke$arity$variadic = G__10019__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10019;
})()
;})(fs__$1))
};
var G__10018 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10025__i = 0, G__10025__a = new Array(arguments.length -  3);
while (G__10025__i < G__10025__a.length) {G__10025__a[G__10025__i] = arguments[G__10025__i + 3]; ++G__10025__i;}
  fs = new cljs.core.IndexedSeq(G__10025__a,0);
} 
return G__10018__delegate.call(this,f,g,h,fs);};
G__10018.cljs$lang$maxFixedArity = 3;
G__10018.cljs$lang$applyTo = (function (arglist__10026){
var f = cljs.core.first(arglist__10026);
arglist__10026 = cljs.core.next(arglist__10026);
var g = cljs.core.first(arglist__10026);
arglist__10026 = cljs.core.next(arglist__10026);
var h = cljs.core.first(arglist__10026);
var fs = cljs.core.rest(arglist__10026);
return G__10018__delegate(f,g,h,fs);
});
G__10018.cljs$core$IFn$_invoke$arity$variadic = G__10018__delegate;
return G__10018;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__10027 = null;
if (arguments.length > 3) {
var G__10028__i = 0, G__10028__a = new Array(arguments.length -  3);
while (G__10028__i < G__10028__a.length) {G__10028__a[G__10028__i] = arguments[G__10028__i + 3]; ++G__10028__i;}
G__10027 = new cljs.core.IndexedSeq(G__10028__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10027);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10029 = cljs.core.next(coll);
coll = G__10029;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10030 = (n - (1));
var G__10031 = cljs.core.next(coll);
n = G__10030;
coll = G__10031;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10035 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10035,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10035,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10035,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10043 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3813__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__10044_10050 = cljs.core.first(coll);
var G__10045_10051 = writer;
var G__10046_10052 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10044_10050,G__10045_10051,G__10046_10052) : print_one.call(null,G__10044_10050,G__10045_10051,G__10046_10052));
} else {
}

var coll_10053__$1 = cljs.core.next(coll);
var n_10054 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10053__$1) && (((n_10054 == null)) || (!((n_10054 === (0)))))){
cljs.core._write(writer,sep);

var G__10047_10055 = cljs.core.first(coll_10053__$1);
var G__10048_10056 = writer;
var G__10049_10057 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10047_10055,G__10048_10056,G__10049_10057) : print_one.call(null,G__10047_10055,G__10048_10056,G__10049_10057));

var G__10058 = cljs.core.next(coll_10053__$1);
var G__10059 = (n_10054 - (1));
coll_10053__$1 = G__10058;
n_10054 = G__10059;
continue;
} else {
if((cljs.core.seq(coll_10053__$1)) && ((n_10054 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3813__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10043;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__10064 = cljs.core.seq(ss);
var chunk__10065 = null;
var count__10066 = (0);
var i__10067 = (0);
while(true){
if((i__10067 < count__10066)){
var s = chunk__10065.cljs$core$IIndexed$_nth$arity$2(null,i__10067);
cljs.core._write(writer,s);

var G__10068 = seq__10064;
var G__10069 = chunk__10065;
var G__10070 = count__10066;
var G__10071 = (i__10067 + (1));
seq__10064 = G__10068;
chunk__10065 = G__10069;
count__10066 = G__10070;
i__10067 = G__10071;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10064);
if(temp__4126__auto__){
var seq__10064__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10064__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__10064__$1);
var G__10072 = cljs.core.chunk_rest(seq__10064__$1);
var G__10073 = c__4600__auto__;
var G__10074 = cljs.core.count(c__4600__auto__);
var G__10075 = (0);
seq__10064 = G__10072;
chunk__10065 = G__10073;
count__10066 = G__10074;
i__10067 = G__10075;
continue;
} else {
var s = cljs.core.first(seq__10064__$1);
cljs.core._write(writer,s);

var G__10076 = cljs.core.next(seq__10064__$1);
var G__10077 = null;
var G__10078 = (0);
var G__10079 = (0);
seq__10064 = G__10076;
chunk__10065 = G__10077;
count__10066 = G__10078;
i__10067 = G__10079;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10080__i = 0, G__10080__a = new Array(arguments.length -  1);
while (G__10080__i < G__10080__a.length) {G__10080__a[G__10080__i] = arguments[G__10080__i + 1]; ++G__10080__i;}
  ss = new cljs.core.IndexedSeq(G__10080__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__10081){
var writer = cljs.core.first(arglist__10081);
var ss = cljs.core.rest(arglist__10081);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10083 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10083;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10086 = "[\\\\\"\b\f\n\r\t]";
var G__10087 = "g";
return RegExp(G__10086,G__10087);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3801__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__10101 = obj;
if(G__10101){
var bit__4494__auto__ = (G__10101.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4494__auto__) || (G__10101.cljs$core$IMeta$)){
return true;
} else {
if((!G__10101.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10101);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10101);
}
})();
if(and__3801__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__10102_10112 = cljs.core.meta(obj);
var G__10103_10113 = writer;
var G__10104_10114 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10102_10112,G__10103_10113,G__10104_10114) : cljs.core.pr_writer.call(null,G__10102_10112,G__10103_10113,G__10104_10114));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10105 = obj;
if(G__10105){
var bit__4487__auto__ = (G__10105.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4487__auto__) || (G__10105.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10106 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10107 = cljs.core.pr_writer;
var G__10108 = writer;
var G__10109 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10106,G__10107,G__10108,G__10109) : cljs.core.print_map.call(null,G__10106,G__10107,G__10108,G__10109));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10110 = obj;
return goog.isString(G__10110);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__10115 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__10115;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10111 = obj;
if(G__10111){
var bit__4494__auto__ = (G__10111.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4494__auto__) || (G__10111.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10111.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10111);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10111);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__10119 = obj;
var G__10120 = writer;
var G__10121 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10119,G__10120,G__10121) : alt_impl.call(null,G__10119,G__10120,G__10121));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__10126 = cljs.core.seq(cljs.core.next(objs));
var chunk__10127 = null;
var count__10128 = (0);
var i__10129 = (0);
while(true){
if((i__10129 < count__10128)){
var obj = chunk__10127.cljs$core$IIndexed$_nth$arity$2(null,i__10129);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10130 = seq__10126;
var G__10131 = chunk__10127;
var G__10132 = count__10128;
var G__10133 = (i__10129 + (1));
seq__10126 = G__10130;
chunk__10127 = G__10131;
count__10128 = G__10132;
i__10129 = G__10133;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10126);
if(temp__4126__auto__){
var seq__10126__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10126__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__10126__$1);
var G__10134 = cljs.core.chunk_rest(seq__10126__$1);
var G__10135 = c__4600__auto__;
var G__10136 = cljs.core.count(c__4600__auto__);
var G__10137 = (0);
seq__10126 = G__10134;
chunk__10127 = G__10135;
count__10128 = G__10136;
i__10129 = G__10137;
continue;
} else {
var obj = cljs.core.first(seq__10126__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10138 = cljs.core.next(seq__10126__$1);
var G__10139 = null;
var G__10140 = (0);
var G__10141 = (0);
seq__10126 = G__10138;
chunk__10127 = G__10139;
count__10128 = G__10140;
i__10129 = G__10141;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10142__i = 0, G__10142__a = new Array(arguments.length -  0);
while (G__10142__i < G__10142__a.length) {G__10142__a[G__10142__i] = arguments[G__10142__i + 0]; ++G__10142__i;}
  objs = new cljs.core.IndexedSeq(G__10142__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__10143){
var objs = cljs.core.seq(arglist__10143);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10144__i = 0, G__10144__a = new Array(arguments.length -  0);
while (G__10144__i < G__10144__a.length) {G__10144__a[G__10144__i] = arguments[G__10144__i + 0]; ++G__10144__i;}
  objs = new cljs.core.IndexedSeq(G__10144__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__10145){
var objs = cljs.core.seq(arglist__10145);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10146__i = 0, G__10146__a = new Array(arguments.length -  0);
while (G__10146__i < G__10146__a.length) {G__10146__a[G__10146__i] = arguments[G__10146__i + 0]; ++G__10146__i;}
  objs = new cljs.core.IndexedSeq(G__10146__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__10147){
var objs = cljs.core.seq(arglist__10147);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10148__i = 0, G__10148__a = new Array(arguments.length -  0);
while (G__10148__i < G__10148__a.length) {G__10148__a[G__10148__i] = arguments[G__10148__i + 0]; ++G__10148__i;}
  objs = new cljs.core.IndexedSeq(G__10148__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__10149){
var objs = cljs.core.seq(arglist__10149);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10150__i = 0, G__10150__a = new Array(arguments.length -  0);
while (G__10150__i < G__10150__a.length) {G__10150__a[G__10150__i] = arguments[G__10150__i + 0]; ++G__10150__i;}
  objs = new cljs.core.IndexedSeq(G__10150__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__10151){
var objs = cljs.core.seq(arglist__10151);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10152__i = 0, G__10152__a = new Array(arguments.length -  0);
while (G__10152__i < G__10152__a.length) {G__10152__a[G__10152__i] = arguments[G__10152__i + 0]; ++G__10152__i;}
  objs = new cljs.core.IndexedSeq(G__10152__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__10153){
var objs = cljs.core.seq(arglist__10153);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10154__i = 0, G__10154__a = new Array(arguments.length -  0);
while (G__10154__i < G__10154__a.length) {G__10154__a[G__10154__i] = arguments[G__10154__i + 0]; ++G__10154__i;}
  objs = new cljs.core.IndexedSeq(G__10154__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__10155){
var objs = cljs.core.seq(arglist__10155);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10156__i = 0, G__10156__a = new Array(arguments.length -  0);
while (G__10156__i < G__10156__a.length) {G__10156__a[G__10156__i] = arguments[G__10156__i + 0]; ++G__10156__i;}
  objs = new cljs.core.IndexedSeq(G__10156__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__10157){
var objs = cljs.core.seq(arglist__10157);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__10164_10170 = cljs.core.key(e);
var G__10165_10171 = w;
var G__10166_10172 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10164_10170,G__10165_10171,G__10166_10172) : print_one.call(null,G__10164_10170,G__10165_10171,G__10166_10172));

cljs.core._write(w," ");

var G__10167 = cljs.core.val(e);
var G__10168 = w;
var G__10169 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10167,G__10168,G__10169) : print_one.call(null,G__10167,G__10168,G__10169));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__10173__i = 0, G__10173__a = new Array(arguments.length -  2);
while (G__10173__i < G__10173__a.length) {G__10173__a[G__10173__i] = arguments[G__10173__i + 2]; ++G__10173__i;}
  args = new cljs.core.IndexedSeq(G__10173__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__10174){
var iref = cljs.core.first(arglist__10174);
arglist__10174 = cljs.core.next(arglist__10174);
var f = cljs.core.first(arglist__10174);
var args = cljs.core.rest(arglist__10174);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__10177 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10177) : cljs.core.atom.call(null,G__10177));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__10179 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10179) : cljs.core.deref.call(null,G__10179));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__10180_SHARP_,p2__10181_SHARP_){
var ret = (function (){var G__10184 = p1__10180_SHARP_;
var G__10185 = p2__10181_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10184,G__10185) : rf.call(null,G__10184,G__10185));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__10188 = null;
var G__10188__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10188__1 = (function (result){
var G__10187 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10187) : rf.call(null,G__10187));
});
var G__10188__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__10188 = function(result,input){
switch(arguments.length){
case 0:
return G__10188__0.call(this);
case 1:
return G__10188__1.call(this,result);
case 2:
return G__10188__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10188.cljs$core$IFn$_invoke$arity$0 = G__10188__0;
G__10188.cljs$core$IFn$_invoke$arity$1 = G__10188__1;
G__10188.cljs$core$IFn$_invoke$arity$2 = G__10188__2;
return G__10188;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__10197 = null;
var G__10197__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10197__1 = (function (result){
var G__10193 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10193) : rf.call(null,G__10193));
});
var G__10197__2 = (function (result,input){
var prior = (function (){var G__10194 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10194) : cljs.core.deref.call(null,G__10194));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__10195 = result;
var G__10196 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10195,G__10196) : rf.call(null,G__10195,G__10196));
}
});
G__10197 = function(result,input){
switch(arguments.length){
case 0:
return G__10197__0.call(this);
case 1:
return G__10197__1.call(this,result);
case 2:
return G__10197__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10197.cljs$core$IFn$_invoke$arity$0 = G__10197__0;
G__10197.cljs$core$IFn$_invoke$arity$1 = G__10197__1;
G__10197.cljs$core$IFn$_invoke$arity$2 = G__10197__2;
return G__10197;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10199_SHARP_,p2__10198_SHARP_){
var G__10201 = p2__10198_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10201) : proc.call(null,G__10201));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj10203 = {};
return obj10203;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._clj__GT_js[(function (){var G__10207 = x__4457__auto__;
return goog.typeOf(G__10207);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._key__GT_js[(function (){var G__10211 = x__4457__auto__;
return goog.typeOf(G__10211);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__10214 = k;
if(G__10214){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto__ = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return G__10214.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10214.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10214);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10214);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__10215 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10215) : cljs.core.clj__GT_js.call(null,G__10215));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__10231 = x;
if(G__10231){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto__ = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return G__10231.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10231.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10231);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10231);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj10233 = {};
return obj10233;
})();
var seq__10234_10244 = cljs.core.seq(x);
var chunk__10235_10245 = null;
var count__10236_10246 = (0);
var i__10237_10247 = (0);
while(true){
if((i__10237_10247 < count__10236_10246)){
var vec__10238_10248 = chunk__10235_10245.cljs$core$IIndexed$_nth$arity$2(null,i__10237_10247);
var k_10249 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10238_10248,(0),null);
var v_10250 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10238_10248,(1),null);
(m[cljs.core.key__GT_js(k_10249)] = clj__GT_js(v_10250));

var G__10251 = seq__10234_10244;
var G__10252 = chunk__10235_10245;
var G__10253 = count__10236_10246;
var G__10254 = (i__10237_10247 + (1));
seq__10234_10244 = G__10251;
chunk__10235_10245 = G__10252;
count__10236_10246 = G__10253;
i__10237_10247 = G__10254;
continue;
} else {
var temp__4126__auto___10255 = cljs.core.seq(seq__10234_10244);
if(temp__4126__auto___10255){
var seq__10234_10256__$1 = temp__4126__auto___10255;
if(cljs.core.chunked_seq_QMARK_(seq__10234_10256__$1)){
var c__4600__auto___10257 = cljs.core.chunk_first(seq__10234_10256__$1);
var G__10258 = cljs.core.chunk_rest(seq__10234_10256__$1);
var G__10259 = c__4600__auto___10257;
var G__10260 = cljs.core.count(c__4600__auto___10257);
var G__10261 = (0);
seq__10234_10244 = G__10258;
chunk__10235_10245 = G__10259;
count__10236_10246 = G__10260;
i__10237_10247 = G__10261;
continue;
} else {
var vec__10239_10262 = cljs.core.first(seq__10234_10256__$1);
var k_10263 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10239_10262,(0),null);
var v_10264 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10239_10262,(1),null);
(m[cljs.core.key__GT_js(k_10263)] = clj__GT_js(v_10264));

var G__10265 = cljs.core.next(seq__10234_10256__$1);
var G__10266 = null;
var G__10267 = (0);
var G__10268 = (0);
seq__10234_10244 = G__10265;
chunk__10235_10245 = G__10266;
count__10236_10246 = G__10267;
i__10237_10247 = G__10268;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__10240_10269 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__10241_10270 = null;
var count__10242_10271 = (0);
var i__10243_10272 = (0);
while(true){
if((i__10243_10272 < count__10242_10271)){
var x_10273__$1 = chunk__10241_10270.cljs$core$IIndexed$_nth$arity$2(null,i__10243_10272);
arr.push(x_10273__$1);

var G__10274 = seq__10240_10269;
var G__10275 = chunk__10241_10270;
var G__10276 = count__10242_10271;
var G__10277 = (i__10243_10272 + (1));
seq__10240_10269 = G__10274;
chunk__10241_10270 = G__10275;
count__10242_10271 = G__10276;
i__10243_10272 = G__10277;
continue;
} else {
var temp__4126__auto___10278 = cljs.core.seq(seq__10240_10269);
if(temp__4126__auto___10278){
var seq__10240_10279__$1 = temp__4126__auto___10278;
if(cljs.core.chunked_seq_QMARK_(seq__10240_10279__$1)){
var c__4600__auto___10280 = cljs.core.chunk_first(seq__10240_10279__$1);
var G__10281 = cljs.core.chunk_rest(seq__10240_10279__$1);
var G__10282 = c__4600__auto___10280;
var G__10283 = cljs.core.count(c__4600__auto___10280);
var G__10284 = (0);
seq__10240_10269 = G__10281;
chunk__10241_10270 = G__10282;
count__10242_10271 = G__10283;
i__10243_10272 = G__10284;
continue;
} else {
var x_10285__$1 = cljs.core.first(seq__10240_10279__$1);
arr.push(x_10285__$1);

var G__10286 = cljs.core.next(seq__10240_10279__$1);
var G__10287 = null;
var G__10288 = (0);
var G__10289 = (0);
seq__10240_10269 = G__10286;
chunk__10241_10270 = G__10287;
count__10242_10271 = G__10288;
i__10243_10272 = G__10289;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj10291 = {};
return obj10291;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._js__GT_clj[(function (){var G__10295 = x__4457__auto__;
return goog.typeOf(G__10295);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__10352__delegate = function (x,opts){
var map__10325 = opts;
var map__10325__$1 = ((cljs.core.seq_QMARK_(map__10325))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10325):map__10325);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10325__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__10325,map__10325__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__10341 = x__$1;
if(G__10341){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto__ = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return G__10341.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__10341.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10341);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10341);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4569__auto__ = ((function (map__10325,map__10325__$1,keywordize_keys,keyfn){
return (function iter__10342(s__10343){
return (new cljs.core.LazySeq(null,((function (map__10325,map__10325__$1,keywordize_keys,keyfn){
return (function (){
var s__10343__$1 = s__10343;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__10343__$1);
if(temp__4126__auto__){
var s__10343__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__10343__$2)){
var c__4567__auto__ = cljs.core.chunk_first(s__10343__$2);
var size__4568__auto__ = cljs.core.count(c__4567__auto__);
var b__10345 = cljs.core.chunk_buffer(size__4568__auto__);
if((function (){var i__10344 = (0);
while(true){
if((i__10344 < size__4568__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4567__auto__,i__10344);
cljs.core.chunk_append(b__10345,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10350 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10350) : keyfn.call(null,G__10350));
})(),thisfn((x__$1[k]))], null));

var G__10353 = (i__10344 + (1));
i__10344 = G__10353;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__10345),iter__10342(cljs.core.chunk_rest(s__10343__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__10345),null);
}
} else {
var k = cljs.core.first(s__10343__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10351 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10351) : keyfn.call(null,G__10351));
})(),thisfn((x__$1[k]))], null),iter__10342(cljs.core.rest(s__10343__$2)));
}
} else {
return null;
}
break;
}
});})(map__10325,map__10325__$1,keywordize_keys,keyfn))
,null,null));
});})(map__10325,map__10325__$1,keywordize_keys,keyfn))
;
return iter__4569__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__10325,map__10325__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__10352 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__10354__i = 0, G__10354__a = new Array(arguments.length -  1);
while (G__10354__i < G__10354__a.length) {G__10354__a[G__10354__i] = arguments[G__10354__i + 1]; ++G__10354__i;}
  opts = new cljs.core.IndexedSeq(G__10354__a,0);
} 
return G__10352__delegate.call(this,x,opts);};
G__10352.cljs$lang$maxFixedArity = 1;
G__10352.cljs$lang$applyTo = (function (arglist__10355){
var x = cljs.core.first(arglist__10355);
var opts = cljs.core.rest(arglist__10355);
return G__10352__delegate(x,opts);
});
G__10352.cljs$core$IFn$_invoke$arity$variadic = G__10352__delegate;
return G__10352;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__10356 = null;
if (arguments.length > 1) {
var G__10357__i = 0, G__10357__a = new Array(arguments.length -  1);
while (G__10357__i < G__10357__a.length) {G__10357__a[G__10357__i] = arguments[G__10357__i + 1]; ++G__10357__i;}
G__10356 = new cljs.core.IndexedSeq(G__10357__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__10360 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10360) : cljs.core.atom.call(null,G__10360));
})();
return ((function (mem){
return (function() { 
var G__10362__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__10361 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10361) : cljs.core.deref.call(null,G__10361));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__10362 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10363__i = 0, G__10363__a = new Array(arguments.length -  0);
while (G__10363__i < G__10363__a.length) {G__10363__a[G__10363__i] = arguments[G__10363__i + 0]; ++G__10363__i;}
  args = new cljs.core.IndexedSeq(G__10363__a,0);
} 
return G__10362__delegate.call(this,args);};
G__10362.cljs$lang$maxFixedArity = 0;
G__10362.cljs$lang$applyTo = (function (arglist__10364){
var args = cljs.core.seq(arglist__10364);
return G__10362__delegate(args);
});
G__10362.cljs$core$IFn$_invoke$arity$variadic = G__10362__delegate;
return G__10362;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__10366 = ret;
f = G__10366;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__10367__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__10367 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10368__i = 0, G__10368__a = new Array(arguments.length -  1);
while (G__10368__i < G__10368__a.length) {G__10368__a[G__10368__i] = arguments[G__10368__i + 1]; ++G__10368__i;}
  args = new cljs.core.IndexedSeq(G__10368__a,0);
} 
return G__10367__delegate.call(this,f,args);};
G__10367.cljs$lang$maxFixedArity = 1;
G__10367.cljs$lang$applyTo = (function (arglist__10369){
var f = cljs.core.first(arglist__10369);
var args = cljs.core.rest(arglist__10369);
return G__10367__delegate(f,args);
});
G__10367.cljs$core$IFn$_invoke$arity$variadic = G__10367__delegate;
return G__10367;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__10370 = null;
if (arguments.length > 1) {
var G__10371__i = 0, G__10371__a = new Array(arguments.length -  1);
while (G__10371__i < G__10371__a.length) {G__10371__a[G__10371__i] = arguments[G__10371__i + 1]; ++G__10371__i;}
G__10370 = new cljs.core.IndexedSeq(G__10371__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10370);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__10374 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10374) : Math.floor.call(null,G__10374));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__10376 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10376) : f.call(null,G__10376));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__10378 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10378) : cljs.core.atom.call(null,G__10378));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10379__i = 0, G__10379__a = new Array(arguments.length -  1);
while (G__10379__i < G__10379__a.length) {G__10379__a[G__10379__i] = arguments[G__10379__i + 1]; ++G__10379__i;}
  args = new cljs.core.IndexedSeq(G__10379__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__10380){
var f = cljs.core.first(arglist__10380);
var args = cljs.core.rest(arglist__10380);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10445 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10445) : cljs.core.deref.call(null,G__10445));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3813__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
var and__3801__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3801__auto__){
var and__3801__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3801__auto____$1){
var and__3801__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3801__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__10470 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__10468 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10468) : child.call(null,G__10468));
})(),(function (){var G__10469 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10469) : parent.call(null,G__10469));
})());
var G__10471 = (i + (1));
ret = G__10470;
i = G__10471;
continue;
}
break;
}
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__10475 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10475) : cljs.core.deref.call(null,G__10475));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__10479 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10479) : cljs.core.deref.call(null,G__10479));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__10483 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10483) : cljs.core.deref.call(null,G__10483));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__10492 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10492) : targets.call(null,G__10492));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__10493 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10493) : sources.call(null,G__10493));
})()));
});})(tp,td,ta))
;
var or__3813__auto__ = ((cljs.core.contains_QMARK_((function (){var G__10497 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10497) : tp.call(null,G__10497));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__10498 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10498) : ta.call(null,G__10498));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__10499 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10499) : ta.call(null,G__10499));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__10506 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10506) : parentMap.call(null,G__10506));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__10507 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10507) : parentMap.call(null,G__10507));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__10500_SHARP_){
return cljs.core.cons(cljs.core.first(p1__10500_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10500_SHARP_),cljs.core.second(p1__10500_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__10508 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10508) : parentMap.call(null,G__10508));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__10501_SHARP_,p2__10502_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__10501_SHARP_,p2__10502_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__10511 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10511) : cljs.core.deref.call(null,G__10511));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__10512 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10512) : cljs.core.deref.call(null,G__10512));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__10528 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10528) : cljs.core.deref.call(null,G__10528));
})().call(null,x);
var or__3813__auto__ = (cljs.core.truth_((function (){var and__3801__auto__ = xprefs;
if(cljs.core.truth_(and__3801__auto__)){
var G__10530 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10530) : xprefs.call(null,G__10530));
} else {
return and__3801__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__10531 = cljs.core.rest(ps);
ps = G__10531;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__10532 = cljs.core.rest(ps);
ps = G__10532;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3813__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__10546){
var vec__10547 = p__10546;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10547,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10547,(1),null);
var e = vec__10547;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10548 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10548) : cljs.core.deref.call(null,G__10548));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3813__auto__ = (be == null);
if(or__3813__auto__){
return or__3813__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__10549 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10549) : cljs.core.deref.call(null,G__10549));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10550 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10550) : cljs.core.deref.call(null,G__10550));
})(),(function (){var G__10551 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10551) : cljs.core.deref.call(null,G__10551));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj10553 = {};
return obj10553;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._reset[(function (){var G__10557 = x__4457__auto__;
return goog.typeOf(G__10557);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._reset["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._add_method[(function (){var G__10561 = x__4457__auto__;
return goog.typeOf(G__10561);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._add_method["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._remove_method[(function (){var G__10565 = x__4457__auto__;
return goog.typeOf(G__10565);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._prefer_method[(function (){var G__10569 = x__4457__auto__;
return goog.typeOf(G__10569);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._get_method[(function (){var G__10573 = x__4457__auto__;
return goog.typeOf(G__10573);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._get_method["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._methods[(function (){var G__10577 = x__4457__auto__;
return goog.typeOf(G__10577);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._methods["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._prefers[(function (){var G__10581 = x__4457__auto__;
return goog.typeOf(G__10581);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._prefers["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10583 = this$__$1;
return goog.getUid(G__10583);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10584 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10584) : cljs.core.deref.call(null,G__10584));
})(),(function (){var G__10585 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10585) : cljs.core.deref.call(null,G__10585));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__10586 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10586) : cljs.core.deref.call(null,G__10586));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__10587 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10587) : cljs.core.deref.call(null,G__10587));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10588 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10588) : cljs.core.deref.call(null,G__10588));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10589 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10589) : cljs.core.deref.call(null,G__10589));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__11430 = null;
var G__11430__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__11430__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10590 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10590) : self__.dispatch_fn.call(null,G__10590));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10591 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10591) : target_fn.call(null,G__10591));
});
var G__11430__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10592 = a;
var G__10593 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10592,G__10593) : self__.dispatch_fn.call(null,G__10592,G__10593));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10594 = a;
var G__10595 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10594,G__10595) : target_fn.call(null,G__10594,G__10595));
});
var G__11430__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10596 = a;
var G__10597 = b;
var G__10598 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10596,G__10597,G__10598) : self__.dispatch_fn.call(null,G__10596,G__10597,G__10598));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10599 = a;
var G__10600 = b;
var G__10601 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10599,G__10600,G__10601) : target_fn.call(null,G__10599,G__10600,G__10601));
});
var G__11430__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10602 = a;
var G__10603 = b;
var G__10604 = c;
var G__10605 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10602,G__10603,G__10604,G__10605) : self__.dispatch_fn.call(null,G__10602,G__10603,G__10604,G__10605));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10606 = a;
var G__10607 = b;
var G__10608 = c;
var G__10609 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10606,G__10607,G__10608,G__10609) : target_fn.call(null,G__10606,G__10607,G__10608,G__10609));
});
var G__11430__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10610 = a;
var G__10611 = b;
var G__10612 = c;
var G__10613 = d;
var G__10614 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10610,G__10611,G__10612,G__10613,G__10614) : self__.dispatch_fn.call(null,G__10610,G__10611,G__10612,G__10613,G__10614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10615 = a;
var G__10616 = b;
var G__10617 = c;
var G__10618 = d;
var G__10619 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10615,G__10616,G__10617,G__10618,G__10619) : target_fn.call(null,G__10615,G__10616,G__10617,G__10618,G__10619));
});
var G__11430__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10620 = a;
var G__10621 = b;
var G__10622 = c;
var G__10623 = d;
var G__10624 = e;
var G__10625 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10620,G__10621,G__10622,G__10623,G__10624,G__10625) : self__.dispatch_fn.call(null,G__10620,G__10621,G__10622,G__10623,G__10624,G__10625));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10626 = a;
var G__10627 = b;
var G__10628 = c;
var G__10629 = d;
var G__10630 = e;
var G__10631 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10626,G__10627,G__10628,G__10629,G__10630,G__10631) : target_fn.call(null,G__10626,G__10627,G__10628,G__10629,G__10630,G__10631));
});
var G__11430__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10632 = a;
var G__10633 = b;
var G__10634 = c;
var G__10635 = d;
var G__10636 = e;
var G__10637 = f;
var G__10638 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638) : self__.dispatch_fn.call(null,G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10639 = a;
var G__10640 = b;
var G__10641 = c;
var G__10642 = d;
var G__10643 = e;
var G__10644 = f;
var G__10645 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10639,G__10640,G__10641,G__10642,G__10643,G__10644,G__10645) : target_fn.call(null,G__10639,G__10640,G__10641,G__10642,G__10643,G__10644,G__10645));
});
var G__11430__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10646 = a;
var G__10647 = b;
var G__10648 = c;
var G__10649 = d;
var G__10650 = e;
var G__10651 = f;
var G__10652 = g;
var G__10653 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652,G__10653) : self__.dispatch_fn.call(null,G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652,G__10653));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10654 = a;
var G__10655 = b;
var G__10656 = c;
var G__10657 = d;
var G__10658 = e;
var G__10659 = f;
var G__10660 = g;
var G__10661 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10654,G__10655,G__10656,G__10657,G__10658,G__10659,G__10660,G__10661) : target_fn.call(null,G__10654,G__10655,G__10656,G__10657,G__10658,G__10659,G__10660,G__10661));
});
var G__11430__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10662 = a;
var G__10663 = b;
var G__10664 = c;
var G__10665 = d;
var G__10666 = e;
var G__10667 = f;
var G__10668 = g;
var G__10669 = h;
var G__10670 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10662,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670) : self__.dispatch_fn.call(null,G__10662,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10671 = a;
var G__10672 = b;
var G__10673 = c;
var G__10674 = d;
var G__10675 = e;
var G__10676 = f;
var G__10677 = g;
var G__10678 = h;
var G__10679 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677,G__10678,G__10679) : target_fn.call(null,G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677,G__10678,G__10679));
});
var G__11430__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10680 = a;
var G__10681 = b;
var G__10682 = c;
var G__10683 = d;
var G__10684 = e;
var G__10685 = f;
var G__10686 = g;
var G__10687 = h;
var G__10688 = i;
var G__10689 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687,G__10688,G__10689) : self__.dispatch_fn.call(null,G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687,G__10688,G__10689));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10690 = a;
var G__10691 = b;
var G__10692 = c;
var G__10693 = d;
var G__10694 = e;
var G__10695 = f;
var G__10696 = g;
var G__10697 = h;
var G__10698 = i;
var G__10699 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10690,G__10691,G__10692,G__10693,G__10694,G__10695,G__10696,G__10697,G__10698,G__10699) : target_fn.call(null,G__10690,G__10691,G__10692,G__10693,G__10694,G__10695,G__10696,G__10697,G__10698,G__10699));
});
var G__11430__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10700 = a;
var G__10701 = b;
var G__10702 = c;
var G__10703 = d;
var G__10704 = e;
var G__10705 = f;
var G__10706 = g;
var G__10707 = h;
var G__10708 = i;
var G__10709 = j;
var G__10710 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710) : self__.dispatch_fn.call(null,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10711 = a;
var G__10712 = b;
var G__10713 = c;
var G__10714 = d;
var G__10715 = e;
var G__10716 = f;
var G__10717 = g;
var G__10718 = h;
var G__10719 = i;
var G__10720 = j;
var G__10721 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720,G__10721) : target_fn.call(null,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720,G__10721));
});
var G__11430__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10722 = a;
var G__10723 = b;
var G__10724 = c;
var G__10725 = d;
var G__10726 = e;
var G__10727 = f;
var G__10728 = g;
var G__10729 = h;
var G__10730 = i;
var G__10731 = j;
var G__10732 = k;
var G__10733 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733) : self__.dispatch_fn.call(null,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10734 = a;
var G__10735 = b;
var G__10736 = c;
var G__10737 = d;
var G__10738 = e;
var G__10739 = f;
var G__10740 = g;
var G__10741 = h;
var G__10742 = i;
var G__10743 = j;
var G__10744 = k;
var G__10745 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10734,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743,G__10744,G__10745) : target_fn.call(null,G__10734,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743,G__10744,G__10745));
});
var G__11430__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10746 = a;
var G__10747 = b;
var G__10748 = c;
var G__10749 = d;
var G__10750 = e;
var G__10751 = f;
var G__10752 = g;
var G__10753 = h;
var G__10754 = i;
var G__10755 = j;
var G__10756 = k;
var G__10757 = l;
var G__10758 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10746,G__10747,G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758) : self__.dispatch_fn.call(null,G__10746,G__10747,G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10759 = a;
var G__10760 = b;
var G__10761 = c;
var G__10762 = d;
var G__10763 = e;
var G__10764 = f;
var G__10765 = g;
var G__10766 = h;
var G__10767 = i;
var G__10768 = j;
var G__10769 = k;
var G__10770 = l;
var G__10771 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10759,G__10760,G__10761,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771) : target_fn.call(null,G__10759,G__10760,G__10761,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771));
});
var G__11430__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10772 = a;
var G__10773 = b;
var G__10774 = c;
var G__10775 = d;
var G__10776 = e;
var G__10777 = f;
var G__10778 = g;
var G__10779 = h;
var G__10780 = i;
var G__10781 = j;
var G__10782 = k;
var G__10783 = l;
var G__10784 = m;
var G__10785 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779,G__10780,G__10781,G__10782,G__10783,G__10784,G__10785) : self__.dispatch_fn.call(null,G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779,G__10780,G__10781,G__10782,G__10783,G__10784,G__10785));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10786 = a;
var G__10787 = b;
var G__10788 = c;
var G__10789 = d;
var G__10790 = e;
var G__10791 = f;
var G__10792 = g;
var G__10793 = h;
var G__10794 = i;
var G__10795 = j;
var G__10796 = k;
var G__10797 = l;
var G__10798 = m;
var G__10799 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799) : target_fn.call(null,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799));
});
var G__11430__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10800 = a;
var G__10801 = b;
var G__10802 = c;
var G__10803 = d;
var G__10804 = e;
var G__10805 = f;
var G__10806 = g;
var G__10807 = h;
var G__10808 = i;
var G__10809 = j;
var G__10810 = k;
var G__10811 = l;
var G__10812 = m;
var G__10813 = n;
var G__10814 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10800,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814) : self__.dispatch_fn.call(null,G__10800,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10815 = a;
var G__10816 = b;
var G__10817 = c;
var G__10818 = d;
var G__10819 = e;
var G__10820 = f;
var G__10821 = g;
var G__10822 = h;
var G__10823 = i;
var G__10824 = j;
var G__10825 = k;
var G__10826 = l;
var G__10827 = m;
var G__10828 = n;
var G__10829 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10815,G__10816,G__10817,G__10818,G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829) : target_fn.call(null,G__10815,G__10816,G__10817,G__10818,G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829));
});
var G__11430__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10830 = a;
var G__10831 = b;
var G__10832 = c;
var G__10833 = d;
var G__10834 = e;
var G__10835 = f;
var G__10836 = g;
var G__10837 = h;
var G__10838 = i;
var G__10839 = j;
var G__10840 = k;
var G__10841 = l;
var G__10842 = m;
var G__10843 = n;
var G__10844 = o;
var G__10845 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10830,G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844,G__10845) : self__.dispatch_fn.call(null,G__10830,G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844,G__10845));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10846 = a;
var G__10847 = b;
var G__10848 = c;
var G__10849 = d;
var G__10850 = e;
var G__10851 = f;
var G__10852 = g;
var G__10853 = h;
var G__10854 = i;
var G__10855 = j;
var G__10856 = k;
var G__10857 = l;
var G__10858 = m;
var G__10859 = n;
var G__10860 = o;
var G__10861 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10846,G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861) : target_fn.call(null,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861));
});
var G__11430__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10862 = a;
var G__10863 = b;
var G__10864 = c;
var G__10865 = d;
var G__10866 = e;
var G__10867 = f;
var G__10868 = g;
var G__10869 = h;
var G__10870 = i;
var G__10871 = j;
var G__10872 = k;
var G__10873 = l;
var G__10874 = m;
var G__10875 = n;
var G__10876 = o;
var G__10877 = p;
var G__10878 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10862,G__10863,G__10864,G__10865,G__10866,G__10867,G__10868,G__10869,G__10870,G__10871,G__10872,G__10873,G__10874,G__10875,G__10876,G__10877,G__10878) : self__.dispatch_fn.call(null,G__10862,G__10863,G__10864,G__10865,G__10866,G__10867,G__10868,G__10869,G__10870,G__10871,G__10872,G__10873,G__10874,G__10875,G__10876,G__10877,G__10878));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10879 = a;
var G__10880 = b;
var G__10881 = c;
var G__10882 = d;
var G__10883 = e;
var G__10884 = f;
var G__10885 = g;
var G__10886 = h;
var G__10887 = i;
var G__10888 = j;
var G__10889 = k;
var G__10890 = l;
var G__10891 = m;
var G__10892 = n;
var G__10893 = o;
var G__10894 = p;
var G__10895 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10879,G__10880,G__10881,G__10882,G__10883,G__10884,G__10885,G__10886,G__10887,G__10888,G__10889,G__10890,G__10891,G__10892,G__10893,G__10894,G__10895) : target_fn.call(null,G__10879,G__10880,G__10881,G__10882,G__10883,G__10884,G__10885,G__10886,G__10887,G__10888,G__10889,G__10890,G__10891,G__10892,G__10893,G__10894,G__10895));
});
var G__11430__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10896 = a;
var G__10897 = b;
var G__10898 = c;
var G__10899 = d;
var G__10900 = e;
var G__10901 = f;
var G__10902 = g;
var G__10903 = h;
var G__10904 = i;
var G__10905 = j;
var G__10906 = k;
var G__10907 = l;
var G__10908 = m;
var G__10909 = n;
var G__10910 = o;
var G__10911 = p;
var G__10912 = q;
var G__10913 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10896,G__10897,G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904,G__10905,G__10906,G__10907,G__10908,G__10909,G__10910,G__10911,G__10912,G__10913) : self__.dispatch_fn.call(null,G__10896,G__10897,G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904,G__10905,G__10906,G__10907,G__10908,G__10909,G__10910,G__10911,G__10912,G__10913));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10914 = a;
var G__10915 = b;
var G__10916 = c;
var G__10917 = d;
var G__10918 = e;
var G__10919 = f;
var G__10920 = g;
var G__10921 = h;
var G__10922 = i;
var G__10923 = j;
var G__10924 = k;
var G__10925 = l;
var G__10926 = m;
var G__10927 = n;
var G__10928 = o;
var G__10929 = p;
var G__10930 = q;
var G__10931 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10914,G__10915,G__10916,G__10917,G__10918,G__10919,G__10920,G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931) : target_fn.call(null,G__10914,G__10915,G__10916,G__10917,G__10918,G__10919,G__10920,G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931));
});
var G__11430__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10932 = a;
var G__10933 = b;
var G__10934 = c;
var G__10935 = d;
var G__10936 = e;
var G__10937 = f;
var G__10938 = g;
var G__10939 = h;
var G__10940 = i;
var G__10941 = j;
var G__10942 = k;
var G__10943 = l;
var G__10944 = m;
var G__10945 = n;
var G__10946 = o;
var G__10947 = p;
var G__10948 = q;
var G__10949 = r;
var G__10950 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10932,G__10933,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939,G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950) : self__.dispatch_fn.call(null,G__10932,G__10933,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939,G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10951 = a;
var G__10952 = b;
var G__10953 = c;
var G__10954 = d;
var G__10955 = e;
var G__10956 = f;
var G__10957 = g;
var G__10958 = h;
var G__10959 = i;
var G__10960 = j;
var G__10961 = k;
var G__10962 = l;
var G__10963 = m;
var G__10964 = n;
var G__10965 = o;
var G__10966 = p;
var G__10967 = q;
var G__10968 = r;
var G__10969 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10951,G__10952,G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962,G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969) : target_fn.call(null,G__10951,G__10952,G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962,G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969));
});
var G__11430__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10970 = a;
var G__10971 = b;
var G__10972 = c;
var G__10973 = d;
var G__10974 = e;
var G__10975 = f;
var G__10976 = g;
var G__10977 = h;
var G__10978 = i;
var G__10979 = j;
var G__10980 = k;
var G__10981 = l;
var G__10982 = m;
var G__10983 = n;
var G__10984 = o;
var G__10985 = p;
var G__10986 = q;
var G__10987 = r;
var G__10988 = s;
var G__10989 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989) : self__.dispatch_fn.call(null,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10990 = a;
var G__10991 = b;
var G__10992 = c;
var G__10993 = d;
var G__10994 = e;
var G__10995 = f;
var G__10996 = g;
var G__10997 = h;
var G__10998 = i;
var G__10999 = j;
var G__11000 = k;
var G__11001 = l;
var G__11002 = m;
var G__11003 = n;
var G__11004 = o;
var G__11005 = p;
var G__11006 = q;
var G__11007 = r;
var G__11008 = s;
var G__11009 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10990,G__10991,G__10992,G__10993,G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008,G__11009) : target_fn.call(null,G__10990,G__10991,G__10992,G__10993,G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008,G__11009));
});
var G__11430__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__11430 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11430__1.call(this,self__);
case 2:
return G__11430__2.call(this,self__,a);
case 3:
return G__11430__3.call(this,self__,a,b);
case 4:
return G__11430__4.call(this,self__,a,b,c);
case 5:
return G__11430__5.call(this,self__,a,b,c,d);
case 6:
return G__11430__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11430__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11430__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11430__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11430__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11430__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11430__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11430__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11430__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11430__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11430__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11430__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11430__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11430__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11430__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11430__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11430__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11430.cljs$core$IFn$_invoke$arity$1 = G__11430__1;
G__11430.cljs$core$IFn$_invoke$arity$2 = G__11430__2;
G__11430.cljs$core$IFn$_invoke$arity$3 = G__11430__3;
G__11430.cljs$core$IFn$_invoke$arity$4 = G__11430__4;
G__11430.cljs$core$IFn$_invoke$arity$5 = G__11430__5;
G__11430.cljs$core$IFn$_invoke$arity$6 = G__11430__6;
G__11430.cljs$core$IFn$_invoke$arity$7 = G__11430__7;
G__11430.cljs$core$IFn$_invoke$arity$8 = G__11430__8;
G__11430.cljs$core$IFn$_invoke$arity$9 = G__11430__9;
G__11430.cljs$core$IFn$_invoke$arity$10 = G__11430__10;
G__11430.cljs$core$IFn$_invoke$arity$11 = G__11430__11;
G__11430.cljs$core$IFn$_invoke$arity$12 = G__11430__12;
G__11430.cljs$core$IFn$_invoke$arity$13 = G__11430__13;
G__11430.cljs$core$IFn$_invoke$arity$14 = G__11430__14;
G__11430.cljs$core$IFn$_invoke$arity$15 = G__11430__15;
G__11430.cljs$core$IFn$_invoke$arity$16 = G__11430__16;
G__11430.cljs$core$IFn$_invoke$arity$17 = G__11430__17;
G__11430.cljs$core$IFn$_invoke$arity$18 = G__11430__18;
G__11430.cljs$core$IFn$_invoke$arity$19 = G__11430__19;
G__11430.cljs$core$IFn$_invoke$arity$20 = G__11430__20;
G__11430.cljs$core$IFn$_invoke$arity$21 = G__11430__21;
G__11430.cljs$core$IFn$_invoke$arity$22 = G__11430__22;
return G__11430;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args10582){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10582)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11010 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11010) : self__.dispatch_fn.call(null,G__11010));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11011 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11011) : target_fn.call(null,G__11011));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11012 = a;
var G__11013 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11012,G__11013) : self__.dispatch_fn.call(null,G__11012,G__11013));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11014 = a;
var G__11015 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11014,G__11015) : target_fn.call(null,G__11014,G__11015));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11016 = a;
var G__11017 = b;
var G__11018 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11016,G__11017,G__11018) : self__.dispatch_fn.call(null,G__11016,G__11017,G__11018));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11019 = a;
var G__11020 = b;
var G__11021 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11019,G__11020,G__11021) : target_fn.call(null,G__11019,G__11020,G__11021));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11022 = a;
var G__11023 = b;
var G__11024 = c;
var G__11025 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11022,G__11023,G__11024,G__11025) : self__.dispatch_fn.call(null,G__11022,G__11023,G__11024,G__11025));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11026 = a;
var G__11027 = b;
var G__11028 = c;
var G__11029 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11026,G__11027,G__11028,G__11029) : target_fn.call(null,G__11026,G__11027,G__11028,G__11029));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11030 = a;
var G__11031 = b;
var G__11032 = c;
var G__11033 = d;
var G__11034 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11030,G__11031,G__11032,G__11033,G__11034) : self__.dispatch_fn.call(null,G__11030,G__11031,G__11032,G__11033,G__11034));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11035 = a;
var G__11036 = b;
var G__11037 = c;
var G__11038 = d;
var G__11039 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11035,G__11036,G__11037,G__11038,G__11039) : target_fn.call(null,G__11035,G__11036,G__11037,G__11038,G__11039));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11040 = a;
var G__11041 = b;
var G__11042 = c;
var G__11043 = d;
var G__11044 = e;
var G__11045 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11040,G__11041,G__11042,G__11043,G__11044,G__11045) : self__.dispatch_fn.call(null,G__11040,G__11041,G__11042,G__11043,G__11044,G__11045));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11046 = a;
var G__11047 = b;
var G__11048 = c;
var G__11049 = d;
var G__11050 = e;
var G__11051 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11046,G__11047,G__11048,G__11049,G__11050,G__11051) : target_fn.call(null,G__11046,G__11047,G__11048,G__11049,G__11050,G__11051));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11052 = a;
var G__11053 = b;
var G__11054 = c;
var G__11055 = d;
var G__11056 = e;
var G__11057 = f;
var G__11058 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058) : self__.dispatch_fn.call(null,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11059 = a;
var G__11060 = b;
var G__11061 = c;
var G__11062 = d;
var G__11063 = e;
var G__11064 = f;
var G__11065 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065) : target_fn.call(null,G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11066 = a;
var G__11067 = b;
var G__11068 = c;
var G__11069 = d;
var G__11070 = e;
var G__11071 = f;
var G__11072 = g;
var G__11073 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072,G__11073) : self__.dispatch_fn.call(null,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072,G__11073));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11074 = a;
var G__11075 = b;
var G__11076 = c;
var G__11077 = d;
var G__11078 = e;
var G__11079 = f;
var G__11080 = g;
var G__11081 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11074,G__11075,G__11076,G__11077,G__11078,G__11079,G__11080,G__11081) : target_fn.call(null,G__11074,G__11075,G__11076,G__11077,G__11078,G__11079,G__11080,G__11081));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11082 = a;
var G__11083 = b;
var G__11084 = c;
var G__11085 = d;
var G__11086 = e;
var G__11087 = f;
var G__11088 = g;
var G__11089 = h;
var G__11090 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090) : self__.dispatch_fn.call(null,G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11091 = a;
var G__11092 = b;
var G__11093 = c;
var G__11094 = d;
var G__11095 = e;
var G__11096 = f;
var G__11097 = g;
var G__11098 = h;
var G__11099 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11091,G__11092,G__11093,G__11094,G__11095,G__11096,G__11097,G__11098,G__11099) : target_fn.call(null,G__11091,G__11092,G__11093,G__11094,G__11095,G__11096,G__11097,G__11098,G__11099));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11100 = a;
var G__11101 = b;
var G__11102 = c;
var G__11103 = d;
var G__11104 = e;
var G__11105 = f;
var G__11106 = g;
var G__11107 = h;
var G__11108 = i;
var G__11109 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11100,G__11101,G__11102,G__11103,G__11104,G__11105,G__11106,G__11107,G__11108,G__11109) : self__.dispatch_fn.call(null,G__11100,G__11101,G__11102,G__11103,G__11104,G__11105,G__11106,G__11107,G__11108,G__11109));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11110 = a;
var G__11111 = b;
var G__11112 = c;
var G__11113 = d;
var G__11114 = e;
var G__11115 = f;
var G__11116 = g;
var G__11117 = h;
var G__11118 = i;
var G__11119 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11110,G__11111,G__11112,G__11113,G__11114,G__11115,G__11116,G__11117,G__11118,G__11119) : target_fn.call(null,G__11110,G__11111,G__11112,G__11113,G__11114,G__11115,G__11116,G__11117,G__11118,G__11119));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11120 = a;
var G__11121 = b;
var G__11122 = c;
var G__11123 = d;
var G__11124 = e;
var G__11125 = f;
var G__11126 = g;
var G__11127 = h;
var G__11128 = i;
var G__11129 = j;
var G__11130 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11120,G__11121,G__11122,G__11123,G__11124,G__11125,G__11126,G__11127,G__11128,G__11129,G__11130) : self__.dispatch_fn.call(null,G__11120,G__11121,G__11122,G__11123,G__11124,G__11125,G__11126,G__11127,G__11128,G__11129,G__11130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11131 = a;
var G__11132 = b;
var G__11133 = c;
var G__11134 = d;
var G__11135 = e;
var G__11136 = f;
var G__11137 = g;
var G__11138 = h;
var G__11139 = i;
var G__11140 = j;
var G__11141 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11131,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138,G__11139,G__11140,G__11141) : target_fn.call(null,G__11131,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138,G__11139,G__11140,G__11141));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11142 = a;
var G__11143 = b;
var G__11144 = c;
var G__11145 = d;
var G__11146 = e;
var G__11147 = f;
var G__11148 = g;
var G__11149 = h;
var G__11150 = i;
var G__11151 = j;
var G__11152 = k;
var G__11153 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11142,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148,G__11149,G__11150,G__11151,G__11152,G__11153) : self__.dispatch_fn.call(null,G__11142,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148,G__11149,G__11150,G__11151,G__11152,G__11153));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11154 = a;
var G__11155 = b;
var G__11156 = c;
var G__11157 = d;
var G__11158 = e;
var G__11159 = f;
var G__11160 = g;
var G__11161 = h;
var G__11162 = i;
var G__11163 = j;
var G__11164 = k;
var G__11165 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164,G__11165) : target_fn.call(null,G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164,G__11165));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11166 = a;
var G__11167 = b;
var G__11168 = c;
var G__11169 = d;
var G__11170 = e;
var G__11171 = f;
var G__11172 = g;
var G__11173 = h;
var G__11174 = i;
var G__11175 = j;
var G__11176 = k;
var G__11177 = l;
var G__11178 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11166,G__11167,G__11168,G__11169,G__11170,G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178) : self__.dispatch_fn.call(null,G__11166,G__11167,G__11168,G__11169,G__11170,G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11179 = a;
var G__11180 = b;
var G__11181 = c;
var G__11182 = d;
var G__11183 = e;
var G__11184 = f;
var G__11185 = g;
var G__11186 = h;
var G__11187 = i;
var G__11188 = j;
var G__11189 = k;
var G__11190 = l;
var G__11191 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11179,G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187,G__11188,G__11189,G__11190,G__11191) : target_fn.call(null,G__11179,G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187,G__11188,G__11189,G__11190,G__11191));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11192 = a;
var G__11193 = b;
var G__11194 = c;
var G__11195 = d;
var G__11196 = e;
var G__11197 = f;
var G__11198 = g;
var G__11199 = h;
var G__11200 = i;
var G__11201 = j;
var G__11202 = k;
var G__11203 = l;
var G__11204 = m;
var G__11205 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11192,G__11193,G__11194,G__11195,G__11196,G__11197,G__11198,G__11199,G__11200,G__11201,G__11202,G__11203,G__11204,G__11205) : self__.dispatch_fn.call(null,G__11192,G__11193,G__11194,G__11195,G__11196,G__11197,G__11198,G__11199,G__11200,G__11201,G__11202,G__11203,G__11204,G__11205));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11206 = a;
var G__11207 = b;
var G__11208 = c;
var G__11209 = d;
var G__11210 = e;
var G__11211 = f;
var G__11212 = g;
var G__11213 = h;
var G__11214 = i;
var G__11215 = j;
var G__11216 = k;
var G__11217 = l;
var G__11218 = m;
var G__11219 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11206,G__11207,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215,G__11216,G__11217,G__11218,G__11219) : target_fn.call(null,G__11206,G__11207,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215,G__11216,G__11217,G__11218,G__11219));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11220 = a;
var G__11221 = b;
var G__11222 = c;
var G__11223 = d;
var G__11224 = e;
var G__11225 = f;
var G__11226 = g;
var G__11227 = h;
var G__11228 = i;
var G__11229 = j;
var G__11230 = k;
var G__11231 = l;
var G__11232 = m;
var G__11233 = n;
var G__11234 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11220,G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227,G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234) : self__.dispatch_fn.call(null,G__11220,G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227,G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11235 = a;
var G__11236 = b;
var G__11237 = c;
var G__11238 = d;
var G__11239 = e;
var G__11240 = f;
var G__11241 = g;
var G__11242 = h;
var G__11243 = i;
var G__11244 = j;
var G__11245 = k;
var G__11246 = l;
var G__11247 = m;
var G__11248 = n;
var G__11249 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11235,G__11236,G__11237,G__11238,G__11239,G__11240,G__11241,G__11242,G__11243,G__11244,G__11245,G__11246,G__11247,G__11248,G__11249) : target_fn.call(null,G__11235,G__11236,G__11237,G__11238,G__11239,G__11240,G__11241,G__11242,G__11243,G__11244,G__11245,G__11246,G__11247,G__11248,G__11249));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11250 = a;
var G__11251 = b;
var G__11252 = c;
var G__11253 = d;
var G__11254 = e;
var G__11255 = f;
var G__11256 = g;
var G__11257 = h;
var G__11258 = i;
var G__11259 = j;
var G__11260 = k;
var G__11261 = l;
var G__11262 = m;
var G__11263 = n;
var G__11264 = o;
var G__11265 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11250,G__11251,G__11252,G__11253,G__11254,G__11255,G__11256,G__11257,G__11258,G__11259,G__11260,G__11261,G__11262,G__11263,G__11264,G__11265) : self__.dispatch_fn.call(null,G__11250,G__11251,G__11252,G__11253,G__11254,G__11255,G__11256,G__11257,G__11258,G__11259,G__11260,G__11261,G__11262,G__11263,G__11264,G__11265));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11266 = a;
var G__11267 = b;
var G__11268 = c;
var G__11269 = d;
var G__11270 = e;
var G__11271 = f;
var G__11272 = g;
var G__11273 = h;
var G__11274 = i;
var G__11275 = j;
var G__11276 = k;
var G__11277 = l;
var G__11278 = m;
var G__11279 = n;
var G__11280 = o;
var G__11281 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11266,G__11267,G__11268,G__11269,G__11270,G__11271,G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279,G__11280,G__11281) : target_fn.call(null,G__11266,G__11267,G__11268,G__11269,G__11270,G__11271,G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279,G__11280,G__11281));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11282 = a;
var G__11283 = b;
var G__11284 = c;
var G__11285 = d;
var G__11286 = e;
var G__11287 = f;
var G__11288 = g;
var G__11289 = h;
var G__11290 = i;
var G__11291 = j;
var G__11292 = k;
var G__11293 = l;
var G__11294 = m;
var G__11295 = n;
var G__11296 = o;
var G__11297 = p;
var G__11298 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288,G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298) : self__.dispatch_fn.call(null,G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288,G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11299 = a;
var G__11300 = b;
var G__11301 = c;
var G__11302 = d;
var G__11303 = e;
var G__11304 = f;
var G__11305 = g;
var G__11306 = h;
var G__11307 = i;
var G__11308 = j;
var G__11309 = k;
var G__11310 = l;
var G__11311 = m;
var G__11312 = n;
var G__11313 = o;
var G__11314 = p;
var G__11315 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11299,G__11300,G__11301,G__11302,G__11303,G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315) : target_fn.call(null,G__11299,G__11300,G__11301,G__11302,G__11303,G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11316 = a;
var G__11317 = b;
var G__11318 = c;
var G__11319 = d;
var G__11320 = e;
var G__11321 = f;
var G__11322 = g;
var G__11323 = h;
var G__11324 = i;
var G__11325 = j;
var G__11326 = k;
var G__11327 = l;
var G__11328 = m;
var G__11329 = n;
var G__11330 = o;
var G__11331 = p;
var G__11332 = q;
var G__11333 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331,G__11332,G__11333) : self__.dispatch_fn.call(null,G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331,G__11332,G__11333));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11334 = a;
var G__11335 = b;
var G__11336 = c;
var G__11337 = d;
var G__11338 = e;
var G__11339 = f;
var G__11340 = g;
var G__11341 = h;
var G__11342 = i;
var G__11343 = j;
var G__11344 = k;
var G__11345 = l;
var G__11346 = m;
var G__11347 = n;
var G__11348 = o;
var G__11349 = p;
var G__11350 = q;
var G__11351 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351) : target_fn.call(null,G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11352 = a;
var G__11353 = b;
var G__11354 = c;
var G__11355 = d;
var G__11356 = e;
var G__11357 = f;
var G__11358 = g;
var G__11359 = h;
var G__11360 = i;
var G__11361 = j;
var G__11362 = k;
var G__11363 = l;
var G__11364 = m;
var G__11365 = n;
var G__11366 = o;
var G__11367 = p;
var G__11368 = q;
var G__11369 = r;
var G__11370 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370) : self__.dispatch_fn.call(null,G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11371 = a;
var G__11372 = b;
var G__11373 = c;
var G__11374 = d;
var G__11375 = e;
var G__11376 = f;
var G__11377 = g;
var G__11378 = h;
var G__11379 = i;
var G__11380 = j;
var G__11381 = k;
var G__11382 = l;
var G__11383 = m;
var G__11384 = n;
var G__11385 = o;
var G__11386 = p;
var G__11387 = q;
var G__11388 = r;
var G__11389 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389) : target_fn.call(null,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11390 = a;
var G__11391 = b;
var G__11392 = c;
var G__11393 = d;
var G__11394 = e;
var G__11395 = f;
var G__11396 = g;
var G__11397 = h;
var G__11398 = i;
var G__11399 = j;
var G__11400 = k;
var G__11401 = l;
var G__11402 = m;
var G__11403 = n;
var G__11404 = o;
var G__11405 = p;
var G__11406 = q;
var G__11407 = r;
var G__11408 = s;
var G__11409 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409) : self__.dispatch_fn.call(null,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11410 = a;
var G__11411 = b;
var G__11412 = c;
var G__11413 = d;
var G__11414 = e;
var G__11415 = f;
var G__11416 = g;
var G__11417 = h;
var G__11418 = i;
var G__11419 = j;
var G__11420 = k;
var G__11421 = l;
var G__11422 = m;
var G__11423 = n;
var G__11424 = o;
var G__11425 = p;
var G__11426 = q;
var G__11427 = r;
var G__11428 = s;
var G__11429 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11410,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427,G__11428,G__11429) : target_fn.call(null,G__11410,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427,G__11428,G__11429));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11431 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__11431);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__11436 = msg;
return Error(G__11436);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__11441 = x;
var G__11442 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11441,G__11442) : pred.call(null,G__11441,G__11442));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11443 = y;
var G__11444 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11443,G__11444) : pred.call(null,G__11443,G__11444));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map